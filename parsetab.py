
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL COLON COMMA DIVIDE DO ELSE ENDL EQUAL EQUALTO FALSE FLOAT FUNCTION GREATERTHAN ID IF INT LBRACE LBRACKET LPAREN MAIN MINUS OR PLUS PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMICOLON SMALLERTHAN STRING THEN TIMES TO TRUE VARS WHILE WRITE\n    program : goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main\n    \n    goto_main : empty\n    \n    id_list : ID COMMA id_list\n            | ID\n    \n    define_vars_global : type COLON id_list SEMICOLON define_vars_global\n                | empty\n    \n    type : INT\n         | FLOAT\n         | STRING\n    \n    define_function : FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function\n                    | empty\n    \n    endfunc : empty\n    \n    define_vars_function : type COLON id_list SEMICOLON define_vars_function\n                | empty\n    \n    function : ID LPAREN era_function expression RPAREN SEMICOLON\n    \n    era_function : empty\n    \n    main : MAIN LPAREN RPAREN LBRACE statute RBRACE\n    \n    parameters : LPAREN type COLON id_list RPAREN\n    \n    statute : assignation statute\n            | decision statute\n            | condition statute\n            | return statute\n            | function statute\n            | empty\n    \n    assignation : ID EQUAL expression SEMICOLON\n    \n    \n    decision : IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE\n             | IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE\n    \n    def_else : empty\n    \n    condition : WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE\n    \n    expression_bool : expression GREATERTHAN term\n                    | expression SMALLERTHAN term\n                    | expression EQUALTO term \n    \n    expression_bool_while : expression GREATERTHAN term\n                          | expression SMALLERTHAN term\n                          | expression EQUALTO term \n    \n    return : RETURN LPAREN expression RPAREN SEMICOLON\n    \n    expression : expression PLUS term\n               | expression MINUS term      \n    \n    expression : term\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n    \n    term : factor\n    \n    factor : FLOAT\n           | INT\n           | STRING \n    \n    factor : function\n    \n    factor : ID\n    \n    factor : PLUS factor\n           | MINUS factor\n    \n    factor : LPAREN expression RPAREN\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,2,3,],[-51,4,-2,]),'$end':([1,18,50,],[0,-1,-17,]),'ID':([4,11,12,13,17,20,26,32,36,37,38,39,40,49,56,57,58,59,60,61,62,66,68,74,75,76,85,86,87,89,90,95,96,97,99,100,101,119,123,124,125,129,130,132,133,134,136,],[5,-7,-8,-9,22,24,22,42,42,42,42,42,42,22,64,-51,64,64,64,22,42,64,64,64,64,-16,-25,64,64,64,64,64,64,64,64,64,64,-36,-15,42,42,-27,-29,-51,42,-28,-26,]),'SEMICOLON':([5,21,22,31,64,65,67,69,70,71,72,73,82,88,91,102,105,106,107,108,109,110,123,],[6,25,-4,-3,-47,85,-39,-42,-43,-44,-45,-46,103,-48,-49,119,-37,-38,-40,-41,-50,123,-15,]),'VARS':([6,28,84,],[7,33,-18,]),'INT':([7,15,25,29,33,56,57,58,59,60,66,68,74,75,76,86,87,89,90,95,96,97,99,100,101,103,],[11,11,11,11,11,71,-51,71,71,71,71,71,71,71,-16,71,71,71,71,71,71,71,71,71,71,11,]),'FLOAT':([7,15,25,29,33,56,57,58,59,60,66,68,74,75,76,86,87,89,90,95,96,97,99,100,101,103,],[12,12,12,12,12,70,-51,70,70,70,70,70,70,70,-16,70,70,70,70,70,70,70,70,70,70,12,]),'STRING':([7,15,25,29,33,56,57,58,59,60,66,68,74,75,76,86,87,89,90,95,96,97,99,100,101,103,],[13,13,13,13,13,72,-51,72,72,72,72,72,72,72,-16,72,72,72,72,72,72,72,72,72,72,13,]),'FUNCTION':([7,8,10,25,30,104,121,122,],[-51,15,-6,-51,-5,-51,15,-12,]),'MAIN':([7,8,10,14,16,25,30,104,121,122,126,],[-51,-51,-6,19,-11,-51,-5,-51,-51,-12,-10,]),'COLON':([9,11,12,13,34,46,],[17,-7,-8,-9,49,61,]),'LPAREN':([19,24,42,43,44,45,56,57,58,59,60,64,66,68,74,75,76,86,87,89,90,95,96,97,99,100,101,],[23,29,57,58,59,60,74,-51,74,74,74,57,74,74,74,74,-16,74,74,74,74,74,74,74,74,74,74,]),'COMMA':([22,],[26,]),'RPAREN':([22,23,31,63,64,67,69,70,71,72,73,77,79,81,88,91,92,93,105,106,107,108,109,112,113,114,116,117,118,123,],[-4,27,-3,84,-47,-39,-42,-43,-44,-45,-46,94,98,102,-48,-49,109,110,-37,-38,-40,-41,-50,-30,-31,-32,-33,-34,-35,-15,]),'LBRACE':([27,33,47,48,103,111,115,120,131,],[32,-51,62,-14,-51,124,125,-13,132,]),'IF':([32,36,37,38,39,40,62,85,119,123,124,125,129,130,132,133,134,136,],[43,43,43,43,43,43,43,-25,-36,-15,43,43,-27,-29,-51,43,-28,-26,]),'WHILE':([32,36,37,38,39,40,62,85,119,123,124,125,129,130,132,133,134,136,],[44,44,44,44,44,44,44,-25,-36,-15,44,44,-27,-29,-51,44,-28,-26,]),'RETURN':([32,36,37,38,39,40,62,85,119,123,124,125,129,130,132,133,134,136,],[45,45,45,45,45,45,45,-25,-36,-15,45,45,-27,-29,-51,45,-28,-26,]),'RBRACE':([32,35,36,37,38,39,40,41,51,52,53,54,55,62,83,85,119,123,124,125,127,128,129,130,132,133,134,135,136,],[-51,50,-51,-51,-51,-51,-51,-24,-19,-20,-21,-22,-23,-51,104,-25,-36,-15,-51,-51,129,130,-27,-29,-51,-51,-28,136,-26,]),'EQUAL':([42,],[56,]),'PLUS':([56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,81,86,87,88,89,90,91,92,93,95,96,97,99,100,101,105,106,107,108,109,123,],[66,-51,66,66,66,-47,86,66,-39,66,-42,-43,-44,-45,-46,66,66,-16,86,86,86,66,66,-48,66,66,-49,86,86,66,66,66,66,66,66,-37,-38,-40,-41,-50,-15,]),'MINUS':([56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,81,86,87,88,89,90,91,92,93,95,96,97,99,100,101,105,106,107,108,109,123,],[68,-51,68,68,68,-47,87,68,-39,68,-42,-43,-44,-45,-46,68,68,-16,87,87,87,68,68,-48,68,68,-49,87,87,68,68,68,68,68,68,-37,-38,-40,-41,-50,-15,]),'TIMES':([64,67,69,70,71,72,73,88,91,105,106,107,108,109,112,113,114,116,117,118,123,],[-47,89,-42,-43,-44,-45,-46,-48,-49,89,89,-40,-41,-50,89,89,89,89,89,89,-15,]),'DIVIDE':([64,67,69,70,71,72,73,88,91,105,106,107,108,109,112,113,114,116,117,118,123,],[-47,90,-42,-43,-44,-45,-46,-48,-49,90,90,-40,-41,-50,90,90,90,90,90,90,-15,]),'GREATERTHAN':([64,67,69,70,71,72,73,78,80,88,91,105,106,107,108,109,123,],[-47,-39,-42,-43,-44,-45,-46,95,99,-48,-49,-37,-38,-40,-41,-50,-15,]),'SMALLERTHAN':([64,67,69,70,71,72,73,78,80,88,91,105,106,107,108,109,123,],[-47,-39,-42,-43,-44,-45,-46,96,100,-48,-49,-37,-38,-40,-41,-50,-15,]),'EQUALTO':([64,67,69,70,71,72,73,78,80,88,91,105,106,107,108,109,123,],[-47,-39,-42,-43,-44,-45,-46,97,101,-48,-49,-37,-38,-40,-41,-50,-15,]),'THEN':([94,],[111,]),'DO':([98,],[115,]),'ELSE':([129,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([0,],[2,]),'empty':([0,7,8,25,32,33,36,37,38,39,40,57,62,103,104,121,124,125,132,133,],[3,10,16,10,41,48,41,41,41,41,41,76,41,48,122,16,41,41,134,41,]),'define_vars_global':([7,25,],[8,30,]),'type':([7,15,25,29,33,103,],[9,20,9,34,46,46,]),'define_function':([8,121,],[14,126,]),'main':([14,],[18,]),'id_list':([17,26,49,61,],[21,31,63,82,]),'parameters':([24,],[28,]),'statute':([32,36,37,38,39,40,62,124,125,133,],[35,51,52,53,54,55,83,127,128,135,]),'assignation':([32,36,37,38,39,40,62,124,125,133,],[36,36,36,36,36,36,36,36,36,36,]),'decision':([32,36,37,38,39,40,62,124,125,133,],[37,37,37,37,37,37,37,37,37,37,]),'condition':([32,36,37,38,39,40,62,124,125,133,],[38,38,38,38,38,38,38,38,38,38,]),'return':([32,36,37,38,39,40,62,124,125,133,],[39,39,39,39,39,39,39,39,39,39,]),'function':([32,36,37,38,39,40,56,58,59,60,62,66,68,74,75,86,87,89,90,95,96,97,99,100,101,124,125,133,],[40,40,40,40,40,40,73,73,73,73,40,73,73,73,73,73,73,73,73,73,73,73,73,73,73,40,40,40,]),'define_vars_function':([33,103,],[47,120,]),'expression':([56,58,59,60,74,75,],[65,78,80,81,92,93,]),'term':([56,58,59,60,74,75,86,87,95,96,97,99,100,101,],[67,67,67,67,67,67,105,106,112,113,114,116,117,118,]),'factor':([56,58,59,60,66,68,74,75,86,87,89,90,95,96,97,99,100,101,],[69,69,69,69,88,91,69,69,69,69,107,108,69,69,69,69,69,69,]),'era_function':([57,],[75,]),'expression_bool':([58,],[77,]),'expression_bool_while':([59,],[79,]),'endfunc':([104,],[121,]),'def_else':([132,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main','program',8,'p_program','parser_p.py',24),
  ('goto_main -> empty','goto_main',1,'p_goto_main','parser_p.py',30),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','parser_p.py',36),
  ('id_list -> ID','id_list',1,'p_id_list','parser_p.py',37),
  ('define_vars_global -> type COLON id_list SEMICOLON define_vars_global','define_vars_global',5,'p_define_vars_global','parser_p.py',46),
  ('define_vars_global -> empty','define_vars_global',1,'p_define_vars_global','parser_p.py',47),
  ('type -> INT','type',1,'p_type','parser_p.py',74),
  ('type -> FLOAT','type',1,'p_type','parser_p.py',75),
  ('type -> STRING','type',1,'p_type','parser_p.py',76),
  ('define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function','define_function',11,'p_define_function','parser_p.py',82),
  ('define_function -> empty','define_function',1,'p_define_function','parser_p.py',83),
  ('endfunc -> empty','endfunc',1,'p_endfunc','parser_p.py',95),
  ('define_vars_function -> type COLON id_list SEMICOLON define_vars_function','define_vars_function',5,'p_define_vars_function','parser_p.py',102),
  ('define_vars_function -> empty','define_vars_function',1,'p_define_vars_function','parser_p.py',103),
  ('function -> ID LPAREN era_function expression RPAREN SEMICOLON','function',6,'p_function','parser_p.py',135),
  ('era_function -> empty','era_function',1,'p_era_function','parser_p.py',147),
  ('main -> MAIN LPAREN RPAREN LBRACE statute RBRACE','main',6,'p_main','parser_p.py',159),
  ('parameters -> LPAREN type COLON id_list RPAREN','parameters',5,'p_parameters','parser_p.py',164),
  ('statute -> assignation statute','statute',2,'p_statute','parser_p.py',169),
  ('statute -> decision statute','statute',2,'p_statute','parser_p.py',170),
  ('statute -> condition statute','statute',2,'p_statute','parser_p.py',171),
  ('statute -> return statute','statute',2,'p_statute','parser_p.py',172),
  ('statute -> function statute','statute',2,'p_statute','parser_p.py',173),
  ('statute -> empty','statute',1,'p_statute','parser_p.py',174),
  ('assignation -> ID EQUAL expression SEMICOLON','assignation',4,'p_assignation','parser_p.py',180),
  ('decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE','decision',13,'p_decision','parser_p.py',202),
  ('decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE','decision',8,'p_decision','parser_p.py',203),
  ('def_else -> empty','def_else',1,'p_def_else','parser_p.py',218),
  ('condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE','condition',8,'p_condition','parser_p.py',227),
  ('expression_bool -> expression GREATERTHAN term','expression_bool',3,'p_expression_bool','parser_p.py',237),
  ('expression_bool -> expression SMALLERTHAN term','expression_bool',3,'p_expression_bool','parser_p.py',238),
  ('expression_bool -> expression EQUALTO term','expression_bool',3,'p_expression_bool','parser_p.py',239),
  ('expression_bool_while -> expression GREATERTHAN term','expression_bool_while',3,'p_expression_bool_while','parser_p.py',257),
  ('expression_bool_while -> expression SMALLERTHAN term','expression_bool_while',3,'p_expression_bool_while','parser_p.py',258),
  ('expression_bool_while -> expression EQUALTO term','expression_bool_while',3,'p_expression_bool_while','parser_p.py',259),
  ('return -> RETURN LPAREN expression RPAREN SEMICOLON','return',5,'p_return','parser_p.py',277),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser_p.py',284),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser_p.py',285),
  ('expression -> term','expression',1,'p_expression_term','parser_p.py',298),
  ('term -> term TIMES factor','term',3,'p_term','parser_p.py',304),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_p.py',305),
  ('term -> factor','term',1,'p_term_factor','parser_p.py',318),
  ('factor -> FLOAT','factor',1,'p_factor_number','parser_p.py',324),
  ('factor -> INT','factor',1,'p_factor_number','parser_p.py',325),
  ('factor -> STRING','factor',1,'p_factor_number','parser_p.py',326),
  ('factor -> function','factor',1,'p_factor_function','parser_p.py',337),
  ('factor -> ID','factor',1,'p_factor_id','parser_p.py',344),
  ('factor -> PLUS factor','factor',2,'p_factor_unary','parser_p.py',356),
  ('factor -> MINUS factor','factor',2,'p_factor_unary','parser_p.py',357),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','parser_p.py',366),
  ('empty -> <empty>','empty',0,'p_empty','parser_p.py',385),
]
