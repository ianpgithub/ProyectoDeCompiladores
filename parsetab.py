
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DIVIDE DO ELSE ENDL EQUAL EQUALTO FLOAT FOR FUNCTION GREATERTHAN ID IF INT LBRACE LBRACKET LPAREN MINUS NUMBER OR PLUS PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMICOLON SMALLERTHAN STRING THEN TIMES TO VARS WHILE WRITE\n    program : PROGRAM ID SEMICOLON ENDL VARS define_vars define_function\n    \n    define_vars : type COLON vars SEMICOLON define_vars\n                | empty\n    \n    type : INT\n         | FLOAT\n    \n    vars : ID COMMA vars\n         | ID\n    \n    define_function : FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE\n    \n    parameters : LPAREN type COLON vars RPAREN\n    \n    statute : assignation statute\n            | desicion statute\n            \n            | return statute\n            | write statute\n            \n            | empty\n            \n    \n    assignation : ID EQUAL expression SEMICOLON\n                | ID GREATERTHAN expression SEMICOLON\n                | ID SMALLERTHAN expression SEMICOLON\n                | ID EQUALTO expression SEMICOLON\n                \n    \n    desicion : IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE\n    \n    return : RETURN LPAREN expression RPAREN SEMICOLON\n    \n    write : WRITE LPAREN STRING RPAREN SEMICOLON\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | expression GREATERTHAN term\n               | expression SMALLERTHAN term\n               | expression EQUALTO term\n    \n    expression : term\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n    \n    term : factor\n    \n    factor : NUMBER\n    \n    factor : ID\n    \n    factor : PLUS factor\n           | MINUS factor\n    \n    factor : LPAREN expression RPAREN\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,47,],[0,-1,-8,]),'ID':([2,10,11,14,15,20,28,31,35,36,37,38,43,44,45,46,52,53,57,59,62,69,70,71,72,73,74,76,77,80,81,82,95,96,97,101,103,],[3,-4,-5,17,18,17,17,33,33,33,33,33,55,55,55,55,55,55,55,55,55,-15,55,55,55,55,55,55,55,-16,-17,-18,-20,-21,33,33,-19,]),'SEMICOLON':([3,16,17,24,55,56,58,60,61,63,64,65,75,78,84,85,86,87,88,89,90,91,92,93,],[4,19,-7,-6,-32,69,-27,-30,-31,80,81,82,-33,-34,95,96,-22,-23,-24,-25,-26,-28,-29,-35,]),'ENDL':([4,21,32,],[5,25,-9,]),'VARS':([5,25,],[6,27,]),'INT':([6,13,19,22,27,],[10,10,10,10,10,]),'FLOAT':([6,13,19,22,27,],[11,11,11,11,11,]),'FUNCTION':([6,7,9,19,23,],[-36,13,-3,-36,-2,]),'COLON':([8,10,11,26,],[14,-4,-5,28,]),'LBRACE':([9,19,23,27,29,94,100,],[-3,-36,-2,-36,31,97,101,]),'COMMA':([17,],[20,]),'RPAREN':([17,24,30,55,58,60,61,66,67,68,75,78,79,86,87,88,89,90,91,92,93,],[-7,-6,32,-32,-27,-30,-31,83,84,85,-33,-34,93,-22,-23,-24,-25,-26,-28,-29,-35,]),'LPAREN':([18,40,41,42,43,44,45,46,52,53,57,59,62,70,71,72,73,74,76,77,],[22,52,53,54,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'IF':([31,35,36,37,38,69,80,81,82,95,96,97,101,103,],[40,40,40,40,40,-15,-16,-17,-18,-20,-21,40,40,-19,]),'RETURN':([31,35,36,37,38,69,80,81,82,95,96,97,101,103,],[41,41,41,41,41,-15,-16,-17,-18,-20,-21,41,41,-19,]),'WRITE':([31,35,36,37,38,69,80,81,82,95,96,97,101,103,],[42,42,42,42,42,-15,-16,-17,-18,-20,-21,42,42,-19,]),'RBRACE':([31,34,35,36,37,38,39,48,49,50,51,69,80,81,82,95,96,97,98,101,102,103,],[-36,47,-36,-36,-36,-36,-14,-10,-11,-12,-13,-15,-16,-17,-18,-20,-21,-36,99,-36,103,-19,]),'EQUAL':([33,],[43,]),'GREATERTHAN':([33,55,56,58,60,61,63,64,65,66,67,75,78,79,86,87,88,89,90,91,92,93,],[44,-32,72,-27,-30,-31,72,72,72,72,72,-33,-34,72,-22,-23,-24,-25,-26,-28,-29,-35,]),'SMALLERTHAN':([33,55,56,58,60,61,63,64,65,66,67,75,78,79,86,87,88,89,90,91,92,93,],[45,-32,73,-27,-30,-31,73,73,73,73,73,-33,-34,73,-22,-23,-24,-25,-26,-28,-29,-35,]),'EQUALTO':([33,55,56,58,60,61,63,64,65,66,67,75,78,79,86,87,88,89,90,91,92,93,],[46,-32,74,-27,-30,-31,74,74,74,74,74,-33,-34,74,-22,-23,-24,-25,-26,-28,-29,-35,]),'NUMBER':([43,44,45,46,52,53,57,59,62,70,71,72,73,74,76,77,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PLUS':([43,44,45,46,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,],[57,57,57,57,57,57,-32,70,57,-27,57,-30,-31,57,70,70,70,70,70,57,57,57,57,57,-33,57,57,-34,70,-22,-23,-24,-25,-26,-28,-29,-35,]),'MINUS':([43,44,45,46,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,],[59,59,59,59,59,59,-32,71,59,-27,59,-30,-31,59,71,71,71,71,71,59,59,59,59,59,-33,59,59,-34,71,-22,-23,-24,-25,-26,-28,-29,-35,]),'STRING':([54,],[68,]),'TIMES':([55,58,60,61,75,78,86,87,88,89,90,91,92,93,],[-32,76,-30,-31,-33,-34,76,76,76,76,76,-28,-29,-35,]),'DIVIDE':([55,58,60,61,75,78,86,87,88,89,90,91,92,93,],[-32,77,-30,-31,-33,-34,77,77,77,77,77,-28,-29,-35,]),'THEN':([83,],[94,]),'ELSE':([99,],[100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'define_vars':([6,19,27,],[7,23,29,]),'type':([6,13,19,22,27,],[8,15,8,26,8,]),'empty':([6,19,27,31,35,36,37,38,97,101,],[9,9,9,39,39,39,39,39,39,39,]),'define_function':([7,],[12,]),'vars':([14,20,28,],[16,24,30,]),'parameters':([18,],[21,]),'statute':([31,35,36,37,38,97,101,],[34,48,49,50,51,98,102,]),'assignation':([31,35,36,37,38,97,101,],[35,35,35,35,35,35,35,]),'desicion':([31,35,36,37,38,97,101,],[36,36,36,36,36,36,36,]),'return':([31,35,36,37,38,97,101,],[37,37,37,37,37,37,37,]),'write':([31,35,36,37,38,97,101,],[38,38,38,38,38,38,38,]),'expression':([43,44,45,46,52,53,62,],[56,63,64,65,66,67,79,]),'term':([43,44,45,46,52,53,62,70,71,72,73,74,],[58,58,58,58,58,58,58,86,87,88,89,90,]),'factor':([43,44,45,46,52,53,57,59,62,70,71,72,73,74,76,77,],[60,60,60,60,60,60,75,78,60,60,60,60,60,60,91,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function','program',7,'p_program','parser_1.py',6),
  ('define_vars -> type COLON vars SEMICOLON define_vars','define_vars',5,'p_define_vars','parser_1.py',11),
  ('define_vars -> empty','define_vars',1,'p_define_vars','parser_1.py',12),
  ('type -> INT','type',1,'p_type','parser_1.py',17),
  ('type -> FLOAT','type',1,'p_type','parser_1.py',18),
  ('vars -> ID COMMA vars','vars',3,'p_vars','parser_1.py',23),
  ('vars -> ID','vars',1,'p_vars','parser_1.py',24),
  ('define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE','define_function',10,'p_define_function','parser_1.py',29),
  ('parameters -> LPAREN type COLON vars RPAREN','parameters',5,'p_parameters','parser_1.py',34),
  ('statute -> assignation statute','statute',2,'p_statute','parser_1.py',39),
  ('statute -> desicion statute','statute',2,'p_statute','parser_1.py',40),
  ('statute -> return statute','statute',2,'p_statute','parser_1.py',42),
  ('statute -> write statute','statute',2,'p_statute','parser_1.py',43),
  ('statute -> empty','statute',1,'p_statute','parser_1.py',45),
  ('assignation -> ID EQUAL expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',51),
  ('assignation -> ID GREATERTHAN expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',52),
  ('assignation -> ID SMALLERTHAN expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',53),
  ('assignation -> ID EQUALTO expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',54),
  ('desicion -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE','desicion',12,'p_desicion','parser_1.py',59),
  ('return -> RETURN LPAREN expression RPAREN SEMICOLON','return',5,'p_return','parser_1.py',64),
  ('write -> WRITE LPAREN STRING RPAREN SEMICOLON','write',5,'p_write','parser_1.py',69),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser_1.py',74),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser_1.py',75),
  ('expression -> expression GREATERTHAN term','expression',3,'p_expression','parser_1.py',76),
  ('expression -> expression SMALLERTHAN term','expression',3,'p_expression','parser_1.py',77),
  ('expression -> expression EQUALTO term','expression',3,'p_expression','parser_1.py',78),
  ('expression -> term','expression',1,'p_expression_term','parser_1.py',83),
  ('term -> term TIMES factor','term',3,'p_term','parser_1.py',88),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_1.py',89),
  ('term -> factor','term',1,'p_term_factor','parser_1.py',94),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser_1.py',99),
  ('factor -> ID','factor',1,'p_factor_id','parser_1.py',104),
  ('factor -> PLUS factor','factor',2,'p_factor_unary','parser_1.py',109),
  ('factor -> MINUS factor','factor',2,'p_factor_unary','parser_1.py',110),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','parser_1.py',115),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',123),
]
