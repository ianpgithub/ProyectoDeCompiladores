
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DIVIDE DO ELSE ENDL EQUAL EQUALTO FLOAT FOR FUNCTION GREATERTHAN ID IF INT LBRACE LBRACKET LPAREN MAIN MINUS NUMBER OR PLUS PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMICOLON SMALLERTHAN STRING THEN TIMES TO VARS WHILE WRITE\n    program : PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main\n    \n    define_vars : type COLON id_list SEMICOLON define_vars\n                | empty\n    \n    type : INT\n         | FLOAT\n    \n    id_list : ID COMMA id_list\n            | ID\n    \n    define_function : FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL\n                    | FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function\n    \n    main : MAIN LPAREN RPAREN LBRACE statute RBRACE\n    \n    parameters : LPAREN type COLON id_list RPAREN\n    \n    statute : assignation statute\n            | decision statute\n            | condition statute\n            | no_condition statute\n            | return statute\n            | define_write statute\n            | read statute\n            | empty\n            \n    \n    assignation : ID EQUAL expression SEMICOLON\n                | ID GREATERTHAN expression SEMICOLON\n                | ID SMALLERTHAN expression SEMICOLON\n                | ID EQUALTO expression SEMICOLON\n                \n    \n    decision : IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE\n             | IF LPAREN expression RPAREN THEN LBRACE statute RBRACE\n    \n    condition : WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE\n    \n    no_condition : FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE\n    \n    return : RETURN LPAREN expression RPAREN SEMICOLON\n    \n    define_write : WRITE LPAREN write RPAREN SEMICOLON\n\n    \n    write : STRING\n          | expression\n          | STRING COMMA write\n          | expression COMMA write\n    \n    read : READ LPAREN id_list RPAREN SEMICOLON\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | expression GREATERTHAN term\n               | expression SMALLERTHAN term\n               | expression EQUALTO term\n    \n    expression : term\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n    \n    term : factor\n    \n    factor : NUMBER\n    \n    factor : ID\n    \n    factor : PLUS factor\n           | MINUS factor\n    \n    factor : LPAREN expression RPAREN\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,50,],[0,-1,-10,]),'ID':([2,10,11,14,17,23,29,33,34,35,36,37,38,39,44,49,58,59,60,61,62,63,65,66,67,72,74,77,83,89,91,92,93,94,95,96,98,99,102,103,104,110,111,124,125,126,129,131,132,139,140,141,144,145,147,],[3,-4,-5,19,21,19,41,41,41,41,41,41,41,41,64,19,70,70,70,70,70,70,70,70,19,70,70,70,70,41,-20,70,70,70,70,70,70,70,-21,-22,-23,70,70,70,-28,-29,-34,41,41,-25,-26,41,41,-27,-24,]),'SEMICOLON':([3,18,19,28,70,71,73,75,76,78,79,80,97,100,108,109,112,114,115,116,117,118,119,120,121,],[4,22,-7,-6,-45,91,-40,-43,-44,102,103,104,-46,-47,125,126,129,-35,-36,-37,-38,-39,-41,-42,-48,]),'ENDL':([4,25,90,130,],[5,30,-11,134,]),'VARS':([5,30,],[6,48,]),'INT':([6,13,22,26,48,],[10,10,10,10,10,]),'FLOAT':([6,13,22,26,48,],[11,11,11,11,11,]),'FUNCTION':([6,7,9,22,27,134,],[-49,13,-3,-49,-2,13,]),'COLON':([8,10,11,31,],[14,-4,-5,49,]),'LBRACE':([9,22,24,27,48,68,122,123,137,142,],[-3,-49,29,-2,-49,89,131,132,141,144,]),'MAIN':([12,134,138,],[16,-8,-9,]),'LPAREN':([16,21,42,43,45,46,47,58,59,60,61,62,63,65,66,72,74,77,83,92,93,94,95,96,98,99,110,111,124,],[20,26,62,63,65,66,67,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'COMMA':([19,70,73,75,76,86,87,97,100,114,115,116,117,118,119,120,121,],[23,-45,-40,-43,-44,110,111,-46,-47,-35,-36,-37,-38,-39,-41,-42,-48,]),'RPAREN':([19,20,28,69,70,73,75,76,81,82,84,85,86,87,88,97,100,101,114,115,116,117,118,119,120,121,127,128,],[-7,24,-6,90,-45,-40,-43,-44,105,106,108,109,-30,-31,112,-46,-47,121,-35,-36,-37,-38,-39,-41,-42,-48,-32,-33,]),'IF':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[42,42,42,42,42,42,42,42,42,-20,-21,-22,-23,-28,-29,-34,42,42,-25,-26,42,42,-27,-24,]),'WHILE':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[43,43,43,43,43,43,43,43,43,-20,-21,-22,-23,-28,-29,-34,43,43,-25,-26,43,43,-27,-24,]),'FOR':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[44,44,44,44,44,44,44,44,44,-20,-21,-22,-23,-28,-29,-34,44,44,-25,-26,44,44,-27,-24,]),'RETURN':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[45,45,45,45,45,45,45,45,45,-20,-21,-22,-23,-28,-29,-34,45,45,-25,-26,45,45,-27,-24,]),'WRITE':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[46,46,46,46,46,46,46,46,46,-20,-21,-22,-23,-28,-29,-34,46,46,-25,-26,46,46,-27,-24,]),'READ':([29,33,34,35,36,37,38,39,89,91,102,103,104,125,126,129,131,132,139,140,141,144,145,147,],[47,47,47,47,47,47,47,47,47,-20,-21,-22,-23,-28,-29,-34,47,47,-25,-26,47,47,-27,-24,]),'RBRACE':([29,32,33,34,35,36,37,38,39,40,51,52,53,54,55,56,57,89,91,102,103,104,113,125,126,129,131,132,135,136,139,140,141,143,144,145,146,147,],[-49,50,-49,-49,-49,-49,-49,-49,-49,-19,-12,-13,-14,-15,-16,-17,-18,-49,-20,-21,-22,-23,130,-28,-29,-34,-49,-49,139,140,-25,-26,-49,145,-49,-27,147,-24,]),'EQUAL':([41,64,],[58,83,]),'GREATERTHAN':([41,70,71,73,75,76,78,79,80,81,82,84,87,97,100,101,107,114,115,116,117,118,119,120,121,133,],[59,-45,94,-40,-43,-44,94,94,94,94,94,94,94,-46,-47,94,94,-35,-36,-37,-38,-39,-41,-42,-48,94,]),'SMALLERTHAN':([41,70,71,73,75,76,78,79,80,81,82,84,87,97,100,101,107,114,115,116,117,118,119,120,121,133,],[60,-45,95,-40,-43,-44,95,95,95,95,95,95,95,-46,-47,95,95,-35,-36,-37,-38,-39,-41,-42,-48,95,]),'EQUALTO':([41,70,71,73,75,76,78,79,80,81,82,84,87,97,100,101,107,114,115,116,117,118,119,120,121,133,],[61,-45,96,-40,-43,-44,96,96,96,96,96,96,96,-46,-47,96,96,-35,-36,-37,-38,-39,-41,-42,-48,96,]),'NUMBER':([58,59,60,61,62,63,65,66,72,74,77,83,92,93,94,95,96,98,99,110,111,124,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PLUS':([58,59,60,61,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,92,93,94,95,96,97,98,99,100,101,107,110,111,114,115,116,117,118,119,120,121,124,133,],[72,72,72,72,72,72,72,72,-45,92,72,-40,72,-43,-44,72,92,92,92,92,92,72,92,92,72,72,72,72,72,-46,72,72,-47,92,92,72,72,-35,-36,-37,-38,-39,-41,-42,-48,72,92,]),'MINUS':([58,59,60,61,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,92,93,94,95,96,97,98,99,100,101,107,110,111,114,115,116,117,118,119,120,121,124,133,],[74,74,74,74,74,74,74,74,-45,93,74,-40,74,-43,-44,74,93,93,93,93,93,74,93,93,74,74,74,74,74,-46,74,74,-47,93,93,74,74,-35,-36,-37,-38,-39,-41,-42,-48,74,93,]),'STRING':([66,110,111,],[86,86,86,]),'TIMES':([70,73,75,76,97,100,114,115,116,117,118,119,120,121,],[-45,98,-43,-44,-46,-47,98,98,98,98,98,-41,-42,-48,]),'DIVIDE':([70,73,75,76,97,100,114,115,116,117,118,119,120,121,],[-45,99,-43,-44,-46,-47,99,99,99,99,99,-41,-42,-48,]),'TO':([70,73,75,76,97,100,107,114,115,116,117,118,119,120,121,],[-45,-40,-43,-44,-46,-47,124,-35,-36,-37,-38,-39,-41,-42,-48,]),'DO':([70,73,75,76,97,100,106,114,115,116,117,118,119,120,121,133,],[-45,-40,-43,-44,-46,-47,123,-35,-36,-37,-38,-39,-41,-42,-48,137,]),'THEN':([105,],[122,]),'ELSE':([139,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'define_vars':([6,22,48,],[7,27,68,]),'type':([6,13,22,26,48,],[8,17,8,31,8,]),'empty':([6,22,29,33,34,35,36,37,38,39,48,89,131,132,141,144,],[9,9,40,40,40,40,40,40,40,40,9,40,40,40,40,40,]),'define_function':([7,134,],[12,138,]),'main':([12,],[15,]),'id_list':([14,23,49,67,],[18,28,69,88,]),'parameters':([21,],[25,]),'statute':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[32,51,52,53,54,55,56,57,113,135,136,143,146,]),'assignation':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'decision':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'condition':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'no_condition':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'return':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'define_write':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'read':([29,33,34,35,36,37,38,39,89,131,132,141,144,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'expression':([58,59,60,61,62,63,65,66,77,83,110,111,124,],[71,78,79,80,81,82,84,87,101,107,87,87,133,]),'term':([58,59,60,61,62,63,65,66,77,83,92,93,94,95,96,110,111,124,],[73,73,73,73,73,73,73,73,73,73,114,115,116,117,118,73,73,73,]),'factor':([58,59,60,61,62,63,65,66,72,74,77,83,92,93,94,95,96,98,99,110,111,124,],[75,75,75,75,75,75,75,75,97,100,75,75,75,75,75,75,75,119,120,75,75,75,]),'write':([66,110,111,],[85,127,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main','program',8,'p_program','parser_1.py',6),
  ('define_vars -> type COLON id_list SEMICOLON define_vars','define_vars',5,'p_define_vars','parser_1.py',11),
  ('define_vars -> empty','define_vars',1,'p_define_vars','parser_1.py',12),
  ('type -> INT','type',1,'p_type','parser_1.py',17),
  ('type -> FLOAT','type',1,'p_type','parser_1.py',18),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','parser_1.py',23),
  ('id_list -> ID','id_list',1,'p_id_list','parser_1.py',24),
  ('define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL','define_function',11,'p_define_function','parser_1.py',29),
  ('define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function','define_function',12,'p_define_function','parser_1.py',30),
  ('main -> MAIN LPAREN RPAREN LBRACE statute RBRACE','main',6,'p_main','parser_1.py',35),
  ('parameters -> LPAREN type COLON id_list RPAREN','parameters',5,'p_parameters','parser_1.py',40),
  ('statute -> assignation statute','statute',2,'p_statute','parser_1.py',45),
  ('statute -> decision statute','statute',2,'p_statute','parser_1.py',46),
  ('statute -> condition statute','statute',2,'p_statute','parser_1.py',47),
  ('statute -> no_condition statute','statute',2,'p_statute','parser_1.py',48),
  ('statute -> return statute','statute',2,'p_statute','parser_1.py',49),
  ('statute -> define_write statute','statute',2,'p_statute','parser_1.py',50),
  ('statute -> read statute','statute',2,'p_statute','parser_1.py',51),
  ('statute -> empty','statute',1,'p_statute','parser_1.py',52),
  ('assignation -> ID EQUAL expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',58),
  ('assignation -> ID GREATERTHAN expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',59),
  ('assignation -> ID SMALLERTHAN expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',60),
  ('assignation -> ID EQUALTO expression SEMICOLON','assignation',4,'p_assignation','parser_1.py',61),
  ('decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE','decision',12,'p_decision','parser_1.py',66),
  ('decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE','decision',8,'p_decision','parser_1.py',67),
  ('condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE','condition',8,'p_condition','parser_1.py',72),
  ('no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE','no_condition',10,'p_no_condition','parser_1.py',77),
  ('return -> RETURN LPAREN expression RPAREN SEMICOLON','return',5,'p_return','parser_1.py',82),
  ('define_write -> WRITE LPAREN write RPAREN SEMICOLON','define_write',5,'p_define_write','parser_1.py',87),
  ('write -> STRING','write',1,'p_write','parser_1.py',93),
  ('write -> expression','write',1,'p_write','parser_1.py',94),
  ('write -> STRING COMMA write','write',3,'p_write','parser_1.py',95),
  ('write -> expression COMMA write','write',3,'p_write','parser_1.py',96),
  ('read -> READ LPAREN id_list RPAREN SEMICOLON','read',5,'p_read','parser_1.py',101),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser_1.py',106),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser_1.py',107),
  ('expression -> expression GREATERTHAN term','expression',3,'p_expression','parser_1.py',108),
  ('expression -> expression SMALLERTHAN term','expression',3,'p_expression','parser_1.py',109),
  ('expression -> expression EQUALTO term','expression',3,'p_expression','parser_1.py',110),
  ('expression -> term','expression',1,'p_expression_term','parser_1.py',115),
  ('term -> term TIMES factor','term',3,'p_term','parser_1.py',120),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_1.py',121),
  ('term -> factor','term',1,'p_term_factor','parser_1.py',126),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser_1.py',131),
  ('factor -> ID','factor',1,'p_factor_id','parser_1.py',136),
  ('factor -> PLUS factor','factor',2,'p_factor_unary','parser_1.py',141),
  ('factor -> MINUS factor','factor',2,'p_factor_unary','parser_1.py',142),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','parser_1.py',147),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',155),
]
