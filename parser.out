Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDL
    FALSE
    FUNCTION
    LBRACKET
    MAIN
    OR
    PROGRAM
    RBRACKET
    READ
    RETURN
    TO
    TRUE
    WRITE

Grammar

Rule 0     S' -> define_function
Rule 1     define_function -> VARS define_vars LBRACE statute RBRACE
Rule 2     define_function -> VARS define_vars LBRACE statute RBRACE define_function
Rule 3     id_list -> ID COMMA id_list
Rule 4     id_list -> ID
Rule 5     define_vars -> type COLON id_list SEMICOLON define_vars
Rule 6     define_vars -> empty
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    type -> BOOL
Rule 11    statute -> assignation statute
Rule 12    statute -> decision statute
Rule 13    statute -> condition statute
Rule 14    statute -> empty
Rule 15    assignation -> ID EQUAL expression SEMICOLON
Rule 16    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 17    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 18    def_else -> empty
Rule 19    condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
Rule 20    expression_bool -> expression GREATERTHAN term
Rule 21    expression_bool -> expression SMALLERTHAN term
Rule 22    expression_bool -> expression EQUALTO term
Rule 23    expression_bool_while -> expression GREATERTHAN term
Rule 24    expression_bool_while -> expression SMALLERTHAN term
Rule 25    expression_bool_while -> expression EQUALTO term
Rule 26    expression -> expression PLUS term
Rule 27    expression -> expression MINUS term
Rule 28    expression -> term
Rule 29    term -> term TIMES factor
Rule 30    term -> term DIVIDE factor
Rule 31    term -> factor
Rule 32    factor -> FLOAT
Rule 33    factor -> INT
Rule 34    factor -> STRING
Rule 35    factor -> ID
Rule 36    factor -> PLUS factor
Rule 37    factor -> MINUS factor
Rule 38    factor -> LPAREN expression RPAREN
Rule 39    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 10
COLON                : 5
COMMA                : 3
DIVIDE               : 30
DO                   : 19
ELSE                 : 16
ENDL                 : 
EQUAL                : 15
EQUALTO              : 22 25
FALSE                : 
FLOAT                : 8 32
FUNCTION             : 
GREATERTHAN          : 20 23
ID                   : 3 4 15 35
IF                   : 16 17
INT                  : 7 33
LBRACE               : 1 2 16 16 17 19
LBRACKET             : 
LPAREN               : 16 17 19 38
MAIN                 : 
MINUS                : 27 37
OR                   : 
PLUS                 : 26 36
PROGRAM              : 
RBRACE               : 1 2 16 16 17 19
RBRACKET             : 
READ                 : 
RETURN               : 
RPAREN               : 16 17 19 38
SEMICOLON            : 5 15
SMALLERTHAN          : 21 24
STRING               : 9 34
THEN                 : 16 17
TIMES                : 29
TO                   : 
TRUE                 : 
VARS                 : 1 2
WHILE                : 19
WRITE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 11
condition            : 13
decision             : 12
def_else             : 16
define_function      : 2 0
define_vars          : 1 2 5
empty                : 6 14 18
expression           : 15 20 21 22 23 24 25 26 27 38
expression_bool      : 16 17
expression_bool_while : 19
factor               : 29 30 31 36 37
id_list              : 3 5
statute              : 1 2 11 12 13 16 16 17 19
term                 : 20 21 22 23 24 25 26 27 28 29 30
type                 : 5

Parsing method: LALR

state 0

    (0) S' -> . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    VARS            shift and go to state 2

    define_function                shift and go to state 1

state 1

    (0) S' -> define_function .



state 2

    (1) define_function -> VARS . define_vars LBRACE statute RBRACE
    (2) define_function -> VARS . define_vars LBRACE statute RBRACE define_function
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (39) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 39 (empty -> .)

    define_vars                    shift and go to state 3
    type                           shift and go to state 4
    empty                          shift and go to state 5

state 3

    (1) define_function -> VARS define_vars . LBRACE statute RBRACE
    (2) define_function -> VARS define_vars . LBRACE statute RBRACE define_function

    LBRACE          shift and go to state 10


state 4

    (5) define_vars -> type . COLON id_list SEMICOLON define_vars

    COLON           shift and go to state 11


state 5

    (6) define_vars -> empty .

    LBRACE          reduce using rule 6 (define_vars -> empty .)


state 6

    (7) type -> INT .

    COLON           reduce using rule 7 (type -> INT .)


state 7

    (8) type -> FLOAT .

    COLON           reduce using rule 8 (type -> FLOAT .)


state 8

    (9) type -> STRING .

    COLON           reduce using rule 9 (type -> STRING .)


state 9

    (10) type -> BOOL .

    COLON           reduce using rule 10 (type -> BOOL .)


state 10

    (1) define_function -> VARS define_vars LBRACE . statute RBRACE
    (2) define_function -> VARS define_vars LBRACE . statute RBRACE define_function
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    statute                        shift and go to state 12
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 11

    (5) define_vars -> type COLON . id_list SEMICOLON define_vars
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 21

    id_list                        shift and go to state 20

state 12

    (1) define_function -> VARS define_vars LBRACE statute . RBRACE
    (2) define_function -> VARS define_vars LBRACE statute . RBRACE define_function

    RBRACE          shift and go to state 22


state 13

    (11) statute -> assignation . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    assignation                    shift and go to state 13
    statute                        shift and go to state 23
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 14

    (12) statute -> decision . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    decision                       shift and go to state 14
    statute                        shift and go to state 24
    assignation                    shift and go to state 13
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 15

    (13) statute -> condition . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    condition                      shift and go to state 15
    statute                        shift and go to state 25
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    empty                          shift and go to state 16

state 16

    (14) statute -> empty .

    RBRACE          reduce using rule 14 (statute -> empty .)


state 17

    (15) assignation -> ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 26


state 18

    (16) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 27


state 19

    (19) condition -> WHILE . LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 28


state 20

    (5) define_vars -> type COLON id_list . SEMICOLON define_vars

    SEMICOLON       shift and go to state 29


state 21

    (3) id_list -> ID . COMMA id_list
    (4) id_list -> ID .

    COMMA           shift and go to state 30
    SEMICOLON       reduce using rule 4 (id_list -> ID .)


state 22

    (1) define_function -> VARS define_vars LBRACE statute RBRACE .
    (2) define_function -> VARS define_vars LBRACE statute RBRACE . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    $end            reduce using rule 1 (define_function -> VARS define_vars LBRACE statute RBRACE .)
    VARS            shift and go to state 2

    define_function                shift and go to state 31

state 23

    (11) statute -> assignation statute .

    RBRACE          reduce using rule 11 (statute -> assignation statute .)


state 24

    (12) statute -> decision statute .

    RBRACE          reduce using rule 12 (statute -> decision statute .)


state 25

    (13) statute -> condition statute .

    RBRACE          reduce using rule 13 (statute -> condition statute .)


state 26

    (15) assignation -> ID EQUAL . expression SEMICOLON
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    expression                     shift and go to state 33
    term                           shift and go to state 35
    factor                         shift and go to state 37

state 27

    (16) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) expression_bool -> . expression GREATERTHAN term
    (21) expression_bool -> . expression SMALLERTHAN term
    (22) expression_bool -> . expression EQUALTO term
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    expression_bool                shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 35
    factor                         shift and go to state 37

state 28

    (19) condition -> WHILE LPAREN . expression_bool_while RPAREN DO LBRACE statute RBRACE
    (23) expression_bool_while -> . expression GREATERTHAN term
    (24) expression_bool_while -> . expression SMALLERTHAN term
    (25) expression_bool_while -> . expression EQUALTO term
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    expression_bool_while          shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 35
    factor                         shift and go to state 37

state 29

    (5) define_vars -> type COLON id_list SEMICOLON . define_vars
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (39) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 39 (empty -> .)

    type                           shift and go to state 4
    define_vars                    shift and go to state 46
    empty                          shift and go to state 5

state 30

    (3) id_list -> ID COMMA . id_list
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 21

    id_list                        shift and go to state 47

state 31

    (2) define_function -> VARS define_vars LBRACE statute RBRACE define_function .

    $end            reduce using rule 2 (define_function -> VARS define_vars LBRACE statute RBRACE define_function .)


state 32

    (35) factor -> ID .

    TIMES           reduce using rule 35 (factor -> ID .)
    DIVIDE          reduce using rule 35 (factor -> ID .)
    SEMICOLON       reduce using rule 35 (factor -> ID .)
    PLUS            reduce using rule 35 (factor -> ID .)
    MINUS           reduce using rule 35 (factor -> ID .)
    GREATERTHAN     reduce using rule 35 (factor -> ID .)
    SMALLERTHAN     reduce using rule 35 (factor -> ID .)
    EQUALTO         reduce using rule 35 (factor -> ID .)
    RPAREN          reduce using rule 35 (factor -> ID .)


state 33

    (15) assignation -> ID EQUAL expression . SEMICOLON
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 34

    (36) factor -> PLUS . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    factor                         shift and go to state 51

state 35

    (28) expression -> term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 28 (expression -> term .)
    PLUS            reduce using rule 28 (expression -> term .)
    MINUS           reduce using rule 28 (expression -> term .)
    GREATERTHAN     reduce using rule 28 (expression -> term .)
    SMALLERTHAN     reduce using rule 28 (expression -> term .)
    EQUALTO         reduce using rule 28 (expression -> term .)
    RPAREN          reduce using rule 28 (expression -> term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 36

    (37) factor -> MINUS . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    factor                         shift and go to state 54

state 37

    (31) term -> factor .

    TIMES           reduce using rule 31 (term -> factor .)
    DIVIDE          reduce using rule 31 (term -> factor .)
    SEMICOLON       reduce using rule 31 (term -> factor .)
    PLUS            reduce using rule 31 (term -> factor .)
    MINUS           reduce using rule 31 (term -> factor .)
    GREATERTHAN     reduce using rule 31 (term -> factor .)
    SMALLERTHAN     reduce using rule 31 (term -> factor .)
    EQUALTO         reduce using rule 31 (term -> factor .)
    RPAREN          reduce using rule 31 (term -> factor .)


state 38

    (32) factor -> FLOAT .

    TIMES           reduce using rule 32 (factor -> FLOAT .)
    DIVIDE          reduce using rule 32 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 32 (factor -> FLOAT .)
    PLUS            reduce using rule 32 (factor -> FLOAT .)
    MINUS           reduce using rule 32 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 32 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 32 (factor -> FLOAT .)
    EQUALTO         reduce using rule 32 (factor -> FLOAT .)
    RPAREN          reduce using rule 32 (factor -> FLOAT .)


state 39

    (33) factor -> INT .

    TIMES           reduce using rule 33 (factor -> INT .)
    DIVIDE          reduce using rule 33 (factor -> INT .)
    SEMICOLON       reduce using rule 33 (factor -> INT .)
    PLUS            reduce using rule 33 (factor -> INT .)
    MINUS           reduce using rule 33 (factor -> INT .)
    GREATERTHAN     reduce using rule 33 (factor -> INT .)
    SMALLERTHAN     reduce using rule 33 (factor -> INT .)
    EQUALTO         reduce using rule 33 (factor -> INT .)
    RPAREN          reduce using rule 33 (factor -> INT .)


state 40

    (34) factor -> STRING .

    TIMES           reduce using rule 34 (factor -> STRING .)
    DIVIDE          reduce using rule 34 (factor -> STRING .)
    SEMICOLON       reduce using rule 34 (factor -> STRING .)
    PLUS            reduce using rule 34 (factor -> STRING .)
    MINUS           reduce using rule 34 (factor -> STRING .)
    GREATERTHAN     reduce using rule 34 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 34 (factor -> STRING .)
    EQUALTO         reduce using rule 34 (factor -> STRING .)
    RPAREN          reduce using rule 34 (factor -> STRING .)


state 41

    (38) factor -> LPAREN . expression RPAREN
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    expression                     shift and go to state 55
    term                           shift and go to state 35
    factor                         shift and go to state 37

state 42

    (16) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE

    RPAREN          shift and go to state 56


state 43

    (20) expression_bool -> expression . GREATERTHAN term
    (21) expression_bool -> expression . SMALLERTHAN term
    (22) expression_bool -> expression . EQUALTO term
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 57
    SMALLERTHAN     shift and go to state 58
    EQUALTO         shift and go to state 59
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 44

    (19) condition -> WHILE LPAREN expression_bool_while . RPAREN DO LBRACE statute RBRACE

    RPAREN          shift and go to state 60


state 45

    (23) expression_bool_while -> expression . GREATERTHAN term
    (24) expression_bool_while -> expression . SMALLERTHAN term
    (25) expression_bool_while -> expression . EQUALTO term
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 61
    SMALLERTHAN     shift and go to state 62
    EQUALTO         shift and go to state 63
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 46

    (5) define_vars -> type COLON id_list SEMICOLON define_vars .

    LBRACE          reduce using rule 5 (define_vars -> type COLON id_list SEMICOLON define_vars .)


state 47

    (3) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 3 (id_list -> ID COMMA id_list .)


state 48

    (15) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 15 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 15 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 15 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 15 (assignation -> ID EQUAL expression SEMICOLON .)


state 49

    (26) expression -> expression PLUS . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 64
    factor                         shift and go to state 37

state 50

    (27) expression -> expression MINUS . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 65
    factor                         shift and go to state 37

state 51

    (36) factor -> PLUS factor .

    TIMES           reduce using rule 36 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 36 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 36 (factor -> PLUS factor .)
    PLUS            reduce using rule 36 (factor -> PLUS factor .)
    MINUS           reduce using rule 36 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 36 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 36 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 36 (factor -> PLUS factor .)
    RPAREN          reduce using rule 36 (factor -> PLUS factor .)


state 52

    (29) term -> term TIMES . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    factor                         shift and go to state 66

state 53

    (30) term -> term DIVIDE . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    factor                         shift and go to state 67

state 54

    (37) factor -> MINUS factor .

    TIMES           reduce using rule 37 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 37 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 37 (factor -> MINUS factor .)
    PLUS            reduce using rule 37 (factor -> MINUS factor .)
    MINUS           reduce using rule 37 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 37 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 37 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 37 (factor -> MINUS factor .)
    RPAREN          reduce using rule 37 (factor -> MINUS factor .)


state 55

    (38) factor -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 56

    (16) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 69


state 57

    (20) expression_bool -> expression GREATERTHAN . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 70
    factor                         shift and go to state 37

state 58

    (21) expression_bool -> expression SMALLERTHAN . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 71
    factor                         shift and go to state 37

state 59

    (22) expression_bool -> expression EQUALTO . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 72
    factor                         shift and go to state 37

state 60

    (19) condition -> WHILE LPAREN expression_bool_while RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 73


state 61

    (23) expression_bool_while -> expression GREATERTHAN . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 74
    factor                         shift and go to state 37

state 62

    (24) expression_bool_while -> expression SMALLERTHAN . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 75
    factor                         shift and go to state 37

state 63

    (25) expression_bool_while -> expression EQUALTO . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . FLOAT
    (33) factor -> . INT
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . PLUS factor
    (37) factor -> . MINUS factor
    (38) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 38
    INT             shift and go to state 39
    STRING          shift and go to state 40
    ID              shift and go to state 32
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 41

    term                           shift and go to state 76
    factor                         shift and go to state 37

state 64

    (26) expression -> expression PLUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 26 (expression -> expression PLUS term .)
    PLUS            reduce using rule 26 (expression -> expression PLUS term .)
    MINUS           reduce using rule 26 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 26 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 26 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 26 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 65

    (27) expression -> expression MINUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 27 (expression -> expression MINUS term .)
    PLUS            reduce using rule 27 (expression -> expression MINUS term .)
    MINUS           reduce using rule 27 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 27 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 27 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 27 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 66

    (29) term -> term TIMES factor .

    TIMES           reduce using rule 29 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 29 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 29 (term -> term TIMES factor .)
    PLUS            reduce using rule 29 (term -> term TIMES factor .)
    MINUS           reduce using rule 29 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 29 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 29 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 29 (term -> term TIMES factor .)
    RPAREN          reduce using rule 29 (term -> term TIMES factor .)


state 67

    (30) term -> term DIVIDE factor .

    TIMES           reduce using rule 30 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 30 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 30 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 30 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 30 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 30 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 30 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 30 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 30 (term -> term DIVIDE factor .)


state 68

    (38) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (factor -> LPAREN expression RPAREN .)


state 69

    (16) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 77


state 70

    (20) expression_bool -> expression GREATERTHAN term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 20 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 71

    (21) expression_bool -> expression SMALLERTHAN term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 21 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 72

    (22) expression_bool -> expression EQUALTO term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 22 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 73

    (19) condition -> WHILE LPAREN expression_bool_while RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 78


state 74

    (23) expression_bool_while -> expression GREATERTHAN term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 23 (expression_bool_while -> expression GREATERTHAN term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 75

    (24) expression_bool_while -> expression SMALLERTHAN term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 24 (expression_bool_while -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 76

    (25) expression_bool_while -> expression EQUALTO term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    RPAREN          reduce using rule 25 (expression_bool_while -> expression EQUALTO term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 77

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    statute                        shift and go to state 79
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 78

    (19) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    statute                        shift and go to state 80
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 79

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 81


state 80

    (19) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 82


state 81

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE
    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 83
    ID              reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)


state 82

    (19) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 19 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 19 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 19 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 19 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)


state 83

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 84


state 84

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (18) def_else -> . empty
    (39) empty -> .

    ID              reduce using rule 39 (empty -> .)
    IF              reduce using rule 39 (empty -> .)
    WHILE           reduce using rule 39 (empty -> .)
    RBRACE          reduce using rule 39 (empty -> .)

    def_else                       shift and go to state 85
    empty                          shift and go to state 86

state 85

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . empty
    (15) assignation -> . ID EQUAL expression SEMICOLON
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (19) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (39) empty -> .

    ID              shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    RBRACE          reduce using rule 39 (empty -> .)

    statute                        shift and go to state 87
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 16

state 86

    (18) def_else -> empty .

    ID              reduce using rule 18 (def_else -> empty .)
    IF              reduce using rule 18 (def_else -> empty .)
    WHILE           reduce using rule 18 (def_else -> empty .)
    RBRACE          reduce using rule 18 (def_else -> empty .)


state 87

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 88


state 88

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WHILE           reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

