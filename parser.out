Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    OR
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main
Rule 2     define_vars -> type COLON id_list SEMICOLON define_vars
Rule 3     define_vars -> empty
Rule 4     type -> INT
Rule 5     type -> FLOAT
Rule 6     id_list -> ID COMMA id_list
Rule 7     id_list -> ID
Rule 8     define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
Rule 9     define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function
Rule 10    main -> MAIN LPAREN RPAREN LBRACE statute RBRACE
Rule 11    parameters -> LPAREN type COLON id_list RPAREN
Rule 12    statute -> assignation statute
Rule 13    statute -> decision statute
Rule 14    statute -> condition statute
Rule 15    statute -> no_condition statute
Rule 16    statute -> return statute
Rule 17    statute -> define_write statute
Rule 18    statute -> read statute
Rule 19    statute -> empty
Rule 20    assignation -> ID EQUAL expression SEMICOLON
Rule 21    assignation -> ID GREATERTHAN expression SEMICOLON
Rule 22    assignation -> ID SMALLERTHAN expression SEMICOLON
Rule 23    assignation -> ID EQUALTO expression SEMICOLON
Rule 24    decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
Rule 25    decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
Rule 26    condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
Rule 27    no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
Rule 28    return -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 29    define_write -> WRITE LPAREN write RPAREN SEMICOLON
Rule 30    write -> STRING
Rule 31    write -> expression
Rule 32    write -> STRING COMMA write
Rule 33    write -> expression COMMA write
Rule 34    read -> READ LPAREN id_list RPAREN SEMICOLON
Rule 35    expression -> expression PLUS term
Rule 36    expression -> expression MINUS term
Rule 37    expression -> expression GREATERTHAN term
Rule 38    expression -> expression SMALLERTHAN term
Rule 39    expression -> expression EQUALTO term
Rule 40    expression -> term
Rule 41    term -> term TIMES factor
Rule 42    term -> term DIVIDE factor
Rule 43    term -> factor
Rule 44    factor -> NUMBER
Rule 45    factor -> ID
Rule 46    factor -> PLUS factor
Rule 47    factor -> MINUS factor
Rule 48    factor -> LPAREN expression RPAREN
Rule 49    empty -> <empty>

Terminals, with rules where they appear

COLON                : 2 11
COMMA                : 6 32 33
DIVIDE               : 42
DO                   : 26 27
ELSE                 : 24
ENDL                 : 1 8 8 9 9
EQUAL                : 20 27
EQUALTO              : 23 39
FLOAT                : 5
FOR                  : 27
FUNCTION             : 8 9
GREATERTHAN          : 21 37
ID                   : 1 6 7 8 9 20 21 22 23 27 45
IF                   : 24 25
INT                  : 4
LBRACE               : 8 9 10 24 24 25 26 27
LBRACKET             : 
LPAREN               : 10 11 24 25 26 28 29 34 48
MAIN                 : 10
MINUS                : 36 47
NUMBER               : 44
OR                   : 
PLUS                 : 35 46
PROGRAM              : 1
RBRACE               : 8 9 10 24 24 25 26 27
RBRACKET             : 
READ                 : 34
RETURN               : 28
RPAREN               : 10 11 24 25 26 28 29 34 48
SEMICOLON            : 1 2 20 21 22 23 28 29 34
SMALLERTHAN          : 22 38
STRING               : 30 32
THEN                 : 24 25
TIMES                : 41
TO                   : 27
VARS                 : 1 8 9
WHILE                : 26
WRITE                : 29
error                : 

Nonterminals, with rules where they appear

assignation          : 12
condition            : 14
decision             : 13
define_function      : 1 9
define_vars          : 1 2 8 9
define_write         : 17
empty                : 3 19
expression           : 20 21 22 23 24 25 26 27 27 28 31 33 35 36 37 38 39 48
factor               : 41 42 43 46 47
id_list              : 2 6 11 34
main                 : 1
no_condition         : 15
parameters           : 8 9
program              : 0
read                 : 18
return               : 16
statute              : 8 9 10 12 13 14 15 16 17 18 24 24 25 26 27
term                 : 35 36 37 38 39 40 41 42
type                 : 2 8 9 11
write                : 29 32 33

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON ENDL VARS define_vars define_function main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON ENDL VARS define_vars define_function main

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . ENDL VARS define_vars define_function main

    ENDL            shift and go to state 5


state 5

    (1) program -> PROGRAM ID SEMICOLON ENDL . VARS define_vars define_function main

    VARS            shift and go to state 6


state 6

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS . define_vars define_function main
    (2) define_vars -> . type COLON id_list SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (49) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    FUNCTION        reduce using rule 49 (empty -> .)

    define_vars                    shift and go to state 7
    type                           shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS define_vars . define_function main
    (8) define_function -> . FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> . FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function

    FUNCTION        shift and go to state 13

    define_function                shift and go to state 12

state 8

    (2) define_vars -> type . COLON id_list SEMICOLON define_vars

    COLON           shift and go to state 14


state 9

    (3) define_vars -> empty .

    FUNCTION        reduce using rule 3 (define_vars -> empty .)
    LBRACE          reduce using rule 3 (define_vars -> empty .)


state 10

    (4) type -> INT .

    COLON           reduce using rule 4 (type -> INT .)
    ID              reduce using rule 4 (type -> INT .)


state 11

    (5) type -> FLOAT .

    COLON           reduce using rule 5 (type -> FLOAT .)
    ID              reduce using rule 5 (type -> FLOAT .)


state 12

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function . main
    (10) main -> . MAIN LPAREN RPAREN LBRACE statute RBRACE

    MAIN            shift and go to state 16

    main                           shift and go to state 15

state 13

    (8) define_function -> FUNCTION . type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION . type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    type                           shift and go to state 17

state 14

    (2) define_vars -> type COLON . id_list SEMICOLON define_vars
    (6) id_list -> . ID COMMA id_list
    (7) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 18

state 15

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function main .)


state 16

    (10) main -> MAIN . LPAREN RPAREN LBRACE statute RBRACE

    LPAREN          shift and go to state 20


state 17

    (8) define_function -> FUNCTION type . ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type . ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function

    ID              shift and go to state 21


state 18

    (2) define_vars -> type COLON id_list . SEMICOLON define_vars

    SEMICOLON       shift and go to state 22


state 19

    (6) id_list -> ID . COMMA id_list
    (7) id_list -> ID .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 7 (id_list -> ID .)
    RPAREN          reduce using rule 7 (id_list -> ID .)


state 20

    (10) main -> MAIN LPAREN . RPAREN LBRACE statute RBRACE

    RPAREN          shift and go to state 24


state 21

    (8) define_function -> FUNCTION type ID . parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID . parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function
    (11) parameters -> . LPAREN type COLON id_list RPAREN

    LPAREN          shift and go to state 26

    parameters                     shift and go to state 25

state 22

    (2) define_vars -> type COLON id_list SEMICOLON . define_vars
    (2) define_vars -> . type COLON id_list SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (49) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    FUNCTION        reduce using rule 49 (empty -> .)
    LBRACE          reduce using rule 49 (empty -> .)

    type                           shift and go to state 8
    define_vars                    shift and go to state 27
    empty                          shift and go to state 9

state 23

    (6) id_list -> ID COMMA . id_list
    (6) id_list -> . ID COMMA id_list
    (7) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 28

state 24

    (10) main -> MAIN LPAREN RPAREN . LBRACE statute RBRACE

    LBRACE          shift and go to state 29


state 25

    (8) define_function -> FUNCTION type ID parameters . ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters . ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function

    ENDL            shift and go to state 30


state 26

    (11) parameters -> LPAREN . type COLON id_list RPAREN
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    type                           shift and go to state 31

state 27

    (2) define_vars -> type COLON id_list SEMICOLON define_vars .

    FUNCTION        reduce using rule 2 (define_vars -> type COLON id_list SEMICOLON define_vars .)
    LBRACE          reduce using rule 2 (define_vars -> type COLON id_list SEMICOLON define_vars .)


state 28

    (6) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 6 (id_list -> ID COMMA id_list .)
    RPAREN          reduce using rule 6 (id_list -> ID COMMA id_list .)


state 29

    (10) main -> MAIN LPAREN RPAREN LBRACE . statute RBRACE
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 32
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 30

    (8) define_function -> FUNCTION type ID parameters ENDL . VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL . VARS define_vars LBRACE statute RBRACE ENDL define_function

    VARS            shift and go to state 48


state 31

    (11) parameters -> LPAREN type . COLON id_list RPAREN

    COLON           shift and go to state 49


state 32

    (10) main -> MAIN LPAREN RPAREN LBRACE statute . RBRACE

    RBRACE          shift and go to state 50


state 33

    (12) statute -> assignation . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    assignation                    shift and go to state 33
    statute                        shift and go to state 51
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 34

    (13) statute -> decision . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    decision                       shift and go to state 34
    statute                        shift and go to state 52
    assignation                    shift and go to state 33
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 35

    (14) statute -> condition . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    condition                      shift and go to state 35
    statute                        shift and go to state 53
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 36

    (15) statute -> no_condition . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    no_condition                   shift and go to state 36
    statute                        shift and go to state 54
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 37

    (16) statute -> return . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    return                         shift and go to state 37
    statute                        shift and go to state 55
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 38

    (17) statute -> define_write . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    define_write                   shift and go to state 38
    statute                        shift and go to state 56
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 39

    (18) statute -> read . statute
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    read                           shift and go to state 39
    statute                        shift and go to state 57
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    empty                          shift and go to state 40

state 40

    (19) statute -> empty .

    RBRACE          reduce using rule 19 (statute -> empty .)


state 41

    (20) assignation -> ID . EQUAL expression SEMICOLON
    (21) assignation -> ID . GREATERTHAN expression SEMICOLON
    (22) assignation -> ID . SMALLERTHAN expression SEMICOLON
    (23) assignation -> ID . EQUALTO expression SEMICOLON

    EQUAL           shift and go to state 58
    GREATERTHAN     shift and go to state 59
    SMALLERTHAN     shift and go to state 60
    EQUALTO         shift and go to state 61


state 42

    (24) decision -> IF . LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF . LPAREN expression RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 62


state 43

    (26) condition -> WHILE . LPAREN expression RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 63


state 44

    (27) no_condition -> FOR . ID EQUAL expression TO expression DO LBRACE statute RBRACE

    ID              shift and go to state 64


state 45

    (28) return -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 46

    (29) define_write -> WRITE . LPAREN write RPAREN SEMICOLON

    LPAREN          shift and go to state 66


state 47

    (34) read -> READ . LPAREN id_list RPAREN SEMICOLON

    LPAREN          shift and go to state 67


state 48

    (8) define_function -> FUNCTION type ID parameters ENDL VARS . define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL VARS . define_vars LBRACE statute RBRACE ENDL define_function
    (2) define_vars -> . type COLON id_list SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (49) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    LBRACE          reduce using rule 49 (empty -> .)

    type                           shift and go to state 8
    define_vars                    shift and go to state 68
    empty                          shift and go to state 9

state 49

    (11) parameters -> LPAREN type COLON . id_list RPAREN
    (6) id_list -> . ID COMMA id_list
    (7) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 69

state 50

    (10) main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .

    $end            reduce using rule 10 (main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .)


state 51

    (12) statute -> assignation statute .

    RBRACE          reduce using rule 12 (statute -> assignation statute .)


state 52

    (13) statute -> decision statute .

    RBRACE          reduce using rule 13 (statute -> decision statute .)


state 53

    (14) statute -> condition statute .

    RBRACE          reduce using rule 14 (statute -> condition statute .)


state 54

    (15) statute -> no_condition statute .

    RBRACE          reduce using rule 15 (statute -> no_condition statute .)


state 55

    (16) statute -> return statute .

    RBRACE          reduce using rule 16 (statute -> return statute .)


state 56

    (17) statute -> define_write statute .

    RBRACE          reduce using rule 17 (statute -> define_write statute .)


state 57

    (18) statute -> read statute .

    RBRACE          reduce using rule 18 (statute -> read statute .)


state 58

    (20) assignation -> ID EQUAL . expression SEMICOLON
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 71
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 59

    (21) assignation -> ID GREATERTHAN . expression SEMICOLON
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 78
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 60

    (22) assignation -> ID SMALLERTHAN . expression SEMICOLON
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 79
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 61

    (23) assignation -> ID EQUALTO . expression SEMICOLON
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 80
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 62

    (24) decision -> IF LPAREN . expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN . expression RPAREN THEN LBRACE statute RBRACE
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 81
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 63

    (26) condition -> WHILE LPAREN . expression RPAREN DO LBRACE statute RBRACE
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 82
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 64

    (27) no_condition -> FOR ID . EQUAL expression TO expression DO LBRACE statute RBRACE

    EQUAL           shift and go to state 83


state 65

    (28) return -> RETURN LPAREN . expression RPAREN SEMICOLON
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 84
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 66

    (29) define_write -> WRITE LPAREN . write RPAREN SEMICOLON
    (30) write -> . STRING
    (31) write -> . expression
    (32) write -> . STRING COMMA write
    (33) write -> . expression COMMA write
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 86
    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    write                          shift and go to state 85
    expression                     shift and go to state 87
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 67

    (34) read -> READ LPAREN . id_list RPAREN SEMICOLON
    (6) id_list -> . ID COMMA id_list
    (7) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 88

state 68

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars . LBRACE statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars . LBRACE statute RBRACE ENDL define_function

    LBRACE          shift and go to state 89


state 69

    (11) parameters -> LPAREN type COLON id_list . RPAREN

    RPAREN          shift and go to state 90


state 70

    (45) factor -> ID .

    TIMES           reduce using rule 45 (factor -> ID .)
    DIVIDE          reduce using rule 45 (factor -> ID .)
    SEMICOLON       reduce using rule 45 (factor -> ID .)
    PLUS            reduce using rule 45 (factor -> ID .)
    MINUS           reduce using rule 45 (factor -> ID .)
    GREATERTHAN     reduce using rule 45 (factor -> ID .)
    SMALLERTHAN     reduce using rule 45 (factor -> ID .)
    EQUALTO         reduce using rule 45 (factor -> ID .)
    RPAREN          reduce using rule 45 (factor -> ID .)
    COMMA           reduce using rule 45 (factor -> ID .)
    TO              reduce using rule 45 (factor -> ID .)
    DO              reduce using rule 45 (factor -> ID .)


state 71

    (20) assignation -> ID EQUAL expression . SEMICOLON
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    SEMICOLON       shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 72

    (46) factor -> PLUS . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    factor                         shift and go to state 97

state 73

    (40) expression -> term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 40 (expression -> term .)
    PLUS            reduce using rule 40 (expression -> term .)
    MINUS           reduce using rule 40 (expression -> term .)
    GREATERTHAN     reduce using rule 40 (expression -> term .)
    SMALLERTHAN     reduce using rule 40 (expression -> term .)
    EQUALTO         reduce using rule 40 (expression -> term .)
    RPAREN          reduce using rule 40 (expression -> term .)
    COMMA           reduce using rule 40 (expression -> term .)
    TO              reduce using rule 40 (expression -> term .)
    DO              reduce using rule 40 (expression -> term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 74

    (47) factor -> MINUS . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    factor                         shift and go to state 100

state 75

    (43) term -> factor .

    TIMES           reduce using rule 43 (term -> factor .)
    DIVIDE          reduce using rule 43 (term -> factor .)
    SEMICOLON       reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    GREATERTHAN     reduce using rule 43 (term -> factor .)
    SMALLERTHAN     reduce using rule 43 (term -> factor .)
    EQUALTO         reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    TO              reduce using rule 43 (term -> factor .)
    DO              reduce using rule 43 (term -> factor .)


state 76

    (44) factor -> NUMBER .

    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 44 (factor -> NUMBER .)
    PLUS            reduce using rule 44 (factor -> NUMBER .)
    MINUS           reduce using rule 44 (factor -> NUMBER .)
    GREATERTHAN     reduce using rule 44 (factor -> NUMBER .)
    SMALLERTHAN     reduce using rule 44 (factor -> NUMBER .)
    EQUALTO         reduce using rule 44 (factor -> NUMBER .)
    RPAREN          reduce using rule 44 (factor -> NUMBER .)
    COMMA           reduce using rule 44 (factor -> NUMBER .)
    TO              reduce using rule 44 (factor -> NUMBER .)
    DO              reduce using rule 44 (factor -> NUMBER .)


state 77

    (48) factor -> LPAREN . expression RPAREN
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 101
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 78

    (21) assignation -> ID GREATERTHAN expression . SEMICOLON
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    SEMICOLON       shift and go to state 102
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 79

    (22) assignation -> ID SMALLERTHAN expression . SEMICOLON
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    SEMICOLON       shift and go to state 103
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 80

    (23) assignation -> ID EQUALTO expression . SEMICOLON
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    SEMICOLON       shift and go to state 104
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 81

    (24) decision -> IF LPAREN expression . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression . RPAREN THEN LBRACE statute RBRACE
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 82

    (26) condition -> WHILE LPAREN expression . RPAREN DO LBRACE statute RBRACE
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 83

    (27) no_condition -> FOR ID EQUAL . expression TO expression DO LBRACE statute RBRACE
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 107
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 84

    (28) return -> RETURN LPAREN expression . RPAREN SEMICOLON
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 85

    (29) define_write -> WRITE LPAREN write . RPAREN SEMICOLON

    RPAREN          shift and go to state 109


state 86

    (30) write -> STRING .
    (32) write -> STRING . COMMA write

    RPAREN          reduce using rule 30 (write -> STRING .)
    COMMA           shift and go to state 110


state 87

    (31) write -> expression .
    (33) write -> expression . COMMA write
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    RPAREN          reduce using rule 31 (write -> expression .)
    COMMA           shift and go to state 111
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 88

    (34) read -> READ LPAREN id_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 112


state 89

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE . statute RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE . statute RBRACE ENDL define_function
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 113
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 90

    (11) parameters -> LPAREN type COLON id_list RPAREN .

    ENDL            reduce using rule 11 (parameters -> LPAREN type COLON id_list RPAREN .)


state 91

    (20) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    FOR             reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    WRITE           reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    READ            reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 20 (assignation -> ID EQUAL expression SEMICOLON .)


state 92

    (35) expression -> expression PLUS . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    term                           shift and go to state 114
    factor                         shift and go to state 75

state 93

    (36) expression -> expression MINUS . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    term                           shift and go to state 115
    factor                         shift and go to state 75

state 94

    (37) expression -> expression GREATERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    term                           shift and go to state 116
    factor                         shift and go to state 75

state 95

    (38) expression -> expression SMALLERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    term                           shift and go to state 117
    factor                         shift and go to state 75

state 96

    (39) expression -> expression EQUALTO . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    term                           shift and go to state 118
    factor                         shift and go to state 75

state 97

    (46) factor -> PLUS factor .

    TIMES           reduce using rule 46 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 46 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 46 (factor -> PLUS factor .)
    PLUS            reduce using rule 46 (factor -> PLUS factor .)
    MINUS           reduce using rule 46 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 46 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 46 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 46 (factor -> PLUS factor .)
    RPAREN          reduce using rule 46 (factor -> PLUS factor .)
    COMMA           reduce using rule 46 (factor -> PLUS factor .)
    TO              reduce using rule 46 (factor -> PLUS factor .)
    DO              reduce using rule 46 (factor -> PLUS factor .)


state 98

    (41) term -> term TIMES . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    factor                         shift and go to state 119

state 99

    (42) term -> term DIVIDE . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    factor                         shift and go to state 120

state 100

    (47) factor -> MINUS factor .

    TIMES           reduce using rule 47 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 47 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 47 (factor -> MINUS factor .)
    PLUS            reduce using rule 47 (factor -> MINUS factor .)
    MINUS           reduce using rule 47 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 47 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 47 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 47 (factor -> MINUS factor .)
    RPAREN          reduce using rule 47 (factor -> MINUS factor .)
    COMMA           reduce using rule 47 (factor -> MINUS factor .)
    TO              reduce using rule 47 (factor -> MINUS factor .)
    DO              reduce using rule 47 (factor -> MINUS factor .)


state 101

    (48) factor -> LPAREN expression . RPAREN
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 102

    (21) assignation -> ID GREATERTHAN expression SEMICOLON .

    ID              reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    IF              reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    WHILE           reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    FOR             reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    RETURN          reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    WRITE           reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    READ            reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    RBRACE          reduce using rule 21 (assignation -> ID GREATERTHAN expression SEMICOLON .)


state 103

    (22) assignation -> ID SMALLERTHAN expression SEMICOLON .

    ID              reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    IF              reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    WHILE           reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    FOR             reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    RETURN          reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    WRITE           reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    READ            reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    RBRACE          reduce using rule 22 (assignation -> ID SMALLERTHAN expression SEMICOLON .)


state 104

    (23) assignation -> ID EQUALTO expression SEMICOLON .

    ID              reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    IF              reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    WHILE           reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    FOR             reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    RETURN          reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    WRITE           reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    READ            reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)
    RBRACE          reduce using rule 23 (assignation -> ID EQUALTO expression SEMICOLON .)


state 105

    (24) decision -> IF LPAREN expression RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 122


state 106

    (26) condition -> WHILE LPAREN expression RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 123


state 107

    (27) no_condition -> FOR ID EQUAL expression . TO expression DO LBRACE statute RBRACE
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    TO              shift and go to state 124
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 108

    (28) return -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 125


state 109

    (29) define_write -> WRITE LPAREN write RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 110

    (32) write -> STRING COMMA . write
    (30) write -> . STRING
    (31) write -> . expression
    (32) write -> . STRING COMMA write
    (33) write -> . expression COMMA write
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 86
    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    write                          shift and go to state 127
    expression                     shift and go to state 87
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 111

    (33) write -> expression COMMA . write
    (30) write -> . STRING
    (31) write -> . expression
    (32) write -> . STRING COMMA write
    (33) write -> . expression COMMA write
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 86
    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 87
    write                          shift and go to state 128
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 112

    (34) read -> READ LPAREN id_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 129


state 113

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute . RBRACE ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute . RBRACE ENDL define_function

    RBRACE          shift and go to state 130


state 114

    (35) expression -> expression PLUS term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 35 (expression -> expression PLUS term .)
    PLUS            reduce using rule 35 (expression -> expression PLUS term .)
    MINUS           reduce using rule 35 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 35 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 35 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 35 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 35 (expression -> expression PLUS term .)
    COMMA           reduce using rule 35 (expression -> expression PLUS term .)
    TO              reduce using rule 35 (expression -> expression PLUS term .)
    DO              reduce using rule 35 (expression -> expression PLUS term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 115

    (36) expression -> expression MINUS term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 36 (expression -> expression MINUS term .)
    PLUS            reduce using rule 36 (expression -> expression MINUS term .)
    MINUS           reduce using rule 36 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 36 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 36 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 36 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 36 (expression -> expression MINUS term .)
    COMMA           reduce using rule 36 (expression -> expression MINUS term .)
    TO              reduce using rule 36 (expression -> expression MINUS term .)
    DO              reduce using rule 36 (expression -> expression MINUS term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 116

    (37) expression -> expression GREATERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 37 (expression -> expression GREATERTHAN term .)
    PLUS            reduce using rule 37 (expression -> expression GREATERTHAN term .)
    MINUS           reduce using rule 37 (expression -> expression GREATERTHAN term .)
    GREATERTHAN     reduce using rule 37 (expression -> expression GREATERTHAN term .)
    SMALLERTHAN     reduce using rule 37 (expression -> expression GREATERTHAN term .)
    EQUALTO         reduce using rule 37 (expression -> expression GREATERTHAN term .)
    RPAREN          reduce using rule 37 (expression -> expression GREATERTHAN term .)
    COMMA           reduce using rule 37 (expression -> expression GREATERTHAN term .)
    TO              reduce using rule 37 (expression -> expression GREATERTHAN term .)
    DO              reduce using rule 37 (expression -> expression GREATERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 117

    (38) expression -> expression SMALLERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    PLUS            reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    MINUS           reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    GREATERTHAN     reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    SMALLERTHAN     reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    EQUALTO         reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    RPAREN          reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    COMMA           reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    TO              reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    DO              reduce using rule 38 (expression -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 118

    (39) expression -> expression EQUALTO term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 39 (expression -> expression EQUALTO term .)
    PLUS            reduce using rule 39 (expression -> expression EQUALTO term .)
    MINUS           reduce using rule 39 (expression -> expression EQUALTO term .)
    GREATERTHAN     reduce using rule 39 (expression -> expression EQUALTO term .)
    SMALLERTHAN     reduce using rule 39 (expression -> expression EQUALTO term .)
    EQUALTO         reduce using rule 39 (expression -> expression EQUALTO term .)
    RPAREN          reduce using rule 39 (expression -> expression EQUALTO term .)
    COMMA           reduce using rule 39 (expression -> expression EQUALTO term .)
    TO              reduce using rule 39 (expression -> expression EQUALTO term .)
    DO              reduce using rule 39 (expression -> expression EQUALTO term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 119

    (41) term -> term TIMES factor .

    TIMES           reduce using rule 41 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 41 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 41 (term -> term TIMES factor .)
    PLUS            reduce using rule 41 (term -> term TIMES factor .)
    MINUS           reduce using rule 41 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 41 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 41 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 41 (term -> term TIMES factor .)
    RPAREN          reduce using rule 41 (term -> term TIMES factor .)
    COMMA           reduce using rule 41 (term -> term TIMES factor .)
    TO              reduce using rule 41 (term -> term TIMES factor .)
    DO              reduce using rule 41 (term -> term TIMES factor .)


state 120

    (42) term -> term DIVIDE factor .

    TIMES           reduce using rule 42 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 42 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 42 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 42 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 42 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 42 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 42 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 42 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 42 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 42 (term -> term DIVIDE factor .)
    TO              reduce using rule 42 (term -> term DIVIDE factor .)
    DO              reduce using rule 42 (term -> term DIVIDE factor .)


state 121

    (48) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 48 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 48 (factor -> LPAREN expression RPAREN .)


state 122

    (24) decision -> IF LPAREN expression RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 131


state 123

    (26) condition -> WHILE LPAREN expression RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 132


state 124

    (27) no_condition -> FOR ID EQUAL expression TO . expression DO LBRACE statute RBRACE
    (35) expression -> . expression PLUS term
    (36) expression -> . expression MINUS term
    (37) expression -> . expression GREATERTHAN term
    (38) expression -> . expression SMALLERTHAN term
    (39) expression -> . expression EQUALTO term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . ID
    (46) factor -> . PLUS factor
    (47) factor -> . MINUS factor
    (48) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 76
    ID              shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 77

    expression                     shift and go to state 133
    term                           shift and go to state 73
    factor                         shift and go to state 75

state 125

    (28) return -> RETURN LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 28 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 126

    (29) define_write -> WRITE LPAREN write RPAREN SEMICOLON .

    ID              reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    IF              reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    WRITE           reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    READ            reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)
    RBRACE          reduce using rule 29 (define_write -> WRITE LPAREN write RPAREN SEMICOLON .)


state 127

    (32) write -> STRING COMMA write .

    RPAREN          reduce using rule 32 (write -> STRING COMMA write .)


state 128

    (33) write -> expression COMMA write .

    RPAREN          reduce using rule 33 (write -> expression COMMA write .)


state 129

    (34) read -> READ LPAREN id_list RPAREN SEMICOLON .

    ID              reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    IF              reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    FOR             reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    WRITE           reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    READ            reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 34 (read -> READ LPAREN id_list RPAREN SEMICOLON .)


state 130

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE . ENDL
    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE . ENDL define_function

    ENDL            shift and go to state 134


state 131

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression RPAREN THEN LBRACE . statute RBRACE
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 135
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 132

    (26) condition -> WHILE LPAREN expression RPAREN DO LBRACE . statute RBRACE
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 136
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 133

    (27) no_condition -> FOR ID EQUAL expression TO expression . DO LBRACE statute RBRACE
    (35) expression -> expression . PLUS term
    (36) expression -> expression . MINUS term
    (37) expression -> expression . GREATERTHAN term
    (38) expression -> expression . SMALLERTHAN term
    (39) expression -> expression . EQUALTO term

    DO              shift and go to state 137
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    GREATERTHAN     shift and go to state 94
    SMALLERTHAN     shift and go to state 95
    EQUALTO         shift and go to state 96


state 134

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL .
    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL . define_function
    (8) define_function -> . FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL
    (9) define_function -> . FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function

    MAIN            reduce using rule 8 (define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL .)
    FUNCTION        shift and go to state 13

    define_function                shift and go to state 138

state 135

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 139


state 136

    (26) condition -> WHILE LPAREN expression RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 140


state 137

    (27) no_condition -> FOR ID EQUAL expression TO expression DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 141


state 138

    (9) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function .

    MAIN            reduce using rule 9 (define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE ENDL define_function .)


state 139

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE statute RBRACE
    (25) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 142
    ID              reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    FOR             reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    RETURN          reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    WRITE           reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    READ            reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 25 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE .)


state 140

    (26) condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    FOR             reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    WRITE           reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    READ            reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 26 (condition -> WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE .)


state 141

    (27) no_condition -> FOR ID EQUAL expression TO expression DO LBRACE . statute RBRACE
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 143
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 142

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE statute RBRACE

    LBRACE          shift and go to state 144


state 143

    (27) no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 145


state 144

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . statute RBRACE
    (12) statute -> . assignation statute
    (13) statute -> . decision statute
    (14) statute -> . condition statute
    (15) statute -> . no_condition statute
    (16) statute -> . return statute
    (17) statute -> . define_write statute
    (18) statute -> . read statute
    (19) statute -> . empty
    (20) assignation -> . ID EQUAL expression SEMICOLON
    (21) assignation -> . ID GREATERTHAN expression SEMICOLON
    (22) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (23) assignation -> . ID EQUALTO expression SEMICOLON
    (24) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (25) decision -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE
    (26) condition -> . WHILE LPAREN expression RPAREN DO LBRACE statute RBRACE
    (27) no_condition -> . FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE
    (28) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) define_write -> . WRITE LPAREN write RPAREN SEMICOLON
    (34) read -> . READ LPAREN id_list RPAREN SEMICOLON
    (49) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    RETURN          shift and go to state 45
    WRITE           shift and go to state 46
    READ            shift and go to state 47
    RBRACE          reduce using rule 49 (empty -> .)

    statute                        shift and go to state 146
    assignation                    shift and go to state 33
    decision                       shift and go to state 34
    condition                      shift and go to state 35
    no_condition                   shift and go to state 36
    return                         shift and go to state 37
    define_write                   shift and go to state 38
    read                           shift and go to state 39
    empty                          shift and go to state 40

state 145

    (27) no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .

    ID              reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    IF              reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    FOR             reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    WRITE           reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    READ            reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 27 (no_condition -> FOR ID EQUAL expression TO expression DO LBRACE statute RBRACE .)


state 146

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute . RBRACE

    RBRACE          shift and go to state 147


state 147

    (24) decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .

    ID              reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    IF              reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    WHILE           reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    FOR             reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    RETURN          reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    WRITE           reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    READ            reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    RBRACE          reduce using rule 24 (decision -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)

