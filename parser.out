Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ENDL
    FALSE
    FUNCTION
    LBRACKET
    MAIN
    OR
    PROGRAM
    RBRACKET
    READ
    RETURN
    TO
    TRUE
    WHILE
    WRITE

Grammar

Rule 0     S' -> define_function
Rule 1     define_function -> VARS define_vars LBRACE statute RBRACE
Rule 2     define_function -> VARS define_vars LBRACE statute RBRACE define_function
Rule 3     id_list -> ID COMMA id_list
Rule 4     id_list -> ID
Rule 5     define_vars -> type COLON id_list SEMICOLON define_vars
Rule 6     define_vars -> empty
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    type -> BOOL
Rule 11    statute -> assignation statute
Rule 12    statute -> decision statute
Rule 13    statute -> empty
Rule 14    assignation -> ID EQUAL expression SEMICOLON
Rule 15    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 16    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 17    def_else -> empty
Rule 18    expression_bool -> expression GREATERTHAN term
Rule 19    expression_bool -> expression SMALLERTHAN term
Rule 20    expression_bool -> expression EQUALTO term
Rule 21    expression -> expression PLUS term
Rule 22    expression -> expression MINUS term
Rule 23    expression -> term
Rule 24    term -> term TIMES factor
Rule 25    term -> term DIVIDE factor
Rule 26    term -> factor
Rule 27    factor -> FLOAT
Rule 28    factor -> INT
Rule 29    factor -> STRING
Rule 30    factor -> ID
Rule 31    factor -> PLUS factor
Rule 32    factor -> MINUS factor
Rule 33    factor -> LPAREN expression RPAREN
Rule 34    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 10
COLON                : 5
COMMA                : 3
DIVIDE               : 25
DO                   : 
ELSE                 : 16
ENDL                 : 
EQUAL                : 14
EQUALTO              : 20
FALSE                : 
FLOAT                : 8 27
FUNCTION             : 
GREATERTHAN          : 18
ID                   : 3 4 14 30
IF                   : 15 16
INT                  : 7 28
LBRACE               : 1 2 15 16 16
LBRACKET             : 
LPAREN               : 15 16 33
MAIN                 : 
MINUS                : 22 32
OR                   : 
PLUS                 : 21 31
PROGRAM              : 
RBRACE               : 1 2 15 16 16
RBRACKET             : 
READ                 : 
RETURN               : 
RPAREN               : 15 16 33
SEMICOLON            : 5 14
SMALLERTHAN          : 19
STRING               : 9 29
THEN                 : 15 16
TIMES                : 24
TO                   : 
TRUE                 : 
VARS                 : 1 2
WHILE                : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 11
decision             : 12
def_else             : 16
define_function      : 2 0
define_vars          : 1 2 5
empty                : 6 13 17
expression           : 14 18 19 20 21 22 33
expression_bool      : 15 16
factor               : 24 25 26 31 32
id_list              : 3 5
statute              : 1 2 11 12 15 16 16
term                 : 18 19 20 21 22 23 24 25
type                 : 5

Parsing method: LALR

state 0

    (0) S' -> . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    VARS            shift and go to state 2

    define_function                shift and go to state 1

state 1

    (0) S' -> define_function .



state 2

    (1) define_function -> VARS . define_vars LBRACE statute RBRACE
    (2) define_function -> VARS . define_vars LBRACE statute RBRACE define_function
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (34) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 34 (empty -> .)

    define_vars                    shift and go to state 3
    type                           shift and go to state 4
    empty                          shift and go to state 5

state 3

    (1) define_function -> VARS define_vars . LBRACE statute RBRACE
    (2) define_function -> VARS define_vars . LBRACE statute RBRACE define_function

    LBRACE          shift and go to state 10


state 4

    (5) define_vars -> type . COLON id_list SEMICOLON define_vars

    COLON           shift and go to state 11


state 5

    (6) define_vars -> empty .

    LBRACE          reduce using rule 6 (define_vars -> empty .)


state 6

    (7) type -> INT .

    COLON           reduce using rule 7 (type -> INT .)


state 7

    (8) type -> FLOAT .

    COLON           reduce using rule 8 (type -> FLOAT .)


state 8

    (9) type -> STRING .

    COLON           reduce using rule 9 (type -> STRING .)


state 9

    (10) type -> BOOL .

    COLON           reduce using rule 10 (type -> BOOL .)


state 10

    (1) define_function -> VARS define_vars LBRACE . statute RBRACE
    (2) define_function -> VARS define_vars LBRACE . statute RBRACE define_function
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . empty
    (14) assignation -> . ID EQUAL expression SEMICOLON
    (15) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (34) empty -> .

    ID              shift and go to state 16
    IF              shift and go to state 17
    RBRACE          reduce using rule 34 (empty -> .)

    statute                        shift and go to state 12
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    empty                          shift and go to state 15

state 11

    (5) define_vars -> type COLON . id_list SEMICOLON define_vars
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 18

state 12

    (1) define_function -> VARS define_vars LBRACE statute . RBRACE
    (2) define_function -> VARS define_vars LBRACE statute . RBRACE define_function

    RBRACE          shift and go to state 20


state 13

    (11) statute -> assignation . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . empty
    (14) assignation -> . ID EQUAL expression SEMICOLON
    (15) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (34) empty -> .

    ID              shift and go to state 16
    IF              shift and go to state 17
    RBRACE          reduce using rule 34 (empty -> .)

    assignation                    shift and go to state 13
    statute                        shift and go to state 21
    decision                       shift and go to state 14
    empty                          shift and go to state 15

state 14

    (12) statute -> decision . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . empty
    (14) assignation -> . ID EQUAL expression SEMICOLON
    (15) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (34) empty -> .

    ID              shift and go to state 16
    IF              shift and go to state 17
    RBRACE          reduce using rule 34 (empty -> .)

    decision                       shift and go to state 14
    statute                        shift and go to state 22
    assignation                    shift and go to state 13
    empty                          shift and go to state 15

state 15

    (13) statute -> empty .

    RBRACE          reduce using rule 13 (statute -> empty .)


state 16

    (14) assignation -> ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 23


state 17

    (15) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE

    LPAREN          shift and go to state 24


state 18

    (5) define_vars -> type COLON id_list . SEMICOLON define_vars

    SEMICOLON       shift and go to state 25


state 19

    (3) id_list -> ID . COMMA id_list
    (4) id_list -> ID .

    COMMA           shift and go to state 26
    SEMICOLON       reduce using rule 4 (id_list -> ID .)


state 20

    (1) define_function -> VARS define_vars LBRACE statute RBRACE .
    (2) define_function -> VARS define_vars LBRACE statute RBRACE . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    $end            reduce using rule 1 (define_function -> VARS define_vars LBRACE statute RBRACE .)
    VARS            shift and go to state 2

    define_function                shift and go to state 27

state 21

    (11) statute -> assignation statute .

    RBRACE          reduce using rule 11 (statute -> assignation statute .)


state 22

    (12) statute -> decision statute .

    RBRACE          reduce using rule 12 (statute -> decision statute .)


state 23

    (14) assignation -> ID EQUAL . expression SEMICOLON
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    expression                     shift and go to state 29
    term                           shift and go to state 31
    factor                         shift and go to state 33

state 24

    (15) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) expression_bool -> . expression GREATERTHAN term
    (19) expression_bool -> . expression SMALLERTHAN term
    (20) expression_bool -> . expression EQUALTO term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    expression_bool                shift and go to state 38
    expression                     shift and go to state 39
    term                           shift and go to state 31
    factor                         shift and go to state 33

state 25

    (5) define_vars -> type COLON id_list SEMICOLON . define_vars
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (34) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 34 (empty -> .)

    type                           shift and go to state 4
    define_vars                    shift and go to state 40
    empty                          shift and go to state 5

state 26

    (3) id_list -> ID COMMA . id_list
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 19

    id_list                        shift and go to state 41

state 27

    (2) define_function -> VARS define_vars LBRACE statute RBRACE define_function .

    $end            reduce using rule 2 (define_function -> VARS define_vars LBRACE statute RBRACE define_function .)


state 28

    (30) factor -> ID .

    TIMES           reduce using rule 30 (factor -> ID .)
    DIVIDE          reduce using rule 30 (factor -> ID .)
    SEMICOLON       reduce using rule 30 (factor -> ID .)
    PLUS            reduce using rule 30 (factor -> ID .)
    MINUS           reduce using rule 30 (factor -> ID .)
    GREATERTHAN     reduce using rule 30 (factor -> ID .)
    SMALLERTHAN     reduce using rule 30 (factor -> ID .)
    EQUALTO         reduce using rule 30 (factor -> ID .)
    RPAREN          reduce using rule 30 (factor -> ID .)


state 29

    (14) assignation -> ID EQUAL expression . SEMICOLON
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 30

    (31) factor -> PLUS . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    factor                         shift and go to state 45

state 31

    (23) expression -> term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 23 (expression -> term .)
    PLUS            reduce using rule 23 (expression -> term .)
    MINUS           reduce using rule 23 (expression -> term .)
    GREATERTHAN     reduce using rule 23 (expression -> term .)
    SMALLERTHAN     reduce using rule 23 (expression -> term .)
    EQUALTO         reduce using rule 23 (expression -> term .)
    RPAREN          reduce using rule 23 (expression -> term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 32

    (32) factor -> MINUS . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    factor                         shift and go to state 48

state 33

    (26) term -> factor .

    TIMES           reduce using rule 26 (term -> factor .)
    DIVIDE          reduce using rule 26 (term -> factor .)
    SEMICOLON       reduce using rule 26 (term -> factor .)
    PLUS            reduce using rule 26 (term -> factor .)
    MINUS           reduce using rule 26 (term -> factor .)
    GREATERTHAN     reduce using rule 26 (term -> factor .)
    SMALLERTHAN     reduce using rule 26 (term -> factor .)
    EQUALTO         reduce using rule 26 (term -> factor .)
    RPAREN          reduce using rule 26 (term -> factor .)


state 34

    (27) factor -> FLOAT .

    TIMES           reduce using rule 27 (factor -> FLOAT .)
    DIVIDE          reduce using rule 27 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 27 (factor -> FLOAT .)
    PLUS            reduce using rule 27 (factor -> FLOAT .)
    MINUS           reduce using rule 27 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 27 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 27 (factor -> FLOAT .)
    EQUALTO         reduce using rule 27 (factor -> FLOAT .)
    RPAREN          reduce using rule 27 (factor -> FLOAT .)


state 35

    (28) factor -> INT .

    TIMES           reduce using rule 28 (factor -> INT .)
    DIVIDE          reduce using rule 28 (factor -> INT .)
    SEMICOLON       reduce using rule 28 (factor -> INT .)
    PLUS            reduce using rule 28 (factor -> INT .)
    MINUS           reduce using rule 28 (factor -> INT .)
    GREATERTHAN     reduce using rule 28 (factor -> INT .)
    SMALLERTHAN     reduce using rule 28 (factor -> INT .)
    EQUALTO         reduce using rule 28 (factor -> INT .)
    RPAREN          reduce using rule 28 (factor -> INT .)


state 36

    (29) factor -> STRING .

    TIMES           reduce using rule 29 (factor -> STRING .)
    DIVIDE          reduce using rule 29 (factor -> STRING .)
    SEMICOLON       reduce using rule 29 (factor -> STRING .)
    PLUS            reduce using rule 29 (factor -> STRING .)
    MINUS           reduce using rule 29 (factor -> STRING .)
    GREATERTHAN     reduce using rule 29 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 29 (factor -> STRING .)
    EQUALTO         reduce using rule 29 (factor -> STRING .)
    RPAREN          reduce using rule 29 (factor -> STRING .)


state 37

    (33) factor -> LPAREN . expression RPAREN
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    expression                     shift and go to state 49
    term                           shift and go to state 31
    factor                         shift and go to state 33

state 38

    (15) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE
    (16) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE

    RPAREN          shift and go to state 50


state 39

    (18) expression_bool -> expression . GREATERTHAN term
    (19) expression_bool -> expression . SMALLERTHAN term
    (20) expression_bool -> expression . EQUALTO term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 51
    SMALLERTHAN     shift and go to state 52
    EQUALTO         shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 40

    (5) define_vars -> type COLON id_list SEMICOLON define_vars .

    LBRACE          reduce using rule 5 (define_vars -> type COLON id_list SEMICOLON define_vars .)


state 41

    (3) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 3 (id_list -> ID COMMA id_list .)


state 42

    (14) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 14 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 14 (assignation -> ID EQUAL expression SEMICOLON .)


state 43

    (21) expression -> expression PLUS . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    term                           shift and go to state 54
    factor                         shift and go to state 33

state 44

    (22) expression -> expression MINUS . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    term                           shift and go to state 55
    factor                         shift and go to state 33

state 45

    (31) factor -> PLUS factor .

    TIMES           reduce using rule 31 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 31 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 31 (factor -> PLUS factor .)
    PLUS            reduce using rule 31 (factor -> PLUS factor .)
    MINUS           reduce using rule 31 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 31 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 31 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 31 (factor -> PLUS factor .)
    RPAREN          reduce using rule 31 (factor -> PLUS factor .)


state 46

    (24) term -> term TIMES . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    factor                         shift and go to state 56

state 47

    (25) term -> term DIVIDE . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    factor                         shift and go to state 57

state 48

    (32) factor -> MINUS factor .

    TIMES           reduce using rule 32 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 32 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 32 (factor -> MINUS factor .)
    PLUS            reduce using rule 32 (factor -> MINUS factor .)
    MINUS           reduce using rule 32 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 32 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 32 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 32 (factor -> MINUS factor .)
    RPAREN          reduce using rule 32 (factor -> MINUS factor .)


state 49

    (33) factor -> LPAREN expression . RPAREN
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 50

    (15) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE
    (16) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE

    THEN            shift and go to state 59


state 51

    (18) expression_bool -> expression GREATERTHAN . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    term                           shift and go to state 60
    factor                         shift and go to state 33

state 52

    (19) expression_bool -> expression SMALLERTHAN . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    term                           shift and go to state 61
    factor                         shift and go to state 33

state 53

    (20) expression_bool -> expression EQUALTO . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . FLOAT
    (28) factor -> . INT
    (29) factor -> . STRING
    (30) factor -> . ID
    (31) factor -> . PLUS factor
    (32) factor -> . MINUS factor
    (33) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 34
    INT             shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 37

    term                           shift and go to state 62
    factor                         shift and go to state 33

state 54

    (21) expression -> expression PLUS term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 21 (expression -> expression PLUS term .)
    PLUS            reduce using rule 21 (expression -> expression PLUS term .)
    MINUS           reduce using rule 21 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 21 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 21 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 21 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 21 (expression -> expression PLUS term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 55

    (22) expression -> expression MINUS term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 22 (expression -> expression MINUS term .)
    PLUS            reduce using rule 22 (expression -> expression MINUS term .)
    MINUS           reduce using rule 22 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 22 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 22 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 22 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 22 (expression -> expression MINUS term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 56

    (24) term -> term TIMES factor .

    TIMES           reduce using rule 24 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 24 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 24 (term -> term TIMES factor .)
    PLUS            reduce using rule 24 (term -> term TIMES factor .)
    MINUS           reduce using rule 24 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 24 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 24 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 24 (term -> term TIMES factor .)
    RPAREN          reduce using rule 24 (term -> term TIMES factor .)


state 57

    (25) term -> term DIVIDE factor .

    TIMES           reduce using rule 25 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 25 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 25 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 25 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 25 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 25 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 25 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 25 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 25 (term -> term DIVIDE factor .)


state 58

    (33) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)


state 59

    (15) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE
    (16) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 63


state 60

    (18) expression_bool -> expression GREATERTHAN term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    RPAREN          reduce using rule 18 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 61

    (19) expression_bool -> expression SMALLERTHAN term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    RPAREN          reduce using rule 19 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 62

    (20) expression_bool -> expression EQUALTO term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

    RPAREN          reduce using rule 20 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 63

    (15) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . empty
    (14) assignation -> . ID EQUAL expression SEMICOLON
    (15) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (34) empty -> .

    ID              shift and go to state 16
    IF              shift and go to state 17
    RBRACE          reduce using rule 34 (empty -> .)

    statute                        shift and go to state 64
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    empty                          shift and go to state 15

state 64

    (15) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE
    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE

    RBRACE          shift and go to state 65


state 65

    (15) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .
    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE

    ID              reduce using rule 15 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 15 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 15 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    ELSE            shift and go to state 66


state 66

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 67


state 67

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (17) def_else -> . empty
    (34) empty -> .

    ID              reduce using rule 34 (empty -> .)
    IF              reduce using rule 34 (empty -> .)
    RBRACE          reduce using rule 34 (empty -> .)

    def_else                       shift and go to state 68
    empty                          shift and go to state 69

state 68

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . empty
    (14) assignation -> . ID EQUAL expression SEMICOLON
    (15) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (16) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (34) empty -> .

    ID              shift and go to state 16
    IF              shift and go to state 17
    RBRACE          reduce using rule 34 (empty -> .)

    statute                        shift and go to state 70
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    empty                          shift and go to state 15

state 69

    (17) def_else -> empty .

    ID              reduce using rule 17 (def_else -> empty .)
    IF              reduce using rule 17 (def_else -> empty .)
    RBRACE          reduce using rule 17 (def_else -> empty .)


state 70

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 71


state 71

    (16) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 16 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

