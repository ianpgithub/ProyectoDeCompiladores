Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDL
    FALSE
    LBRACKET
    OR
    RBRACKET
    READ
    TO
    TRUE
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main
Rule 2     goto_main -> empty
Rule 3     id_list -> ID COMMA id_list
Rule 4     id_list -> ID
Rule 5     define_vars_global -> type COLON id_list SEMICOLON define_vars_global
Rule 6     define_vars_global -> empty
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    type -> BOOL
Rule 11    define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function
Rule 12    define_function -> empty
Rule 13    endfunc -> empty
Rule 14    define_vars_function -> type COLON id_list SEMICOLON define_vars_function
Rule 15    define_vars_function -> empty
Rule 16    function -> ID LPAREN era_function expression RPAREN SEMICOLON
Rule 17    era_function -> empty
Rule 18    main -> MAIN LPAREN RPAREN LBRACE statute RBRACE
Rule 19    parameters -> LPAREN type COLON id_list RPAREN
Rule 20    statute -> assignation statute
Rule 21    statute -> decision statute
Rule 22    statute -> condition statute
Rule 23    statute -> return statute
Rule 24    statute -> function statute
Rule 25    statute -> empty
Rule 26    assignation -> ID EQUAL expression SEMICOLON
Rule 27    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 28    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 29    def_else -> empty
Rule 30    condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
Rule 31    expression_bool -> expression GREATERTHAN term
Rule 32    expression_bool -> expression SMALLERTHAN term
Rule 33    expression_bool -> expression EQUALTO term
Rule 34    expression_bool_while -> expression GREATERTHAN term
Rule 35    expression_bool_while -> expression SMALLERTHAN term
Rule 36    expression_bool_while -> expression EQUALTO term
Rule 37    return -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 38    expression -> expression PLUS term
Rule 39    expression -> expression MINUS term
Rule 40    expression -> term
Rule 41    term -> term TIMES factor
Rule 42    term -> term DIVIDE factor
Rule 43    term -> factor
Rule 44    factor -> FLOAT
Rule 45    factor -> INT
Rule 46    factor -> STRING
Rule 47    factor -> function
Rule 48    factor -> ID
Rule 49    factor -> PLUS factor
Rule 50    factor -> MINUS factor
Rule 51    factor -> LPAREN expression RPAREN
Rule 52    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 10
COLON                : 5 14 19
COMMA                : 3
DIVIDE               : 42
DO                   : 30
ELSE                 : 27
ENDL                 : 
EQUAL                : 26
EQUALTO              : 33 36
FALSE                : 
FLOAT                : 8 44
FUNCTION             : 11
GREATERTHAN          : 31 34
ID                   : 1 3 4 11 16 26 48
IF                   : 27 28
INT                  : 7 45
LBRACE               : 11 18 27 27 28 30
LBRACKET             : 
LPAREN               : 16 18 19 27 28 30 37 51
MAIN                 : 18
MINUS                : 39 50
OR                   : 
PLUS                 : 38 49
PROGRAM              : 1
RBRACE               : 11 18 27 27 28 30
RBRACKET             : 
READ                 : 
RETURN               : 37
RPAREN               : 16 18 19 27 28 30 37 51
SEMICOLON            : 1 5 14 16 26 37
SMALLERTHAN          : 32 35
STRING               : 9 46
THEN                 : 27 28
TIMES                : 41
TO                   : 
TRUE                 : 
VARS                 : 1 11
WHILE                : 30
WRITE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 20
condition            : 22
decision             : 21
def_else             : 27
define_function      : 1 11
define_vars_function : 11 14
define_vars_global   : 1 5
empty                : 2 6 12 13 15 17 25 29
endfunc              : 11
era_function         : 16
expression           : 16 26 31 32 33 34 35 36 37 38 39 51
expression_bool      : 27 28
expression_bool_while : 30
factor               : 41 42 43 49 50
function             : 24 47
goto_main            : 1
id_list              : 3 5 14 19
main                 : 1
parameters           : 11
program              : 0
return               : 23
statute              : 11 18 20 21 22 23 24 27 27 28 30
term                 : 31 32 33 34 35 36 38 39 40 41 42
type                 : 5 11 14 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main
    (2) goto_main -> . empty
    (52) empty -> .

    PROGRAM         reduce using rule 52 (empty -> .)

    program                        shift and go to state 1
    goto_main                      shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> goto_main . PROGRAM ID SEMICOLON VARS define_vars_global define_function main

    PROGRAM         shift and go to state 4


state 3

    (2) goto_main -> empty .

    PROGRAM         reduce using rule 2 (goto_main -> empty .)


state 4

    (1) program -> goto_main PROGRAM . ID SEMICOLON VARS define_vars_global define_function main

    ID              shift and go to state 5


state 5

    (1) program -> goto_main PROGRAM ID . SEMICOLON VARS define_vars_global define_function main

    SEMICOLON       shift and go to state 6


state 6

    (1) program -> goto_main PROGRAM ID SEMICOLON . VARS define_vars_global define_function main

    VARS            shift and go to state 7


state 7

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS . define_vars_global define_function main
    (5) define_vars_global -> . type COLON id_list SEMICOLON define_vars_global
    (6) define_vars_global -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (52) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14
    FUNCTION        reduce using rule 52 (empty -> .)
    MAIN            reduce using rule 52 (empty -> .)

    define_vars_global             shift and go to state 8
    type                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global . define_function main
    (11) define_function -> . FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function
    (12) define_function -> . empty
    (52) empty -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 52 (empty -> .)

    define_function                shift and go to state 15
    empty                          shift and go to state 17

state 9

    (5) define_vars_global -> type . COLON id_list SEMICOLON define_vars_global

    COLON           shift and go to state 18


state 10

    (6) define_vars_global -> empty .

    FUNCTION        reduce using rule 6 (define_vars_global -> empty .)
    MAIN            reduce using rule 6 (define_vars_global -> empty .)


state 11

    (7) type -> INT .

    COLON           reduce using rule 7 (type -> INT .)
    ID              reduce using rule 7 (type -> INT .)


state 12

    (8) type -> FLOAT .

    COLON           reduce using rule 8 (type -> FLOAT .)
    ID              reduce using rule 8 (type -> FLOAT .)


state 13

    (9) type -> STRING .

    COLON           reduce using rule 9 (type -> STRING .)
    ID              reduce using rule 9 (type -> STRING .)


state 14

    (10) type -> BOOL .

    COLON           reduce using rule 10 (type -> BOOL .)
    ID              reduce using rule 10 (type -> BOOL .)


state 15

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function . main
    (18) main -> . MAIN LPAREN RPAREN LBRACE statute RBRACE

    MAIN            shift and go to state 20

    main                           shift and go to state 19

state 16

    (11) define_function -> FUNCTION . type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14

    type                           shift and go to state 21

state 17

    (12) define_function -> empty .

    MAIN            reduce using rule 12 (define_function -> empty .)


state 18

    (5) define_vars_global -> type COLON . id_list SEMICOLON define_vars_global
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 22

state 19

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main .

    $end            reduce using rule 1 (program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main .)


state 20

    (18) main -> MAIN . LPAREN RPAREN LBRACE statute RBRACE

    LPAREN          shift and go to state 24


state 21

    (11) define_function -> FUNCTION type . ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function

    ID              shift and go to state 25


state 22

    (5) define_vars_global -> type COLON id_list . SEMICOLON define_vars_global

    SEMICOLON       shift and go to state 26


state 23

    (3) id_list -> ID . COMMA id_list
    (4) id_list -> ID .

    COMMA           shift and go to state 27
    SEMICOLON       reduce using rule 4 (id_list -> ID .)
    RPAREN          reduce using rule 4 (id_list -> ID .)


state 24

    (18) main -> MAIN LPAREN . RPAREN LBRACE statute RBRACE

    RPAREN          shift and go to state 28


state 25

    (11) define_function -> FUNCTION type ID . parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function
    (19) parameters -> . LPAREN type COLON id_list RPAREN

    LPAREN          shift and go to state 30

    parameters                     shift and go to state 29

state 26

    (5) define_vars_global -> type COLON id_list SEMICOLON . define_vars_global
    (5) define_vars_global -> . type COLON id_list SEMICOLON define_vars_global
    (6) define_vars_global -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (52) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14
    FUNCTION        reduce using rule 52 (empty -> .)
    MAIN            reduce using rule 52 (empty -> .)

    type                           shift and go to state 9
    define_vars_global             shift and go to state 31
    empty                          shift and go to state 10

state 27

    (3) id_list -> ID COMMA . id_list
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 32

state 28

    (18) main -> MAIN LPAREN RPAREN . LBRACE statute RBRACE

    LBRACE          shift and go to state 33


state 29

    (11) define_function -> FUNCTION type ID parameters . VARS define_vars_function LBRACE statute RBRACE endfunc define_function

    VARS            shift and go to state 34


state 30

    (19) parameters -> LPAREN . type COLON id_list RPAREN
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14

    type                           shift and go to state 35

state 31

    (5) define_vars_global -> type COLON id_list SEMICOLON define_vars_global .

    FUNCTION        reduce using rule 5 (define_vars_global -> type COLON id_list SEMICOLON define_vars_global .)
    MAIN            reduce using rule 5 (define_vars_global -> type COLON id_list SEMICOLON define_vars_global .)


state 32

    (3) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 3 (id_list -> ID COMMA id_list .)
    RPAREN          reduce using rule 3 (id_list -> ID COMMA id_list .)


state 33

    (18) main -> MAIN LPAREN RPAREN LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    statute                        shift and go to state 36
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 34

    (11) define_function -> FUNCTION type ID parameters VARS . define_vars_function LBRACE statute RBRACE endfunc define_function
    (14) define_vars_function -> . type COLON id_list SEMICOLON define_vars_function
    (15) define_vars_function -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (52) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14
    LBRACE          reduce using rule 52 (empty -> .)

    type                           shift and go to state 47
    define_vars_function           shift and go to state 48
    empty                          shift and go to state 49

state 35

    (19) parameters -> LPAREN type . COLON id_list RPAREN

    COLON           shift and go to state 50


state 36

    (18) main -> MAIN LPAREN RPAREN LBRACE statute . RBRACE

    RBRACE          shift and go to state 51


state 37

    (20) statute -> assignation . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    assignation                    shift and go to state 37
    statute                        shift and go to state 52
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 38

    (21) statute -> decision . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    decision                       shift and go to state 38
    statute                        shift and go to state 53
    assignation                    shift and go to state 37
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 39

    (22) statute -> condition . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    condition                      shift and go to state 39
    statute                        shift and go to state 54
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 40

    (23) statute -> return . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    return                         shift and go to state 40
    statute                        shift and go to state 55
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 41

    (24) statute -> function . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    function                       shift and go to state 41
    statute                        shift and go to state 56
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    empty                          shift and go to state 42

state 42

    (25) statute -> empty .

    RBRACE          reduce using rule 25 (statute -> empty .)


state 43

    (26) assignation -> ID . EQUAL expression SEMICOLON
    (16) function -> ID . LPAREN era_function expression RPAREN SEMICOLON

    EQUAL           shift and go to state 57
    LPAREN          shift and go to state 58


state 44

    (27) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 59


state 45

    (30) condition -> WHILE . LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 60


state 46

    (37) return -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 61


state 47

    (14) define_vars_function -> type . COLON id_list SEMICOLON define_vars_function

    COLON           shift and go to state 62


state 48

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function . LBRACE statute RBRACE endfunc define_function

    LBRACE          shift and go to state 63


state 49

    (15) define_vars_function -> empty .

    LBRACE          reduce using rule 15 (define_vars_function -> empty .)


state 50

    (19) parameters -> LPAREN type COLON . id_list RPAREN
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 64

state 51

    (18) main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .

    $end            reduce using rule 18 (main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .)


state 52

    (20) statute -> assignation statute .

    RBRACE          reduce using rule 20 (statute -> assignation statute .)


state 53

    (21) statute -> decision statute .

    RBRACE          reduce using rule 21 (statute -> decision statute .)


state 54

    (22) statute -> condition statute .

    RBRACE          reduce using rule 22 (statute -> condition statute .)


state 55

    (23) statute -> return statute .

    RBRACE          reduce using rule 23 (statute -> return statute .)


state 56

    (24) statute -> function statute .

    RBRACE          reduce using rule 24 (statute -> function statute .)


state 57

    (26) assignation -> ID EQUAL . expression SEMICOLON
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression                     shift and go to state 66
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 58

    (16) function -> ID LPAREN . era_function expression RPAREN SEMICOLON
    (17) era_function -> . empty
    (52) empty -> .

    FLOAT           reduce using rule 52 (empty -> .)
    INT             reduce using rule 52 (empty -> .)
    STRING          reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    PLUS            reduce using rule 52 (empty -> .)
    MINUS           reduce using rule 52 (empty -> .)
    LPAREN          reduce using rule 52 (empty -> .)

    era_function                   shift and go to state 76
    empty                          shift and go to state 77

state 59

    (27) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (31) expression_bool -> . expression GREATERTHAN term
    (32) expression_bool -> . expression SMALLERTHAN term
    (33) expression_bool -> . expression EQUALTO term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression_bool                shift and go to state 78
    expression                     shift and go to state 79
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 60

    (30) condition -> WHILE LPAREN . expression_bool_while RPAREN DO LBRACE statute RBRACE
    (34) expression_bool_while -> . expression GREATERTHAN term
    (35) expression_bool_while -> . expression SMALLERTHAN term
    (36) expression_bool_while -> . expression EQUALTO term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression_bool_while          shift and go to state 80
    expression                     shift and go to state 81
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 61

    (37) return -> RETURN LPAREN . expression RPAREN SEMICOLON
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression                     shift and go to state 82
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 62

    (14) define_vars_function -> type COLON . id_list SEMICOLON define_vars_function
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 83

state 63

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE . statute RBRACE endfunc define_function
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    statute                        shift and go to state 84
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 64

    (19) parameters -> LPAREN type COLON id_list . RPAREN

    RPAREN          shift and go to state 85


state 65

    (48) factor -> ID .
    (16) function -> ID . LPAREN era_function expression RPAREN SEMICOLON

    TIMES           reduce using rule 48 (factor -> ID .)
    DIVIDE          reduce using rule 48 (factor -> ID .)
    SEMICOLON       reduce using rule 48 (factor -> ID .)
    PLUS            reduce using rule 48 (factor -> ID .)
    MINUS           reduce using rule 48 (factor -> ID .)
    GREATERTHAN     reduce using rule 48 (factor -> ID .)
    SMALLERTHAN     reduce using rule 48 (factor -> ID .)
    EQUALTO         reduce using rule 48 (factor -> ID .)
    RPAREN          reduce using rule 48 (factor -> ID .)
    LPAREN          shift and go to state 58


state 66

    (26) assignation -> ID EQUAL expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 86
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 67

    (49) factor -> PLUS . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    factor                         shift and go to state 89
    function                       shift and go to state 74

state 68

    (40) expression -> term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 40 (expression -> term .)
    PLUS            reduce using rule 40 (expression -> term .)
    MINUS           reduce using rule 40 (expression -> term .)
    GREATERTHAN     reduce using rule 40 (expression -> term .)
    SMALLERTHAN     reduce using rule 40 (expression -> term .)
    EQUALTO         reduce using rule 40 (expression -> term .)
    RPAREN          reduce using rule 40 (expression -> term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 69

    (50) factor -> MINUS . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    factor                         shift and go to state 92
    function                       shift and go to state 74

state 70

    (43) term -> factor .

    TIMES           reduce using rule 43 (term -> factor .)
    DIVIDE          reduce using rule 43 (term -> factor .)
    SEMICOLON       reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    GREATERTHAN     reduce using rule 43 (term -> factor .)
    SMALLERTHAN     reduce using rule 43 (term -> factor .)
    EQUALTO         reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)


state 71

    (44) factor -> FLOAT .

    TIMES           reduce using rule 44 (factor -> FLOAT .)
    DIVIDE          reduce using rule 44 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 44 (factor -> FLOAT .)
    PLUS            reduce using rule 44 (factor -> FLOAT .)
    MINUS           reduce using rule 44 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 44 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 44 (factor -> FLOAT .)
    EQUALTO         reduce using rule 44 (factor -> FLOAT .)
    RPAREN          reduce using rule 44 (factor -> FLOAT .)


state 72

    (45) factor -> INT .

    TIMES           reduce using rule 45 (factor -> INT .)
    DIVIDE          reduce using rule 45 (factor -> INT .)
    SEMICOLON       reduce using rule 45 (factor -> INT .)
    PLUS            reduce using rule 45 (factor -> INT .)
    MINUS           reduce using rule 45 (factor -> INT .)
    GREATERTHAN     reduce using rule 45 (factor -> INT .)
    SMALLERTHAN     reduce using rule 45 (factor -> INT .)
    EQUALTO         reduce using rule 45 (factor -> INT .)
    RPAREN          reduce using rule 45 (factor -> INT .)


state 73

    (46) factor -> STRING .

    TIMES           reduce using rule 46 (factor -> STRING .)
    DIVIDE          reduce using rule 46 (factor -> STRING .)
    SEMICOLON       reduce using rule 46 (factor -> STRING .)
    PLUS            reduce using rule 46 (factor -> STRING .)
    MINUS           reduce using rule 46 (factor -> STRING .)
    GREATERTHAN     reduce using rule 46 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 46 (factor -> STRING .)
    EQUALTO         reduce using rule 46 (factor -> STRING .)
    RPAREN          reduce using rule 46 (factor -> STRING .)


state 74

    (47) factor -> function .

    TIMES           reduce using rule 47 (factor -> function .)
    DIVIDE          reduce using rule 47 (factor -> function .)
    SEMICOLON       reduce using rule 47 (factor -> function .)
    PLUS            reduce using rule 47 (factor -> function .)
    MINUS           reduce using rule 47 (factor -> function .)
    GREATERTHAN     reduce using rule 47 (factor -> function .)
    SMALLERTHAN     reduce using rule 47 (factor -> function .)
    EQUALTO         reduce using rule 47 (factor -> function .)
    RPAREN          reduce using rule 47 (factor -> function .)


state 75

    (51) factor -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression                     shift and go to state 93
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 76

    (16) function -> ID LPAREN era_function . expression RPAREN SEMICOLON
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (40) expression -> . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    expression                     shift and go to state 94
    term                           shift and go to state 68
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 77

    (17) era_function -> empty .

    FLOAT           reduce using rule 17 (era_function -> empty .)
    INT             reduce using rule 17 (era_function -> empty .)
    STRING          reduce using rule 17 (era_function -> empty .)
    ID              reduce using rule 17 (era_function -> empty .)
    PLUS            reduce using rule 17 (era_function -> empty .)
    MINUS           reduce using rule 17 (era_function -> empty .)
    LPAREN          reduce using rule 17 (era_function -> empty .)


state 78

    (27) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE

    RPAREN          shift and go to state 95


state 79

    (31) expression_bool -> expression . GREATERTHAN term
    (32) expression_bool -> expression . SMALLERTHAN term
    (33) expression_bool -> expression . EQUALTO term
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 96
    SMALLERTHAN     shift and go to state 97
    EQUALTO         shift and go to state 98
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 80

    (30) condition -> WHILE LPAREN expression_bool_while . RPAREN DO LBRACE statute RBRACE

    RPAREN          shift and go to state 99


state 81

    (34) expression_bool_while -> expression . GREATERTHAN term
    (35) expression_bool_while -> expression . SMALLERTHAN term
    (36) expression_bool_while -> expression . EQUALTO term
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 100
    SMALLERTHAN     shift and go to state 101
    EQUALTO         shift and go to state 102
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 82

    (37) return -> RETURN LPAREN expression . RPAREN SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    RPAREN          shift and go to state 103
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 83

    (14) define_vars_function -> type COLON id_list . SEMICOLON define_vars_function

    SEMICOLON       shift and go to state 104


state 84

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute . RBRACE endfunc define_function

    RBRACE          shift and go to state 105


state 85

    (19) parameters -> LPAREN type COLON id_list RPAREN .

    VARS            reduce using rule 19 (parameters -> LPAREN type COLON id_list RPAREN .)


state 86

    (26) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 26 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 26 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 26 (assignation -> ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 26 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 26 (assignation -> ID EQUAL expression SEMICOLON .)


state 87

    (38) expression -> expression PLUS . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 106
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 88

    (39) expression -> expression MINUS . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 107
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 89

    (49) factor -> PLUS factor .

    TIMES           reduce using rule 49 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 49 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 49 (factor -> PLUS factor .)
    PLUS            reduce using rule 49 (factor -> PLUS factor .)
    MINUS           reduce using rule 49 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 49 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 49 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 49 (factor -> PLUS factor .)
    RPAREN          reduce using rule 49 (factor -> PLUS factor .)


state 90

    (41) term -> term TIMES . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    factor                         shift and go to state 108
    function                       shift and go to state 74

state 91

    (42) term -> term DIVIDE . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    factor                         shift and go to state 109
    function                       shift and go to state 74

state 92

    (50) factor -> MINUS factor .

    TIMES           reduce using rule 50 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 50 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 50 (factor -> MINUS factor .)
    PLUS            reduce using rule 50 (factor -> MINUS factor .)
    MINUS           reduce using rule 50 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 50 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 50 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 50 (factor -> MINUS factor .)
    RPAREN          reduce using rule 50 (factor -> MINUS factor .)


state 93

    (51) factor -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 94

    (16) function -> ID LPAREN era_function expression . RPAREN SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 95

    (27) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 112


state 96

    (31) expression_bool -> expression GREATERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 113
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 97

    (32) expression_bool -> expression SMALLERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 114
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 98

    (33) expression_bool -> expression EQUALTO . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 115
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 99

    (30) condition -> WHILE LPAREN expression_bool_while RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 116


state 100

    (34) expression_bool_while -> expression GREATERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 117
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 101

    (35) expression_bool_while -> expression SMALLERTHAN . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 118
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 102

    (36) expression_bool_while -> expression EQUALTO . term
    (41) term -> . term TIMES factor
    (42) term -> . term DIVIDE factor
    (43) term -> . factor
    (44) factor -> . FLOAT
    (45) factor -> . INT
    (46) factor -> . STRING
    (47) factor -> . function
    (48) factor -> . ID
    (49) factor -> . PLUS factor
    (50) factor -> . MINUS factor
    (51) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON

    FLOAT           shift and go to state 71
    INT             shift and go to state 72
    STRING          shift and go to state 73
    ID              shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 69
    LPAREN          shift and go to state 75

    term                           shift and go to state 119
    factor                         shift and go to state 70
    function                       shift and go to state 74

state 103

    (37) return -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 120


state 104

    (14) define_vars_function -> type COLON id_list SEMICOLON . define_vars_function
    (14) define_vars_function -> . type COLON id_list SEMICOLON define_vars_function
    (15) define_vars_function -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (52) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 14
    LBRACE          reduce using rule 52 (empty -> .)

    type                           shift and go to state 47
    define_vars_function           shift and go to state 121
    empty                          shift and go to state 49

state 105

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE . endfunc define_function
    (13) endfunc -> . empty
    (52) empty -> .

    FUNCTION        reduce using rule 52 (empty -> .)
    MAIN            reduce using rule 52 (empty -> .)

    endfunc                        shift and go to state 122
    empty                          shift and go to state 123

state 106

    (38) expression -> expression PLUS term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 38 (expression -> expression PLUS term .)
    PLUS            reduce using rule 38 (expression -> expression PLUS term .)
    MINUS           reduce using rule 38 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 38 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 38 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 38 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 107

    (39) expression -> expression MINUS term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 39 (expression -> expression MINUS term .)
    PLUS            reduce using rule 39 (expression -> expression MINUS term .)
    MINUS           reduce using rule 39 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 39 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 39 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 39 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 108

    (41) term -> term TIMES factor .

    TIMES           reduce using rule 41 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 41 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 41 (term -> term TIMES factor .)
    PLUS            reduce using rule 41 (term -> term TIMES factor .)
    MINUS           reduce using rule 41 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 41 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 41 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 41 (term -> term TIMES factor .)
    RPAREN          reduce using rule 41 (term -> term TIMES factor .)


state 109

    (42) term -> term DIVIDE factor .

    TIMES           reduce using rule 42 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 42 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 42 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 42 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 42 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 42 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 42 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 42 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 42 (term -> term DIVIDE factor .)


state 110

    (51) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 51 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (factor -> LPAREN expression RPAREN .)


state 111

    (16) function -> ID LPAREN era_function expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 124


state 112

    (27) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 125


state 113

    (31) expression_bool -> expression GREATERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 31 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 114

    (32) expression_bool -> expression SMALLERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 32 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 115

    (33) expression_bool -> expression EQUALTO term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 33 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 116

    (30) condition -> WHILE LPAREN expression_bool_while RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 126


state 117

    (34) expression_bool_while -> expression GREATERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 34 (expression_bool_while -> expression GREATERTHAN term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 118

    (35) expression_bool_while -> expression SMALLERTHAN term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 35 (expression_bool_while -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 119

    (36) expression_bool_while -> expression EQUALTO term .
    (41) term -> term . TIMES factor
    (42) term -> term . DIVIDE factor

    RPAREN          reduce using rule 36 (expression_bool_while -> expression EQUALTO term .)
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 120

    (37) return -> RETURN LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 37 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 37 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 37 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 121

    (14) define_vars_function -> type COLON id_list SEMICOLON define_vars_function .

    LBRACE          reduce using rule 14 (define_vars_function -> type COLON id_list SEMICOLON define_vars_function .)


state 122

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc . define_function
    (11) define_function -> . FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function
    (12) define_function -> . empty
    (52) empty -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 52 (empty -> .)

    define_function                shift and go to state 127
    empty                          shift and go to state 17

state 123

    (13) endfunc -> empty .

    FUNCTION        reduce using rule 13 (endfunc -> empty .)
    MAIN            reduce using rule 13 (endfunc -> empty .)


state 124

    (16) function -> ID LPAREN era_function expression RPAREN SEMICOLON .

    ID              reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    IF              reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    TIMES           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    GREATERTHAN     reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    SMALLERTHAN     reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    EQUALTO         reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN SEMICOLON .)


state 125

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    statute                        shift and go to state 128
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 126

    (30) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    statute                        shift and go to state 129
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 127

    (11) define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function .

    MAIN            reduce using rule 11 (define_function -> FUNCTION type ID parameters VARS define_vars_function LBRACE statute RBRACE endfunc define_function .)


state 128

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 130


state 129

    (30) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 131


state 130

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE
    (28) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 132
    ID              reduce using rule 28 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 28 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 28 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RETURN          reduce using rule 28 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 28 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)


state 131

    (30) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 30 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 30 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 30 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 30 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 30 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)


state 132

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 133


state 133

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (29) def_else -> . empty
    (52) empty -> .

    ID              reduce using rule 52 (empty -> .)
    IF              reduce using rule 52 (empty -> .)
    WHILE           reduce using rule 52 (empty -> .)
    RETURN          reduce using rule 52 (empty -> .)
    RBRACE          reduce using rule 52 (empty -> .)

    def_else                       shift and go to state 134
    empty                          shift and go to state 135

state 134

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . empty
    (26) assignation -> . ID EQUAL expression SEMICOLON
    (27) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (28) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (30) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (37) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (16) function -> . ID LPAREN era_function expression RPAREN SEMICOLON
    (52) empty -> .

    ID              shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    RETURN          shift and go to state 46
    RBRACE          reduce using rule 52 (empty -> .)

    statute                        shift and go to state 136
    assignation                    shift and go to state 37
    decision                       shift and go to state 38
    condition                      shift and go to state 39
    return                         shift and go to state 40
    function                       shift and go to state 41
    empty                          shift and go to state 42

state 135

    (29) def_else -> empty .

    ID              reduce using rule 29 (def_else -> empty .)
    IF              reduce using rule 29 (def_else -> empty .)
    WHILE           reduce using rule 29 (def_else -> empty .)
    RETURN          reduce using rule 29 (def_else -> empty .)
    RBRACE          reduce using rule 29 (def_else -> empty .)


state 136

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 137


state 137

    (27) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 27 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 27 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WHILE           reduce using rule 27 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RETURN          reduce using rule 27 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 27 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

