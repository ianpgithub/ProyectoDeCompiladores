Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    OR
    RBRACKET
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function
Rule 2     define_vars -> type COLON vars SEMICOLON define_vars
Rule 3     define_vars -> empty
Rule 4     type -> INT
Rule 5     type -> FLOAT
Rule 6     vars -> ID COMMA vars
Rule 7     vars -> ID
Rule 8     define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE
Rule 9     parameters -> LPAREN type COLON vars RPAREN
Rule 10    statute -> assignation statute
Rule 11    statute -> condition statute
Rule 12    statute -> empty
Rule 13    assignation -> ID EQUAL expression SEMICOLON
Rule 14    assignation -> ID GREATERTHAN expression SEMICOLON
Rule 15    assignation -> ID SMALLERTHAN expression SEMICOLON
Rule 16    condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
Rule 17    expression -> expression PLUS term
Rule 18    expression -> expression MINUS term
Rule 19    expression -> expression GREATERTHAN term
Rule 20    expression -> expression SMALLERTHAN term
Rule 21    expression -> term
Rule 22    term -> term TIMES factor
Rule 23    term -> term DIVIDE factor
Rule 24    term -> factor
Rule 25    factor -> NUMBER
Rule 26    factor -> ID
Rule 27    factor -> PLUS factor
Rule 28    factor -> MINUS factor
Rule 29    factor -> LPAREN expression RPAREN
Rule 30    empty -> <empty>

Terminals, with rules where they appear

COLON                : 2 9
COMMA                : 6
DIVIDE               : 23
ELSE                 : 16
ENDL                 : 1 8
EQUAL                : 13
FLOAT                : 5
FUNCTION             : 8
GREATERTHAN          : 14 19
ID                   : 1 6 7 8 13 14 15 26
IF                   : 16
INT                  : 4
LBRACE               : 8 16 16
LBRACKET             : 
LPAREN               : 9 16 29
MINUS                : 18 28
NUMBER               : 25
OR                   : 
PLUS                 : 17 27
PROGRAM              : 1
RBRACE               : 8 16 16
RBRACKET             : 
RPAREN               : 9 16 29
SEMICOLON            : 1 2 13 14 15
SMALLERTHAN          : 15 20
THEN                 : 16
TIMES                : 22
VARS                 : 1 8
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 10
condition            : 11
define_function      : 1
define_vars          : 1 2 8
empty                : 3 12
expression           : 13 14 15 16 17 18 19 20 29
factor               : 22 23 24 27 28
parameters           : 8
program              : 0
statute              : 8 10 11 16 16
term                 : 17 18 19 20 21 22 23
type                 : 2 8 9
vars                 : 2 6 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON ENDL VARS define_vars define_function

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON ENDL VARS define_vars define_function

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON ENDL VARS define_vars define_function

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . ENDL VARS define_vars define_function

    ENDL            shift and go to state 5


state 5

    (1) program -> PROGRAM ID SEMICOLON ENDL . VARS define_vars define_function

    VARS            shift and go to state 6


state 6

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS . define_vars define_function
    (2) define_vars -> . type COLON vars SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (30) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    FUNCTION        reduce using rule 30 (empty -> .)

    define_vars                    shift and go to state 7
    type                           shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS define_vars . define_function
    (8) define_function -> . FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE

    FUNCTION        shift and go to state 13

    define_function                shift and go to state 12

state 8

    (2) define_vars -> type . COLON vars SEMICOLON define_vars

    COLON           shift and go to state 14


state 9

    (3) define_vars -> empty .

    FUNCTION        reduce using rule 3 (define_vars -> empty .)
    LBRACE          reduce using rule 3 (define_vars -> empty .)


state 10

    (4) type -> INT .

    COLON           reduce using rule 4 (type -> INT .)
    ID              reduce using rule 4 (type -> INT .)


state 11

    (5) type -> FLOAT .

    COLON           reduce using rule 5 (type -> FLOAT .)
    ID              reduce using rule 5 (type -> FLOAT .)


state 12

    (1) program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON ENDL VARS define_vars define_function .)


state 13

    (8) define_function -> FUNCTION . type ID parameters ENDL VARS define_vars LBRACE statute RBRACE
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    type                           shift and go to state 15

state 14

    (2) define_vars -> type COLON . vars SEMICOLON define_vars
    (6) vars -> . ID COMMA vars
    (7) vars -> . ID

    ID              shift and go to state 17

    vars                           shift and go to state 16

state 15

    (8) define_function -> FUNCTION type . ID parameters ENDL VARS define_vars LBRACE statute RBRACE

    ID              shift and go to state 18


state 16

    (2) define_vars -> type COLON vars . SEMICOLON define_vars

    SEMICOLON       shift and go to state 19


state 17

    (6) vars -> ID . COMMA vars
    (7) vars -> ID .

    COMMA           shift and go to state 20
    SEMICOLON       reduce using rule 7 (vars -> ID .)
    RPAREN          reduce using rule 7 (vars -> ID .)


state 18

    (8) define_function -> FUNCTION type ID . parameters ENDL VARS define_vars LBRACE statute RBRACE
    (9) parameters -> . LPAREN type COLON vars RPAREN

    LPAREN          shift and go to state 22

    parameters                     shift and go to state 21

state 19

    (2) define_vars -> type COLON vars SEMICOLON . define_vars
    (2) define_vars -> . type COLON vars SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (30) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    FUNCTION        reduce using rule 30 (empty -> .)
    LBRACE          reduce using rule 30 (empty -> .)

    type                           shift and go to state 8
    define_vars                    shift and go to state 23
    empty                          shift and go to state 9

state 20

    (6) vars -> ID COMMA . vars
    (6) vars -> . ID COMMA vars
    (7) vars -> . ID

    ID              shift and go to state 17

    vars                           shift and go to state 24

state 21

    (8) define_function -> FUNCTION type ID parameters . ENDL VARS define_vars LBRACE statute RBRACE

    ENDL            shift and go to state 25


state 22

    (9) parameters -> LPAREN . type COLON vars RPAREN
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    type                           shift and go to state 26

state 23

    (2) define_vars -> type COLON vars SEMICOLON define_vars .

    FUNCTION        reduce using rule 2 (define_vars -> type COLON vars SEMICOLON define_vars .)
    LBRACE          reduce using rule 2 (define_vars -> type COLON vars SEMICOLON define_vars .)


state 24

    (6) vars -> ID COMMA vars .

    SEMICOLON       reduce using rule 6 (vars -> ID COMMA vars .)
    RPAREN          reduce using rule 6 (vars -> ID COMMA vars .)


state 25

    (8) define_function -> FUNCTION type ID parameters ENDL . VARS define_vars LBRACE statute RBRACE

    VARS            shift and go to state 27


state 26

    (9) parameters -> LPAREN type . COLON vars RPAREN

    COLON           shift and go to state 28


state 27

    (8) define_function -> FUNCTION type ID parameters ENDL VARS . define_vars LBRACE statute RBRACE
    (2) define_vars -> . type COLON vars SEMICOLON define_vars
    (3) define_vars -> . empty
    (4) type -> . INT
    (5) type -> . FLOAT
    (30) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    LBRACE          reduce using rule 30 (empty -> .)

    type                           shift and go to state 8
    define_vars                    shift and go to state 29
    empty                          shift and go to state 9

state 28

    (9) parameters -> LPAREN type COLON . vars RPAREN
    (6) vars -> . ID COMMA vars
    (7) vars -> . ID

    ID              shift and go to state 17

    vars                           shift and go to state 30

state 29

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars . LBRACE statute RBRACE

    LBRACE          shift and go to state 31


state 30

    (9) parameters -> LPAREN type COLON vars . RPAREN

    RPAREN          shift and go to state 32


state 31

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE . statute RBRACE
    (10) statute -> . assignation statute
    (11) statute -> . condition statute
    (12) statute -> . empty
    (13) assignation -> . ID EQUAL expression SEMICOLON
    (14) assignation -> . ID GREATERTHAN expression SEMICOLON
    (15) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (16) condition -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (30) empty -> .

    ID              shift and go to state 33
    IF              shift and go to state 38
    RBRACE          reduce using rule 30 (empty -> .)

    statute                        shift and go to state 34
    assignation                    shift and go to state 35
    condition                      shift and go to state 36
    empty                          shift and go to state 37

state 32

    (9) parameters -> LPAREN type COLON vars RPAREN .

    ENDL            reduce using rule 9 (parameters -> LPAREN type COLON vars RPAREN .)


state 33

    (13) assignation -> ID . EQUAL expression SEMICOLON
    (14) assignation -> ID . GREATERTHAN expression SEMICOLON
    (15) assignation -> ID . SMALLERTHAN expression SEMICOLON

    EQUAL           shift and go to state 39
    GREATERTHAN     shift and go to state 40
    SMALLERTHAN     shift and go to state 41


state 34

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute . RBRACE

    RBRACE          shift and go to state 42


state 35

    (10) statute -> assignation . statute
    (10) statute -> . assignation statute
    (11) statute -> . condition statute
    (12) statute -> . empty
    (13) assignation -> . ID EQUAL expression SEMICOLON
    (14) assignation -> . ID GREATERTHAN expression SEMICOLON
    (15) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (16) condition -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (30) empty -> .

    ID              shift and go to state 33
    IF              shift and go to state 38
    RBRACE          reduce using rule 30 (empty -> .)

    assignation                    shift and go to state 35
    statute                        shift and go to state 43
    condition                      shift and go to state 36
    empty                          shift and go to state 37

state 36

    (11) statute -> condition . statute
    (10) statute -> . assignation statute
    (11) statute -> . condition statute
    (12) statute -> . empty
    (13) assignation -> . ID EQUAL expression SEMICOLON
    (14) assignation -> . ID GREATERTHAN expression SEMICOLON
    (15) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (16) condition -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (30) empty -> .

    ID              shift and go to state 33
    IF              shift and go to state 38
    RBRACE          reduce using rule 30 (empty -> .)

    condition                      shift and go to state 36
    statute                        shift and go to state 44
    assignation                    shift and go to state 35
    empty                          shift and go to state 37

state 37

    (12) statute -> empty .

    RBRACE          reduce using rule 12 (statute -> empty .)


state 38

    (16) condition -> IF . LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE

    LPAREN          shift and go to state 45


state 39

    (13) assignation -> ID EQUAL . expression SEMICOLON
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GREATERTHAN term
    (20) expression -> . expression SMALLERTHAN term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    expression                     shift and go to state 47
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 40

    (14) assignation -> ID GREATERTHAN . expression SEMICOLON
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GREATERTHAN term
    (20) expression -> . expression SMALLERTHAN term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    expression                     shift and go to state 54
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 41

    (15) assignation -> ID SMALLERTHAN . expression SEMICOLON
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GREATERTHAN term
    (20) expression -> . expression SMALLERTHAN term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    expression                     shift and go to state 55
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 42

    (8) define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE .

    $end            reduce using rule 8 (define_function -> FUNCTION type ID parameters ENDL VARS define_vars LBRACE statute RBRACE .)


state 43

    (10) statute -> assignation statute .

    RBRACE          reduce using rule 10 (statute -> assignation statute .)


state 44

    (11) statute -> condition statute .

    RBRACE          reduce using rule 11 (statute -> condition statute .)


state 45

    (16) condition -> IF LPAREN . expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GREATERTHAN term
    (20) expression -> . expression SMALLERTHAN term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    expression                     shift and go to state 56
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 46

    (26) factor -> ID .

    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    SEMICOLON       reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)
    GREATERTHAN     reduce using rule 26 (factor -> ID .)
    SMALLERTHAN     reduce using rule 26 (factor -> ID .)
    RPAREN          reduce using rule 26 (factor -> ID .)


state 47

    (13) assignation -> ID EQUAL expression . SEMICOLON
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GREATERTHAN term
    (20) expression -> expression . SMALLERTHAN term

    SEMICOLON       shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    GREATERTHAN     shift and go to state 60
    SMALLERTHAN     shift and go to state 61


state 48

    (27) factor -> PLUS . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    factor                         shift and go to state 62

state 49

    (21) expression -> term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 21 (expression -> term .)
    PLUS            reduce using rule 21 (expression -> term .)
    MINUS           reduce using rule 21 (expression -> term .)
    GREATERTHAN     reduce using rule 21 (expression -> term .)
    SMALLERTHAN     reduce using rule 21 (expression -> term .)
    RPAREN          reduce using rule 21 (expression -> term .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64


state 50

    (28) factor -> MINUS . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    factor                         shift and go to state 65

state 51

    (24) term -> factor .

    TIMES           reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    SEMICOLON       reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    GREATERTHAN     reduce using rule 24 (term -> factor .)
    SMALLERTHAN     reduce using rule 24 (term -> factor .)
    RPAREN          reduce using rule 24 (term -> factor .)


state 52

    (25) factor -> NUMBER .

    TIMES           reduce using rule 25 (factor -> NUMBER .)
    DIVIDE          reduce using rule 25 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 25 (factor -> NUMBER .)
    PLUS            reduce using rule 25 (factor -> NUMBER .)
    MINUS           reduce using rule 25 (factor -> NUMBER .)
    GREATERTHAN     reduce using rule 25 (factor -> NUMBER .)
    SMALLERTHAN     reduce using rule 25 (factor -> NUMBER .)
    RPAREN          reduce using rule 25 (factor -> NUMBER .)


state 53

    (29) factor -> LPAREN . expression RPAREN
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression GREATERTHAN term
    (20) expression -> . expression SMALLERTHAN term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    expression                     shift and go to state 66
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 54

    (14) assignation -> ID GREATERTHAN expression . SEMICOLON
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GREATERTHAN term
    (20) expression -> expression . SMALLERTHAN term

    SEMICOLON       shift and go to state 67
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    GREATERTHAN     shift and go to state 60
    SMALLERTHAN     shift and go to state 61


state 55

    (15) assignation -> ID SMALLERTHAN expression . SEMICOLON
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GREATERTHAN term
    (20) expression -> expression . SMALLERTHAN term

    SEMICOLON       shift and go to state 68
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    GREATERTHAN     shift and go to state 60
    SMALLERTHAN     shift and go to state 61


state 56

    (16) condition -> IF LPAREN expression . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GREATERTHAN term
    (20) expression -> expression . SMALLERTHAN term

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    GREATERTHAN     shift and go to state 60
    SMALLERTHAN     shift and go to state 61


state 57

    (13) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 13 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 13 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 13 (assignation -> ID EQUAL expression SEMICOLON .)


state 58

    (17) expression -> expression PLUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    term                           shift and go to state 70
    factor                         shift and go to state 51

state 59

    (18) expression -> expression MINUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    term                           shift and go to state 71
    factor                         shift and go to state 51

state 60

    (19) expression -> expression GREATERTHAN . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    term                           shift and go to state 72
    factor                         shift and go to state 51

state 61

    (20) expression -> expression SMALLERTHAN . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    term                           shift and go to state 73
    factor                         shift and go to state 51

state 62

    (27) factor -> PLUS factor .

    TIMES           reduce using rule 27 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 27 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 27 (factor -> PLUS factor .)
    PLUS            reduce using rule 27 (factor -> PLUS factor .)
    MINUS           reduce using rule 27 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 27 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 27 (factor -> PLUS factor .)
    RPAREN          reduce using rule 27 (factor -> PLUS factor .)


state 63

    (22) term -> term TIMES . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    factor                         shift and go to state 74

state 64

    (23) term -> term DIVIDE . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . PLUS factor
    (28) factor -> . MINUS factor
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 52
    ID              shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 50
    LPAREN          shift and go to state 53

    factor                         shift and go to state 75

state 65

    (28) factor -> MINUS factor .

    TIMES           reduce using rule 28 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 28 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 28 (factor -> MINUS factor .)
    PLUS            reduce using rule 28 (factor -> MINUS factor .)
    MINUS           reduce using rule 28 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 28 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 28 (factor -> MINUS factor .)
    RPAREN          reduce using rule 28 (factor -> MINUS factor .)


state 66

    (29) factor -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . GREATERTHAN term
    (20) expression -> expression . SMALLERTHAN term

    RPAREN          shift and go to state 76
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    GREATERTHAN     shift and go to state 60
    SMALLERTHAN     shift and go to state 61


state 67

    (14) assignation -> ID GREATERTHAN expression SEMICOLON .

    ID              reduce using rule 14 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    IF              reduce using rule 14 (assignation -> ID GREATERTHAN expression SEMICOLON .)
    RBRACE          reduce using rule 14 (assignation -> ID GREATERTHAN expression SEMICOLON .)


state 68

    (15) assignation -> ID SMALLERTHAN expression SEMICOLON .

    ID              reduce using rule 15 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    IF              reduce using rule 15 (assignation -> ID SMALLERTHAN expression SEMICOLON .)
    RBRACE          reduce using rule 15 (assignation -> ID SMALLERTHAN expression SEMICOLON .)


state 69

    (16) condition -> IF LPAREN expression RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE

    THEN            shift and go to state 77


state 70

    (17) expression -> expression PLUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 17 (expression -> expression PLUS term .)
    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    MINUS           reduce using rule 17 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 17 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 17 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS term .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64


state 71

    (18) expression -> expression MINUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> expression MINUS term .)
    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 18 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 18 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS term .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64


state 72

    (19) expression -> expression GREATERTHAN term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> expression GREATERTHAN term .)
    PLUS            reduce using rule 19 (expression -> expression GREATERTHAN term .)
    MINUS           reduce using rule 19 (expression -> expression GREATERTHAN term .)
    GREATERTHAN     reduce using rule 19 (expression -> expression GREATERTHAN term .)
    SMALLERTHAN     reduce using rule 19 (expression -> expression GREATERTHAN term .)
    RPAREN          reduce using rule 19 (expression -> expression GREATERTHAN term .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64


state 73

    (20) expression -> expression SMALLERTHAN term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    PLUS            reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    MINUS           reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    GREATERTHAN     reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    SMALLERTHAN     reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    RPAREN          reduce using rule 20 (expression -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64


state 74

    (22) term -> term TIMES factor .

    TIMES           reduce using rule 22 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 22 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 22 (term -> term TIMES factor .)
    PLUS            reduce using rule 22 (term -> term TIMES factor .)
    MINUS           reduce using rule 22 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 22 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 22 (term -> term TIMES factor .)
    RPAREN          reduce using rule 22 (term -> term TIMES factor .)


state 75

    (23) term -> term DIVIDE factor .

    TIMES           reduce using rule 23 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 23 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 23 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 23 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 23 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 23 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 23 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 23 (term -> term DIVIDE factor .)


state 76

    (29) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (factor -> LPAREN expression RPAREN .)


state 77

    (16) condition -> IF LPAREN expression RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE statute RBRACE

    LBRACE          shift and go to state 78


state 78

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE statute RBRACE
    (10) statute -> . assignation statute
    (11) statute -> . condition statute
    (12) statute -> . empty
    (13) assignation -> . ID EQUAL expression SEMICOLON
    (14) assignation -> . ID GREATERTHAN expression SEMICOLON
    (15) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (16) condition -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (30) empty -> .

    ID              shift and go to state 33
    IF              shift and go to state 38
    RBRACE          reduce using rule 30 (empty -> .)

    statute                        shift and go to state 79
    assignation                    shift and go to state 35
    condition                      shift and go to state 36
    empty                          shift and go to state 37

state 79

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE statute RBRACE

    RBRACE          shift and go to state 80


state 80

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE statute RBRACE

    ELSE            shift and go to state 81


state 81

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE statute RBRACE

    LBRACE          shift and go to state 82


state 82

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . statute RBRACE
    (10) statute -> . assignation statute
    (11) statute -> . condition statute
    (12) statute -> . empty
    (13) assignation -> . ID EQUAL expression SEMICOLON
    (14) assignation -> . ID GREATERTHAN expression SEMICOLON
    (15) assignation -> . ID SMALLERTHAN expression SEMICOLON
    (16) condition -> . IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE
    (30) empty -> .

    ID              shift and go to state 33
    IF              shift and go to state 38
    RBRACE          reduce using rule 30 (empty -> .)

    statute                        shift and go to state 83
    assignation                    shift and go to state 35
    condition                      shift and go to state 36
    empty                          shift and go to state 37

state 83

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute . RBRACE

    RBRACE          shift and go to state 84


state 84

    (16) condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .

    ID              reduce using rule 16 (condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    IF              reduce using rule 16 (condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)
    RBRACE          reduce using rule 16 (condition -> IF LPAREN expression RPAREN THEN LBRACE statute RBRACE ELSE LBRACE statute RBRACE .)

