Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    ENDL
    FALSE
    LBRACKET
    OR
    RBRACKET
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main
Rule 2     goto_main -> empty
Rule 3     id_list -> ID COMMA id_list
Rule 4     id_list -> ID
Rule 5     define_vars_global -> type COLON id_list SEMICOLON define_vars_global
Rule 6     define_vars_global -> empty
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
Rule 11    define_function -> empty
Rule 12    start_func -> empty
Rule 13    end_func -> empty
Rule 14    define_vars_function -> type COLON id_list SEMICOLON define_vars_function
Rule 15    define_vars_function -> empty
Rule 16    function -> ID LPAREN era_function expression RPAREN
Rule 17    era_function -> empty
Rule 18    main -> MAIN LPAREN RPAREN LBRACE statute RBRACE
Rule 19    parameters -> LPAREN type COLON id_list RPAREN
Rule 20    statute -> assignation statute
Rule 21    statute -> decision statute
Rule 22    statute -> condition statute
Rule 23    statute -> return statute
Rule 24    statute -> function statute
Rule 25    statute -> write statute
Rule 26    statute -> read statute
Rule 27    statute -> empty
Rule 28    assignation -> ID EQUAL expression SEMICOLON
Rule 29    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 30    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 31    def_else -> empty
Rule 32    condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
Rule 33    write -> WRITE LPAREN expression RPAREN
Rule 34    read -> READ LPAREN expression RPAREN
Rule 35    expression_bool -> expression GREATERTHAN term
Rule 36    expression_bool -> expression SMALLERTHAN term
Rule 37    expression_bool -> expression EQUALTO term
Rule 38    expression_bool_while -> expression GREATERTHAN term
Rule 39    expression_bool_while -> expression SMALLERTHAN term
Rule 40    expression_bool_while -> expression EQUALTO term
Rule 41    return -> RETURN LPAREN expression RPAREN
Rule 42    expression -> expression PLUS term
Rule 43    expression -> expression MINUS term
Rule 44    expression -> term
Rule 45    term -> term TIMES factor
Rule 46    term -> term DIVIDE factor
Rule 47    term -> factor
Rule 48    factor -> FLOAT
Rule 49    factor -> INT
Rule 50    factor -> STRING
Rule 51    factor -> function
Rule 52    factor -> ID
Rule 53    factor -> PLUS factor
Rule 54    factor -> MINUS factor
Rule 55    factor -> LPAREN expression RPAREN
Rule 56    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 
COLON                : 5 14 19
COMMA                : 3
DIVIDE               : 46
DO                   : 32
ELSE                 : 29
ENDL                 : 
EQUAL                : 28
EQUALTO              : 37 40
FALSE                : 
FLOAT                : 8 48
FUNCTION             : 10
GREATERTHAN          : 35 38
ID                   : 1 3 4 10 16 28 52
IF                   : 29 30
INT                  : 7 49
LBRACE               : 10 18 29 29 30 32
LBRACKET             : 
LPAREN               : 16 18 19 29 30 32 33 34 41 55
MAIN                 : 18
MINUS                : 43 54
OR                   : 
PLUS                 : 42 53
PROGRAM              : 1
RBRACE               : 10 18 29 29 30 32
RBRACKET             : 
READ                 : 34
RETURN               : 41
RPAREN               : 16 18 19 29 30 32 33 34 41 55
SEMICOLON            : 1 5 14 28
SMALLERTHAN          : 36 39
STRING               : 9 50
THEN                 : 29 30
TIMES                : 45
TRUE                 : 
VARS                 : 1 10
WHILE                : 32
WRITE                : 33
error                : 

Nonterminals, with rules where they appear

assignation          : 20
condition            : 22
decision             : 21
def_else             : 29
define_function      : 1 10
define_vars_function : 10 14
define_vars_global   : 1 5
empty                : 2 6 11 12 13 15 17 27 31
end_func             : 10
era_function         : 16
expression           : 16 28 33 34 35 36 37 38 39 40 41 42 43 55
expression_bool      : 29 30
expression_bool_while : 32
factor               : 45 46 47 53 54
function             : 24 51
goto_main            : 1
id_list              : 3 5 14 19
main                 : 1
parameters           : 10
program              : 0
read                 : 26
return               : 23
start_func           : 10
statute              : 10 18 20 21 22 23 24 25 26 29 29 30 32
term                 : 35 36 37 38 39 40 42 43 44 45 46
type                 : 5 10 14 19
write                : 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main
    (2) goto_main -> . empty
    (56) empty -> .

    PROGRAM         reduce using rule 56 (empty -> .)

    program                        shift and go to state 1
    goto_main                      shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> goto_main . PROGRAM ID SEMICOLON VARS define_vars_global define_function main

    PROGRAM         shift and go to state 4


state 3

    (2) goto_main -> empty .

    PROGRAM         reduce using rule 2 (goto_main -> empty .)


state 4

    (1) program -> goto_main PROGRAM . ID SEMICOLON VARS define_vars_global define_function main

    ID              shift and go to state 5


state 5

    (1) program -> goto_main PROGRAM ID . SEMICOLON VARS define_vars_global define_function main

    SEMICOLON       shift and go to state 6


state 6

    (1) program -> goto_main PROGRAM ID SEMICOLON . VARS define_vars_global define_function main

    VARS            shift and go to state 7


state 7

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS . define_vars_global define_function main
    (5) define_vars_global -> . type COLON id_list SEMICOLON define_vars_global
    (6) define_vars_global -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    FUNCTION        reduce using rule 56 (empty -> .)
    MAIN            reduce using rule 56 (empty -> .)

    define_vars_global             shift and go to state 8
    type                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global . define_function main
    (10) define_function -> . FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
    (11) define_function -> . empty
    (56) empty -> .

    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 56 (empty -> .)

    define_function                shift and go to state 14
    empty                          shift and go to state 16

state 9

    (5) define_vars_global -> type . COLON id_list SEMICOLON define_vars_global

    COLON           shift and go to state 17


state 10

    (6) define_vars_global -> empty .

    FUNCTION        reduce using rule 6 (define_vars_global -> empty .)
    MAIN            reduce using rule 6 (define_vars_global -> empty .)


state 11

    (7) type -> INT .

    COLON           reduce using rule 7 (type -> INT .)
    ID              reduce using rule 7 (type -> INT .)


state 12

    (8) type -> FLOAT .

    COLON           reduce using rule 8 (type -> FLOAT .)
    ID              reduce using rule 8 (type -> FLOAT .)


state 13

    (9) type -> STRING .

    COLON           reduce using rule 9 (type -> STRING .)
    ID              reduce using rule 9 (type -> STRING .)


state 14

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function . main
    (18) main -> . MAIN LPAREN RPAREN LBRACE statute RBRACE

    MAIN            shift and go to state 19

    main                           shift and go to state 18

state 15

    (10) define_function -> FUNCTION . start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
    (12) start_func -> . empty
    (56) empty -> .

    INT             reduce using rule 56 (empty -> .)
    FLOAT           reduce using rule 56 (empty -> .)
    STRING          reduce using rule 56 (empty -> .)

    start_func                     shift and go to state 20
    empty                          shift and go to state 21

state 16

    (11) define_function -> empty .

    MAIN            reduce using rule 11 (define_function -> empty .)


state 17

    (5) define_vars_global -> type COLON . id_list SEMICOLON define_vars_global
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 22

state 18

    (1) program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main .

    $end            reduce using rule 1 (program -> goto_main PROGRAM ID SEMICOLON VARS define_vars_global define_function main .)


state 19

    (18) main -> MAIN . LPAREN RPAREN LBRACE statute RBRACE

    LPAREN          shift and go to state 24


state 20

    (10) define_function -> FUNCTION start_func . type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13

    type                           shift and go to state 25

state 21

    (12) start_func -> empty .

    INT             reduce using rule 12 (start_func -> empty .)
    FLOAT           reduce using rule 12 (start_func -> empty .)
    STRING          reduce using rule 12 (start_func -> empty .)


state 22

    (5) define_vars_global -> type COLON id_list . SEMICOLON define_vars_global

    SEMICOLON       shift and go to state 26


state 23

    (3) id_list -> ID . COMMA id_list
    (4) id_list -> ID .

    COMMA           shift and go to state 27
    SEMICOLON       reduce using rule 4 (id_list -> ID .)
    RPAREN          reduce using rule 4 (id_list -> ID .)


state 24

    (18) main -> MAIN LPAREN . RPAREN LBRACE statute RBRACE

    RPAREN          shift and go to state 28


state 25

    (10) define_function -> FUNCTION start_func type . ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function

    ID              shift and go to state 29


state 26

    (5) define_vars_global -> type COLON id_list SEMICOLON . define_vars_global
    (5) define_vars_global -> . type COLON id_list SEMICOLON define_vars_global
    (6) define_vars_global -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    FUNCTION        reduce using rule 56 (empty -> .)
    MAIN            reduce using rule 56 (empty -> .)

    type                           shift and go to state 9
    define_vars_global             shift and go to state 30
    empty                          shift and go to state 10

state 27

    (3) id_list -> ID COMMA . id_list
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 31

state 28

    (18) main -> MAIN LPAREN RPAREN . LBRACE statute RBRACE

    LBRACE          shift and go to state 32


state 29

    (10) define_function -> FUNCTION start_func type ID . parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
    (19) parameters -> . LPAREN type COLON id_list RPAREN

    LPAREN          shift and go to state 34

    parameters                     shift and go to state 33

state 30

    (5) define_vars_global -> type COLON id_list SEMICOLON define_vars_global .

    FUNCTION        reduce using rule 5 (define_vars_global -> type COLON id_list SEMICOLON define_vars_global .)
    MAIN            reduce using rule 5 (define_vars_global -> type COLON id_list SEMICOLON define_vars_global .)


state 31

    (3) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 3 (id_list -> ID COMMA id_list .)
    RPAREN          reduce using rule 3 (id_list -> ID COMMA id_list .)


state 32

    (18) main -> MAIN LPAREN RPAREN LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    statute                        shift and go to state 35
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 33

    (10) define_function -> FUNCTION start_func type ID parameters . VARS define_vars_function LBRACE statute RBRACE end_func define_function

    VARS            shift and go to state 50


state 34

    (19) parameters -> LPAREN . type COLON id_list RPAREN
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13

    type                           shift and go to state 51

state 35

    (18) main -> MAIN LPAREN RPAREN LBRACE statute . RBRACE

    RBRACE          shift and go to state 52


state 36

    (20) statute -> assignation . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    assignation                    shift and go to state 36
    statute                        shift and go to state 53
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 37

    (21) statute -> decision . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    decision                       shift and go to state 37
    statute                        shift and go to state 54
    assignation                    shift and go to state 36
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 38

    (22) statute -> condition . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    condition                      shift and go to state 38
    statute                        shift and go to state 55
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 39

    (23) statute -> return . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    return                         shift and go to state 39
    statute                        shift and go to state 56
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 40

    (24) statute -> function . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    function                       shift and go to state 40
    statute                        shift and go to state 57
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 41

    (25) statute -> write . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    write                          shift and go to state 41
    statute                        shift and go to state 58
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 42

    (26) statute -> read . statute
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    read                           shift and go to state 42
    statute                        shift and go to state 59
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    empty                          shift and go to state 43

state 43

    (27) statute -> empty .

    RBRACE          reduce using rule 27 (statute -> empty .)


state 44

    (28) assignation -> ID . EQUAL expression SEMICOLON
    (16) function -> ID . LPAREN era_function expression RPAREN

    EQUAL           shift and go to state 60
    LPAREN          shift and go to state 61


state 45

    (29) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 62


state 46

    (32) condition -> WHILE . LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 63


state 47

    (41) return -> RETURN . LPAREN expression RPAREN

    LPAREN          shift and go to state 64


state 48

    (33) write -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 65


state 49

    (34) read -> READ . LPAREN expression RPAREN

    LPAREN          shift and go to state 66


state 50

    (10) define_function -> FUNCTION start_func type ID parameters VARS . define_vars_function LBRACE statute RBRACE end_func define_function
    (14) define_vars_function -> . type COLON id_list SEMICOLON define_vars_function
    (15) define_vars_function -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    LBRACE          reduce using rule 56 (empty -> .)

    type                           shift and go to state 67
    define_vars_function           shift and go to state 68
    empty                          shift and go to state 69

state 51

    (19) parameters -> LPAREN type . COLON id_list RPAREN

    COLON           shift and go to state 70


state 52

    (18) main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .

    $end            reduce using rule 18 (main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .)


state 53

    (20) statute -> assignation statute .

    RBRACE          reduce using rule 20 (statute -> assignation statute .)


state 54

    (21) statute -> decision statute .

    RBRACE          reduce using rule 21 (statute -> decision statute .)


state 55

    (22) statute -> condition statute .

    RBRACE          reduce using rule 22 (statute -> condition statute .)


state 56

    (23) statute -> return statute .

    RBRACE          reduce using rule 23 (statute -> return statute .)


state 57

    (24) statute -> function statute .

    RBRACE          reduce using rule 24 (statute -> function statute .)


state 58

    (25) statute -> write statute .

    RBRACE          reduce using rule 25 (statute -> write statute .)


state 59

    (26) statute -> read statute .

    RBRACE          reduce using rule 26 (statute -> read statute .)


state 60

    (28) assignation -> ID EQUAL . expression SEMICOLON
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 72
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 61

    (16) function -> ID LPAREN . era_function expression RPAREN
    (17) era_function -> . empty
    (56) empty -> .

    FLOAT           reduce using rule 56 (empty -> .)
    INT             reduce using rule 56 (empty -> .)
    STRING          reduce using rule 56 (empty -> .)
    ID              reduce using rule 56 (empty -> .)
    PLUS            reduce using rule 56 (empty -> .)
    MINUS           reduce using rule 56 (empty -> .)
    LPAREN          reduce using rule 56 (empty -> .)

    era_function                   shift and go to state 82
    empty                          shift and go to state 83

state 62

    (29) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (35) expression_bool -> . expression GREATERTHAN term
    (36) expression_bool -> . expression SMALLERTHAN term
    (37) expression_bool -> . expression EQUALTO term
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression_bool                shift and go to state 84
    expression                     shift and go to state 85
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 63

    (32) condition -> WHILE LPAREN . expression_bool_while RPAREN DO LBRACE statute RBRACE
    (38) expression_bool_while -> . expression GREATERTHAN term
    (39) expression_bool_while -> . expression SMALLERTHAN term
    (40) expression_bool_while -> . expression EQUALTO term
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression_bool_while          shift and go to state 86
    expression                     shift and go to state 87
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 64

    (41) return -> RETURN LPAREN . expression RPAREN
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 88
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 65

    (33) write -> WRITE LPAREN . expression RPAREN
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 89
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 66

    (34) read -> READ LPAREN . expression RPAREN
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 90
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 67

    (14) define_vars_function -> type . COLON id_list SEMICOLON define_vars_function

    COLON           shift and go to state 91


state 68

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function . LBRACE statute RBRACE end_func define_function

    LBRACE          shift and go to state 92


state 69

    (15) define_vars_function -> empty .

    LBRACE          reduce using rule 15 (define_vars_function -> empty .)


state 70

    (19) parameters -> LPAREN type COLON . id_list RPAREN
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 93

state 71

    (52) factor -> ID .
    (16) function -> ID . LPAREN era_function expression RPAREN

    TIMES           reduce using rule 52 (factor -> ID .)
    DIVIDE          reduce using rule 52 (factor -> ID .)
    SEMICOLON       reduce using rule 52 (factor -> ID .)
    PLUS            reduce using rule 52 (factor -> ID .)
    MINUS           reduce using rule 52 (factor -> ID .)
    GREATERTHAN     reduce using rule 52 (factor -> ID .)
    SMALLERTHAN     reduce using rule 52 (factor -> ID .)
    EQUALTO         reduce using rule 52 (factor -> ID .)
    RPAREN          reduce using rule 52 (factor -> ID .)
    LPAREN          shift and go to state 61


state 72

    (28) assignation -> ID EQUAL expression . SEMICOLON
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 94
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 73

    (53) factor -> PLUS . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    factor                         shift and go to state 97
    function                       shift and go to state 80

state 74

    (44) expression -> term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 44 (expression -> term .)
    PLUS            reduce using rule 44 (expression -> term .)
    MINUS           reduce using rule 44 (expression -> term .)
    GREATERTHAN     reduce using rule 44 (expression -> term .)
    SMALLERTHAN     reduce using rule 44 (expression -> term .)
    EQUALTO         reduce using rule 44 (expression -> term .)
    RPAREN          reduce using rule 44 (expression -> term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 75

    (54) factor -> MINUS . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    factor                         shift and go to state 100
    function                       shift and go to state 80

state 76

    (47) term -> factor .

    TIMES           reduce using rule 47 (term -> factor .)
    DIVIDE          reduce using rule 47 (term -> factor .)
    SEMICOLON       reduce using rule 47 (term -> factor .)
    PLUS            reduce using rule 47 (term -> factor .)
    MINUS           reduce using rule 47 (term -> factor .)
    GREATERTHAN     reduce using rule 47 (term -> factor .)
    SMALLERTHAN     reduce using rule 47 (term -> factor .)
    EQUALTO         reduce using rule 47 (term -> factor .)
    RPAREN          reduce using rule 47 (term -> factor .)


state 77

    (48) factor -> FLOAT .

    TIMES           reduce using rule 48 (factor -> FLOAT .)
    DIVIDE          reduce using rule 48 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 48 (factor -> FLOAT .)
    PLUS            reduce using rule 48 (factor -> FLOAT .)
    MINUS           reduce using rule 48 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 48 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 48 (factor -> FLOAT .)
    EQUALTO         reduce using rule 48 (factor -> FLOAT .)
    RPAREN          reduce using rule 48 (factor -> FLOAT .)


state 78

    (49) factor -> INT .

    TIMES           reduce using rule 49 (factor -> INT .)
    DIVIDE          reduce using rule 49 (factor -> INT .)
    SEMICOLON       reduce using rule 49 (factor -> INT .)
    PLUS            reduce using rule 49 (factor -> INT .)
    MINUS           reduce using rule 49 (factor -> INT .)
    GREATERTHAN     reduce using rule 49 (factor -> INT .)
    SMALLERTHAN     reduce using rule 49 (factor -> INT .)
    EQUALTO         reduce using rule 49 (factor -> INT .)
    RPAREN          reduce using rule 49 (factor -> INT .)


state 79

    (50) factor -> STRING .

    TIMES           reduce using rule 50 (factor -> STRING .)
    DIVIDE          reduce using rule 50 (factor -> STRING .)
    SEMICOLON       reduce using rule 50 (factor -> STRING .)
    PLUS            reduce using rule 50 (factor -> STRING .)
    MINUS           reduce using rule 50 (factor -> STRING .)
    GREATERTHAN     reduce using rule 50 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 50 (factor -> STRING .)
    EQUALTO         reduce using rule 50 (factor -> STRING .)
    RPAREN          reduce using rule 50 (factor -> STRING .)


state 80

    (51) factor -> function .

    TIMES           reduce using rule 51 (factor -> function .)
    DIVIDE          reduce using rule 51 (factor -> function .)
    SEMICOLON       reduce using rule 51 (factor -> function .)
    PLUS            reduce using rule 51 (factor -> function .)
    MINUS           reduce using rule 51 (factor -> function .)
    GREATERTHAN     reduce using rule 51 (factor -> function .)
    SMALLERTHAN     reduce using rule 51 (factor -> function .)
    EQUALTO         reduce using rule 51 (factor -> function .)
    RPAREN          reduce using rule 51 (factor -> function .)


state 81

    (55) factor -> LPAREN . expression RPAREN
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 101
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 82

    (16) function -> ID LPAREN era_function . expression RPAREN
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    expression                     shift and go to state 102
    term                           shift and go to state 74
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 83

    (17) era_function -> empty .

    FLOAT           reduce using rule 17 (era_function -> empty .)
    INT             reduce using rule 17 (era_function -> empty .)
    STRING          reduce using rule 17 (era_function -> empty .)
    ID              reduce using rule 17 (era_function -> empty .)
    PLUS            reduce using rule 17 (era_function -> empty .)
    MINUS           reduce using rule 17 (era_function -> empty .)
    LPAREN          reduce using rule 17 (era_function -> empty .)


state 84

    (29) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE

    RPAREN          shift and go to state 103


state 85

    (35) expression_bool -> expression . GREATERTHAN term
    (36) expression_bool -> expression . SMALLERTHAN term
    (37) expression_bool -> expression . EQUALTO term
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 104
    SMALLERTHAN     shift and go to state 105
    EQUALTO         shift and go to state 106
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 86

    (32) condition -> WHILE LPAREN expression_bool_while . RPAREN DO LBRACE statute RBRACE

    RPAREN          shift and go to state 107


state 87

    (38) expression_bool_while -> expression . GREATERTHAN term
    (39) expression_bool_while -> expression . SMALLERTHAN term
    (40) expression_bool_while -> expression . EQUALTO term
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 108
    SMALLERTHAN     shift and go to state 109
    EQUALTO         shift and go to state 110
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 88

    (41) return -> RETURN LPAREN expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 89

    (33) write -> WRITE LPAREN expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 90

    (34) read -> READ LPAREN expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 91

    (14) define_vars_function -> type COLON . id_list SEMICOLON define_vars_function
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 114

state 92

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE . statute RBRACE end_func define_function
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    statute                        shift and go to state 115
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 93

    (19) parameters -> LPAREN type COLON id_list . RPAREN

    RPAREN          shift and go to state 116


state 94

    (28) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    WRITE           reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    READ            reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 28 (assignation -> ID EQUAL expression SEMICOLON .)


state 95

    (42) expression -> expression PLUS . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 117
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 96

    (43) expression -> expression MINUS . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 118
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 97

    (53) factor -> PLUS factor .

    TIMES           reduce using rule 53 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 53 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 53 (factor -> PLUS factor .)
    PLUS            reduce using rule 53 (factor -> PLUS factor .)
    MINUS           reduce using rule 53 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 53 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 53 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 53 (factor -> PLUS factor .)
    RPAREN          reduce using rule 53 (factor -> PLUS factor .)


state 98

    (45) term -> term TIMES . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    factor                         shift and go to state 119
    function                       shift and go to state 80

state 99

    (46) term -> term DIVIDE . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    factor                         shift and go to state 120
    function                       shift and go to state 80

state 100

    (54) factor -> MINUS factor .

    TIMES           reduce using rule 54 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 54 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 54 (factor -> MINUS factor .)
    PLUS            reduce using rule 54 (factor -> MINUS factor .)
    MINUS           reduce using rule 54 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 54 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 54 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 54 (factor -> MINUS factor .)
    RPAREN          reduce using rule 54 (factor -> MINUS factor .)


state 101

    (55) factor -> LPAREN expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 102

    (16) function -> ID LPAREN era_function expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 103

    (29) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 123


state 104

    (35) expression_bool -> expression GREATERTHAN . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 124
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 105

    (36) expression_bool -> expression SMALLERTHAN . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 125
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 106

    (37) expression_bool -> expression EQUALTO . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 126
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 107

    (32) condition -> WHILE LPAREN expression_bool_while RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 127


state 108

    (38) expression_bool_while -> expression GREATERTHAN . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 128
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 109

    (39) expression_bool_while -> expression SMALLERTHAN . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 129
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 110

    (40) expression_bool_while -> expression EQUALTO . term
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . factor
    (48) factor -> . FLOAT
    (49) factor -> . INT
    (50) factor -> . STRING
    (51) factor -> . function
    (52) factor -> . ID
    (53) factor -> . PLUS factor
    (54) factor -> . MINUS factor
    (55) factor -> . LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN

    FLOAT           shift and go to state 77
    INT             shift and go to state 78
    STRING          shift and go to state 79
    ID              shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LPAREN          shift and go to state 81

    term                           shift and go to state 130
    factor                         shift and go to state 76
    function                       shift and go to state 80

state 111

    (41) return -> RETURN LPAREN expression RPAREN .

    ID              reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    IF              reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    WHILE           reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    RETURN          reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    WRITE           reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    READ            reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 41 (return -> RETURN LPAREN expression RPAREN .)


state 112

    (33) write -> WRITE LPAREN expression RPAREN .

    ID              reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    IF              reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    WHILE           reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    RETURN          reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    WRITE           reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    READ            reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 33 (write -> WRITE LPAREN expression RPAREN .)


state 113

    (34) read -> READ LPAREN expression RPAREN .

    ID              reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    IF              reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    WHILE           reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    RETURN          reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    WRITE           reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    READ            reduce using rule 34 (read -> READ LPAREN expression RPAREN .)
    RBRACE          reduce using rule 34 (read -> READ LPAREN expression RPAREN .)


state 114

    (14) define_vars_function -> type COLON id_list . SEMICOLON define_vars_function

    SEMICOLON       shift and go to state 131


state 115

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute . RBRACE end_func define_function

    RBRACE          shift and go to state 132


state 116

    (19) parameters -> LPAREN type COLON id_list RPAREN .

    VARS            reduce using rule 19 (parameters -> LPAREN type COLON id_list RPAREN .)


state 117

    (42) expression -> expression PLUS term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 42 (expression -> expression PLUS term .)
    PLUS            reduce using rule 42 (expression -> expression PLUS term .)
    MINUS           reduce using rule 42 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 42 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 42 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 42 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 118

    (43) expression -> expression MINUS term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 43 (expression -> expression MINUS term .)
    PLUS            reduce using rule 43 (expression -> expression MINUS term .)
    MINUS           reduce using rule 43 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 43 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 43 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 43 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 43 (expression -> expression MINUS term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 119

    (45) term -> term TIMES factor .

    TIMES           reduce using rule 45 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 45 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 45 (term -> term TIMES factor .)
    PLUS            reduce using rule 45 (term -> term TIMES factor .)
    MINUS           reduce using rule 45 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 45 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 45 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 45 (term -> term TIMES factor .)
    RPAREN          reduce using rule 45 (term -> term TIMES factor .)


state 120

    (46) term -> term DIVIDE factor .

    TIMES           reduce using rule 46 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 46 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 46 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 46 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 46 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 46 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 46 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 46 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 46 (term -> term DIVIDE factor .)


state 121

    (55) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 55 (factor -> LPAREN expression RPAREN .)


state 122

    (16) function -> ID LPAREN era_function expression RPAREN .

    ID              reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    IF              reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    WHILE           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    RETURN          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    WRITE           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    READ            reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    RBRACE          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    TIMES           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    DIVIDE          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    SEMICOLON       reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    PLUS            reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    MINUS           reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    GREATERTHAN     reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    SMALLERTHAN     reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    EQUALTO         reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)
    RPAREN          reduce using rule 16 (function -> ID LPAREN era_function expression RPAREN .)


state 123

    (29) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 133


state 124

    (35) expression_bool -> expression GREATERTHAN term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 35 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 125

    (36) expression_bool -> expression SMALLERTHAN term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 36 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 126

    (37) expression_bool -> expression EQUALTO term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 37 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 127

    (32) condition -> WHILE LPAREN expression_bool_while RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 134


state 128

    (38) expression_bool_while -> expression GREATERTHAN term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 38 (expression_bool_while -> expression GREATERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 129

    (39) expression_bool_while -> expression SMALLERTHAN term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 39 (expression_bool_while -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 130

    (40) expression_bool_while -> expression EQUALTO term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor

    RPAREN          reduce using rule 40 (expression_bool_while -> expression EQUALTO term .)
    TIMES           shift and go to state 98
    DIVIDE          shift and go to state 99


state 131

    (14) define_vars_function -> type COLON id_list SEMICOLON . define_vars_function
    (14) define_vars_function -> . type COLON id_list SEMICOLON define_vars_function
    (15) define_vars_function -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    LBRACE          reduce using rule 56 (empty -> .)

    type                           shift and go to state 67
    define_vars_function           shift and go to state 135
    empty                          shift and go to state 69

state 132

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE . end_func define_function
    (13) end_func -> . empty
    (56) empty -> .

    FUNCTION        reduce using rule 56 (empty -> .)
    MAIN            reduce using rule 56 (empty -> .)

    end_func                       shift and go to state 136
    empty                          shift and go to state 137

state 133

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    statute                        shift and go to state 138
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 134

    (32) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    statute                        shift and go to state 139
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 135

    (14) define_vars_function -> type COLON id_list SEMICOLON define_vars_function .

    LBRACE          reduce using rule 14 (define_vars_function -> type COLON id_list SEMICOLON define_vars_function .)


state 136

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func . define_function
    (10) define_function -> . FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function
    (11) define_function -> . empty
    (56) empty -> .

    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 56 (empty -> .)

    define_function                shift and go to state 140
    empty                          shift and go to state 16

state 137

    (13) end_func -> empty .

    FUNCTION        reduce using rule 13 (end_func -> empty .)
    MAIN            reduce using rule 13 (end_func -> empty .)


state 138

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 141


state 139

    (32) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 142


state 140

    (10) define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function .

    MAIN            reduce using rule 10 (define_function -> FUNCTION start_func type ID parameters VARS define_vars_function LBRACE statute RBRACE end_func define_function .)


state 141

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE
    (30) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 143
    ID              reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RETURN          reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WRITE           reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    READ            reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 30 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)


state 142

    (32) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WRITE           reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    READ            reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 32 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)


state 143

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 144


state 144

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (31) def_else -> . empty
    (56) empty -> .

    ID              reduce using rule 56 (empty -> .)
    IF              reduce using rule 56 (empty -> .)
    WHILE           reduce using rule 56 (empty -> .)
    RETURN          reduce using rule 56 (empty -> .)
    WRITE           reduce using rule 56 (empty -> .)
    READ            reduce using rule 56 (empty -> .)
    RBRACE          reduce using rule 56 (empty -> .)

    def_else                       shift and go to state 145
    empty                          shift and go to state 146

state 145

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (20) statute -> . assignation statute
    (21) statute -> . decision statute
    (22) statute -> . condition statute
    (23) statute -> . return statute
    (24) statute -> . function statute
    (25) statute -> . write statute
    (26) statute -> . read statute
    (27) statute -> . empty
    (28) assignation -> . ID EQUAL expression SEMICOLON
    (29) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (30) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (32) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (41) return -> . RETURN LPAREN expression RPAREN
    (16) function -> . ID LPAREN era_function expression RPAREN
    (33) write -> . WRITE LPAREN expression RPAREN
    (34) read -> . READ LPAREN expression RPAREN
    (56) empty -> .

    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    RETURN          shift and go to state 47
    WRITE           shift and go to state 48
    READ            shift and go to state 49
    RBRACE          reduce using rule 56 (empty -> .)

    statute                        shift and go to state 147
    assignation                    shift and go to state 36
    decision                       shift and go to state 37
    condition                      shift and go to state 38
    return                         shift and go to state 39
    function                       shift and go to state 40
    write                          shift and go to state 41
    read                           shift and go to state 42
    empty                          shift and go to state 43

state 146

    (31) def_else -> empty .

    ID              reduce using rule 31 (def_else -> empty .)
    IF              reduce using rule 31 (def_else -> empty .)
    WHILE           reduce using rule 31 (def_else -> empty .)
    RETURN          reduce using rule 31 (def_else -> empty .)
    WRITE           reduce using rule 31 (def_else -> empty .)
    READ            reduce using rule 31 (def_else -> empty .)
    RBRACE          reduce using rule 31 (def_else -> empty .)


state 147

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 148


state 148

    (29) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WHILE           reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RETURN          reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WRITE           reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    READ            reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 29 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

