Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDL
    FALSE
    LBRACKET
    OR
    RBRACKET
    READ
    TO
    TRUE
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON VARS define_vars define_function main
Rule 2     id_list -> ID COMMA id_list
Rule 3     id_list -> ID
Rule 4     define_vars -> type COLON id_list SEMICOLON define_vars
Rule 5     define_vars -> empty
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> STRING
Rule 9     type -> BOOL
Rule 10    define_function -> FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE define_function
Rule 11    define_function -> empty
Rule 12    function -> ID LPAREN expression RPAREN SEMICOLON
Rule 13    main -> MAIN LPAREN RPAREN LBRACE statute RBRACE
Rule 14    parameters -> LPAREN type COLON id_list RPAREN
Rule 15    statute -> assignation statute
Rule 16    statute -> decision statute
Rule 17    statute -> condition statute
Rule 18    statute -> return statute
Rule 19    statute -> function statute
Rule 20    statute -> empty
Rule 21    assignation -> ID EQUAL expression SEMICOLON
Rule 22    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 23    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 24    def_else -> empty
Rule 25    condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
Rule 26    expression_bool -> expression GREATERTHAN term
Rule 27    expression_bool -> expression SMALLERTHAN term
Rule 28    expression_bool -> expression EQUALTO term
Rule 29    expression_bool_while -> expression GREATERTHAN term
Rule 30    expression_bool_while -> expression SMALLERTHAN term
Rule 31    expression_bool_while -> expression EQUALTO term
Rule 32    return -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 33    expression -> expression PLUS term
Rule 34    expression -> expression MINUS term
Rule 35    expression -> term
Rule 36    term -> term TIMES factor
Rule 37    term -> term DIVIDE factor
Rule 38    term -> factor
Rule 39    factor -> FLOAT
Rule 40    factor -> INT
Rule 41    factor -> STRING
Rule 42    factor -> ID
Rule 43    factor -> PLUS factor
Rule 44    factor -> MINUS factor
Rule 45    factor -> LPAREN expression RPAREN
Rule 46    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 9
COLON                : 4 14
COMMA                : 2
DIVIDE               : 37
DO                   : 25
ELSE                 : 22
ENDL                 : 
EQUAL                : 21
EQUALTO              : 28 31
FALSE                : 
FLOAT                : 7 39
FUNCTION             : 10
GREATERTHAN          : 26 29
ID                   : 1 2 3 10 12 21 42
IF                   : 22 23
INT                  : 6 40
LBRACE               : 10 13 22 22 23 25
LBRACKET             : 
LPAREN               : 12 13 14 22 23 25 32 45
MAIN                 : 13
MINUS                : 34 44
OR                   : 
PLUS                 : 33 43
PROGRAM              : 1
RBRACE               : 10 13 22 22 23 25
RBRACKET             : 
READ                 : 
RETURN               : 32
RPAREN               : 12 13 14 22 23 25 32 45
SEMICOLON            : 1 4 12 21 32
SMALLERTHAN          : 27 30
STRING               : 8 41
THEN                 : 22 23
TIMES                : 36
TO                   : 
TRUE                 : 
VARS                 : 1 10
WHILE                : 25
WRITE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 15
condition            : 17
decision             : 16
def_else             : 22
define_function      : 1 10
define_vars          : 1 4 10
empty                : 5 11 20 24
expression           : 12 21 26 27 28 29 30 31 32 33 34 45
expression_bool      : 22 23
expression_bool_while : 25
factor               : 36 37 38 43 44
function             : 19
id_list              : 2 4 14
main                 : 1
parameters           : 10
program              : 0
return               : 18
statute              : 10 13 15 16 17 18 19 22 22 23 25
term                 : 26 27 28 29 30 31 33 34 35 36 37
type                 : 4 10 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON VARS define_vars define_function main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON VARS define_vars define_function main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON VARS define_vars define_function main

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . VARS define_vars define_function main

    VARS            shift and go to state 5


state 5

    (1) program -> PROGRAM ID SEMICOLON VARS . define_vars define_function main
    (4) define_vars -> . type COLON id_list SEMICOLON define_vars
    (5) define_vars -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . STRING
    (9) type -> . BOOL
    (46) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOL            shift and go to state 12
    FUNCTION        reduce using rule 46 (empty -> .)
    MAIN            reduce using rule 46 (empty -> .)

    define_vars                    shift and go to state 6
    type                           shift and go to state 7
    empty                          shift and go to state 8

state 6

    (1) program -> PROGRAM ID SEMICOLON VARS define_vars . define_function main
    (10) define_function -> . FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE define_function
    (11) define_function -> . empty
    (46) empty -> .

    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 46 (empty -> .)

    define_function                shift and go to state 13
    empty                          shift and go to state 15

state 7

    (4) define_vars -> type . COLON id_list SEMICOLON define_vars

    COLON           shift and go to state 16


state 8

    (5) define_vars -> empty .

    FUNCTION        reduce using rule 5 (define_vars -> empty .)
    MAIN            reduce using rule 5 (define_vars -> empty .)
    LBRACE          reduce using rule 5 (define_vars -> empty .)


state 9

    (6) type -> INT .

    COLON           reduce using rule 6 (type -> INT .)
    ID              reduce using rule 6 (type -> INT .)


state 10

    (7) type -> FLOAT .

    COLON           reduce using rule 7 (type -> FLOAT .)
    ID              reduce using rule 7 (type -> FLOAT .)


state 11

    (8) type -> STRING .

    COLON           reduce using rule 8 (type -> STRING .)
    ID              reduce using rule 8 (type -> STRING .)


state 12

    (9) type -> BOOL .

    COLON           reduce using rule 9 (type -> BOOL .)
    ID              reduce using rule 9 (type -> BOOL .)


state 13

    (1) program -> PROGRAM ID SEMICOLON VARS define_vars define_function . main
    (13) main -> . MAIN LPAREN RPAREN LBRACE statute RBRACE

    MAIN            shift and go to state 18

    main                           shift and go to state 17

state 14

    (10) define_function -> FUNCTION . type ID parameters VARS define_vars LBRACE statute RBRACE define_function
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . STRING
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 19

state 15

    (11) define_function -> empty .

    MAIN            reduce using rule 11 (define_function -> empty .)


state 16

    (4) define_vars -> type COLON . id_list SEMICOLON define_vars
    (2) id_list -> . ID COMMA id_list
    (3) id_list -> . ID

    ID              shift and go to state 21

    id_list                        shift and go to state 20

state 17

    (1) program -> PROGRAM ID SEMICOLON VARS define_vars define_function main .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON VARS define_vars define_function main .)


state 18

    (13) main -> MAIN . LPAREN RPAREN LBRACE statute RBRACE

    LPAREN          shift and go to state 22


state 19

    (10) define_function -> FUNCTION type . ID parameters VARS define_vars LBRACE statute RBRACE define_function

    ID              shift and go to state 23


state 20

    (4) define_vars -> type COLON id_list . SEMICOLON define_vars

    SEMICOLON       shift and go to state 24


state 21

    (2) id_list -> ID . COMMA id_list
    (3) id_list -> ID .

    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 3 (id_list -> ID .)
    RPAREN          reduce using rule 3 (id_list -> ID .)


state 22

    (13) main -> MAIN LPAREN . RPAREN LBRACE statute RBRACE

    RPAREN          shift and go to state 26


state 23

    (10) define_function -> FUNCTION type ID . parameters VARS define_vars LBRACE statute RBRACE define_function
    (14) parameters -> . LPAREN type COLON id_list RPAREN

    LPAREN          shift and go to state 28

    parameters                     shift and go to state 27

state 24

    (4) define_vars -> type COLON id_list SEMICOLON . define_vars
    (4) define_vars -> . type COLON id_list SEMICOLON define_vars
    (5) define_vars -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . STRING
    (9) type -> . BOOL
    (46) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOL            shift and go to state 12
    FUNCTION        reduce using rule 46 (empty -> .)
    MAIN            reduce using rule 46 (empty -> .)
    LBRACE          reduce using rule 46 (empty -> .)

    type                           shift and go to state 7
    define_vars                    shift and go to state 29
    empty                          shift and go to state 8

state 25

    (2) id_list -> ID COMMA . id_list
    (2) id_list -> . ID COMMA id_list
    (3) id_list -> . ID

    ID              shift and go to state 21

    id_list                        shift and go to state 30

state 26

    (13) main -> MAIN LPAREN RPAREN . LBRACE statute RBRACE

    LBRACE          shift and go to state 31


state 27

    (10) define_function -> FUNCTION type ID parameters . VARS define_vars LBRACE statute RBRACE define_function

    VARS            shift and go to state 32


state 28

    (14) parameters -> LPAREN . type COLON id_list RPAREN
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . STRING
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 33

state 29

    (4) define_vars -> type COLON id_list SEMICOLON define_vars .

    FUNCTION        reduce using rule 4 (define_vars -> type COLON id_list SEMICOLON define_vars .)
    MAIN            reduce using rule 4 (define_vars -> type COLON id_list SEMICOLON define_vars .)
    LBRACE          reduce using rule 4 (define_vars -> type COLON id_list SEMICOLON define_vars .)


state 30

    (2) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 2 (id_list -> ID COMMA id_list .)
    RPAREN          reduce using rule 2 (id_list -> ID COMMA id_list .)


state 31

    (13) main -> MAIN LPAREN RPAREN LBRACE . statute RBRACE
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    statute                        shift and go to state 34
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 32

    (10) define_function -> FUNCTION type ID parameters VARS . define_vars LBRACE statute RBRACE define_function
    (4) define_vars -> . type COLON id_list SEMICOLON define_vars
    (5) define_vars -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . STRING
    (9) type -> . BOOL
    (46) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOL            shift and go to state 12
    LBRACE          reduce using rule 46 (empty -> .)

    type                           shift and go to state 7
    define_vars                    shift and go to state 45
    empty                          shift and go to state 8

state 33

    (14) parameters -> LPAREN type . COLON id_list RPAREN

    COLON           shift and go to state 46


state 34

    (13) main -> MAIN LPAREN RPAREN LBRACE statute . RBRACE

    RBRACE          shift and go to state 47


state 35

    (15) statute -> assignation . statute
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    assignation                    shift and go to state 35
    statute                        shift and go to state 48
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 36

    (16) statute -> decision . statute
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    decision                       shift and go to state 36
    statute                        shift and go to state 49
    assignation                    shift and go to state 35
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 37

    (17) statute -> condition . statute
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    condition                      shift and go to state 37
    statute                        shift and go to state 50
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 38

    (18) statute -> return . statute
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    return                         shift and go to state 38
    statute                        shift and go to state 51
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 39

    (19) statute -> function . statute
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    function                       shift and go to state 39
    statute                        shift and go to state 52
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    empty                          shift and go to state 40

state 40

    (20) statute -> empty .

    RBRACE          reduce using rule 20 (statute -> empty .)


state 41

    (21) assignation -> ID . EQUAL expression SEMICOLON
    (12) function -> ID . LPAREN expression RPAREN SEMICOLON

    EQUAL           shift and go to state 53
    LPAREN          shift and go to state 54


state 42

    (22) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 55


state 43

    (25) condition -> WHILE . LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 56


state 44

    (32) return -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 57


state 45

    (10) define_function -> FUNCTION type ID parameters VARS define_vars . LBRACE statute RBRACE define_function

    LBRACE          shift and go to state 58


state 46

    (14) parameters -> LPAREN type COLON . id_list RPAREN
    (2) id_list -> . ID COMMA id_list
    (3) id_list -> . ID

    ID              shift and go to state 21

    id_list                        shift and go to state 59

state 47

    (13) main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .

    $end            reduce using rule 13 (main -> MAIN LPAREN RPAREN LBRACE statute RBRACE .)


state 48

    (15) statute -> assignation statute .

    RBRACE          reduce using rule 15 (statute -> assignation statute .)


state 49

    (16) statute -> decision statute .

    RBRACE          reduce using rule 16 (statute -> decision statute .)


state 50

    (17) statute -> condition statute .

    RBRACE          reduce using rule 17 (statute -> condition statute .)


state 51

    (18) statute -> return statute .

    RBRACE          reduce using rule 18 (statute -> return statute .)


state 52

    (19) statute -> function statute .

    RBRACE          reduce using rule 19 (statute -> function statute .)


state 53

    (21) assignation -> ID EQUAL . expression SEMICOLON
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression                     shift and go to state 61
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 54

    (12) function -> ID LPAREN . expression RPAREN SEMICOLON
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression                     shift and go to state 70
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 55

    (22) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (26) expression_bool -> . expression GREATERTHAN term
    (27) expression_bool -> . expression SMALLERTHAN term
    (28) expression_bool -> . expression EQUALTO term
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression_bool                shift and go to state 71
    expression                     shift and go to state 72
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 56

    (25) condition -> WHILE LPAREN . expression_bool_while RPAREN DO LBRACE statute RBRACE
    (29) expression_bool_while -> . expression GREATERTHAN term
    (30) expression_bool_while -> . expression SMALLERTHAN term
    (31) expression_bool_while -> . expression EQUALTO term
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression_bool_while          shift and go to state 73
    expression                     shift and go to state 74
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 57

    (32) return -> RETURN LPAREN . expression RPAREN SEMICOLON
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression                     shift and go to state 75
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 58

    (10) define_function -> FUNCTION type ID parameters VARS define_vars LBRACE . statute RBRACE define_function
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    statute                        shift and go to state 76
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 59

    (14) parameters -> LPAREN type COLON id_list . RPAREN

    RPAREN          shift and go to state 77


state 60

    (42) factor -> ID .

    TIMES           reduce using rule 42 (factor -> ID .)
    DIVIDE          reduce using rule 42 (factor -> ID .)
    SEMICOLON       reduce using rule 42 (factor -> ID .)
    PLUS            reduce using rule 42 (factor -> ID .)
    MINUS           reduce using rule 42 (factor -> ID .)
    RPAREN          reduce using rule 42 (factor -> ID .)
    GREATERTHAN     reduce using rule 42 (factor -> ID .)
    SMALLERTHAN     reduce using rule 42 (factor -> ID .)
    EQUALTO         reduce using rule 42 (factor -> ID .)


state 61

    (21) assignation -> ID EQUAL expression . SEMICOLON
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 62

    (43) factor -> PLUS . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    factor                         shift and go to state 81

state 63

    (35) expression -> term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 35 (expression -> term .)
    PLUS            reduce using rule 35 (expression -> term .)
    MINUS           reduce using rule 35 (expression -> term .)
    RPAREN          reduce using rule 35 (expression -> term .)
    GREATERTHAN     reduce using rule 35 (expression -> term .)
    SMALLERTHAN     reduce using rule 35 (expression -> term .)
    EQUALTO         reduce using rule 35 (expression -> term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 64

    (44) factor -> MINUS . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    factor                         shift and go to state 84

state 65

    (38) term -> factor .

    TIMES           reduce using rule 38 (term -> factor .)
    DIVIDE          reduce using rule 38 (term -> factor .)
    SEMICOLON       reduce using rule 38 (term -> factor .)
    PLUS            reduce using rule 38 (term -> factor .)
    MINUS           reduce using rule 38 (term -> factor .)
    RPAREN          reduce using rule 38 (term -> factor .)
    GREATERTHAN     reduce using rule 38 (term -> factor .)
    SMALLERTHAN     reduce using rule 38 (term -> factor .)
    EQUALTO         reduce using rule 38 (term -> factor .)


state 66

    (39) factor -> FLOAT .

    TIMES           reduce using rule 39 (factor -> FLOAT .)
    DIVIDE          reduce using rule 39 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 39 (factor -> FLOAT .)
    PLUS            reduce using rule 39 (factor -> FLOAT .)
    MINUS           reduce using rule 39 (factor -> FLOAT .)
    RPAREN          reduce using rule 39 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 39 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 39 (factor -> FLOAT .)
    EQUALTO         reduce using rule 39 (factor -> FLOAT .)


state 67

    (40) factor -> INT .

    TIMES           reduce using rule 40 (factor -> INT .)
    DIVIDE          reduce using rule 40 (factor -> INT .)
    SEMICOLON       reduce using rule 40 (factor -> INT .)
    PLUS            reduce using rule 40 (factor -> INT .)
    MINUS           reduce using rule 40 (factor -> INT .)
    RPAREN          reduce using rule 40 (factor -> INT .)
    GREATERTHAN     reduce using rule 40 (factor -> INT .)
    SMALLERTHAN     reduce using rule 40 (factor -> INT .)
    EQUALTO         reduce using rule 40 (factor -> INT .)


state 68

    (41) factor -> STRING .

    TIMES           reduce using rule 41 (factor -> STRING .)
    DIVIDE          reduce using rule 41 (factor -> STRING .)
    SEMICOLON       reduce using rule 41 (factor -> STRING .)
    PLUS            reduce using rule 41 (factor -> STRING .)
    MINUS           reduce using rule 41 (factor -> STRING .)
    RPAREN          reduce using rule 41 (factor -> STRING .)
    GREATERTHAN     reduce using rule 41 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 41 (factor -> STRING .)
    EQUALTO         reduce using rule 41 (factor -> STRING .)


state 69

    (45) factor -> LPAREN . expression RPAREN
    (33) expression -> . expression PLUS term
    (34) expression -> . expression MINUS term
    (35) expression -> . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    expression                     shift and go to state 85
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 70

    (12) function -> ID LPAREN expression . RPAREN SEMICOLON
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 71

    (22) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE

    RPAREN          shift and go to state 87


state 72

    (26) expression_bool -> expression . GREATERTHAN term
    (27) expression_bool -> expression . SMALLERTHAN term
    (28) expression_bool -> expression . EQUALTO term
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 88
    SMALLERTHAN     shift and go to state 89
    EQUALTO         shift and go to state 90
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 73

    (25) condition -> WHILE LPAREN expression_bool_while . RPAREN DO LBRACE statute RBRACE

    RPAREN          shift and go to state 91


state 74

    (29) expression_bool_while -> expression . GREATERTHAN term
    (30) expression_bool_while -> expression . SMALLERTHAN term
    (31) expression_bool_while -> expression . EQUALTO term
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 92
    SMALLERTHAN     shift and go to state 93
    EQUALTO         shift and go to state 94
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 75

    (32) return -> RETURN LPAREN expression . RPAREN SEMICOLON
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 76

    (10) define_function -> FUNCTION type ID parameters VARS define_vars LBRACE statute . RBRACE define_function

    RBRACE          shift and go to state 96


state 77

    (14) parameters -> LPAREN type COLON id_list RPAREN .

    VARS            reduce using rule 14 (parameters -> LPAREN type COLON id_list RPAREN .)


state 78

    (21) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 21 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 21 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 21 (assignation -> ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 21 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 21 (assignation -> ID EQUAL expression SEMICOLON .)


state 79

    (33) expression -> expression PLUS . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 97
    factor                         shift and go to state 65

state 80

    (34) expression -> expression MINUS . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 98
    factor                         shift and go to state 65

state 81

    (43) factor -> PLUS factor .

    TIMES           reduce using rule 43 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 43 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 43 (factor -> PLUS factor .)
    PLUS            reduce using rule 43 (factor -> PLUS factor .)
    MINUS           reduce using rule 43 (factor -> PLUS factor .)
    RPAREN          reduce using rule 43 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 43 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 43 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 43 (factor -> PLUS factor .)


state 82

    (36) term -> term TIMES . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    factor                         shift and go to state 99

state 83

    (37) term -> term DIVIDE . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    factor                         shift and go to state 100

state 84

    (44) factor -> MINUS factor .

    TIMES           reduce using rule 44 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 44 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 44 (factor -> MINUS factor .)
    PLUS            reduce using rule 44 (factor -> MINUS factor .)
    MINUS           reduce using rule 44 (factor -> MINUS factor .)
    RPAREN          reduce using rule 44 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 44 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 44 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 44 (factor -> MINUS factor .)


state 85

    (45) factor -> LPAREN expression . RPAREN
    (33) expression -> expression . PLUS term
    (34) expression -> expression . MINUS term

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 86

    (12) function -> ID LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 102


state 87

    (22) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 103


state 88

    (26) expression_bool -> expression GREATERTHAN . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 104
    factor                         shift and go to state 65

state 89

    (27) expression_bool -> expression SMALLERTHAN . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 105
    factor                         shift and go to state 65

state 90

    (28) expression_bool -> expression EQUALTO . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 106
    factor                         shift and go to state 65

state 91

    (25) condition -> WHILE LPAREN expression_bool_while RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 107


state 92

    (29) expression_bool_while -> expression GREATERTHAN . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 108
    factor                         shift and go to state 65

state 93

    (30) expression_bool_while -> expression SMALLERTHAN . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 109
    factor                         shift and go to state 65

state 94

    (31) expression_bool_while -> expression EQUALTO . term
    (36) term -> . term TIMES factor
    (37) term -> . term DIVIDE factor
    (38) term -> . factor
    (39) factor -> . FLOAT
    (40) factor -> . INT
    (41) factor -> . STRING
    (42) factor -> . ID
    (43) factor -> . PLUS factor
    (44) factor -> . MINUS factor
    (45) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 66
    INT             shift and go to state 67
    STRING          shift and go to state 68
    ID              shift and go to state 60
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    LPAREN          shift and go to state 69

    term                           shift and go to state 110
    factor                         shift and go to state 65

state 95

    (32) return -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 111


state 96

    (10) define_function -> FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE . define_function
    (10) define_function -> . FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE define_function
    (11) define_function -> . empty
    (46) empty -> .

    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 46 (empty -> .)

    define_function                shift and go to state 112
    empty                          shift and go to state 15

state 97

    (33) expression -> expression PLUS term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 33 (expression -> expression PLUS term .)
    PLUS            reduce using rule 33 (expression -> expression PLUS term .)
    MINUS           reduce using rule 33 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 33 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 33 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 33 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 33 (expression -> expression PLUS term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 98

    (34) expression -> expression MINUS term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 34 (expression -> expression MINUS term .)
    PLUS            reduce using rule 34 (expression -> expression MINUS term .)
    MINUS           reduce using rule 34 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 34 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 34 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 34 (expression -> expression MINUS term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 99

    (36) term -> term TIMES factor .

    TIMES           reduce using rule 36 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 36 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 36 (term -> term TIMES factor .)
    PLUS            reduce using rule 36 (term -> term TIMES factor .)
    MINUS           reduce using rule 36 (term -> term TIMES factor .)
    RPAREN          reduce using rule 36 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 36 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 36 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 36 (term -> term TIMES factor .)


state 100

    (37) term -> term DIVIDE factor .

    TIMES           reduce using rule 37 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 37 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 37 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 37 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 37 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 37 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 37 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 37 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 37 (term -> term DIVIDE factor .)


state 101

    (45) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 45 (factor -> LPAREN expression RPAREN .)


state 102

    (12) function -> ID LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 12 (function -> ID LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 12 (function -> ID LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 12 (function -> ID LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 12 (function -> ID LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 12 (function -> ID LPAREN expression RPAREN SEMICOLON .)


state 103

    (22) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 113


state 104

    (26) expression_bool -> expression GREATERTHAN term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 26 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 105

    (27) expression_bool -> expression SMALLERTHAN term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 27 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 106

    (28) expression_bool -> expression EQUALTO term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 28 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 107

    (25) condition -> WHILE LPAREN expression_bool_while RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 114


state 108

    (29) expression_bool_while -> expression GREATERTHAN term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 29 (expression_bool_while -> expression GREATERTHAN term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 109

    (30) expression_bool_while -> expression SMALLERTHAN term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 30 (expression_bool_while -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 110

    (31) expression_bool_while -> expression EQUALTO term .
    (36) term -> term . TIMES factor
    (37) term -> term . DIVIDE factor

    RPAREN          reduce using rule 31 (expression_bool_while -> expression EQUALTO term .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 111

    (32) return -> RETURN LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 32 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 32 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 32 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 112

    (10) define_function -> FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE define_function .

    MAIN            reduce using rule 10 (define_function -> FUNCTION type ID parameters VARS define_vars LBRACE statute RBRACE define_function .)


state 113

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    statute                        shift and go to state 115
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 114

    (25) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE . statute RBRACE
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    statute                        shift and go to state 116
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 115

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 117


state 116

    (25) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 118


state 117

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE
    (23) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 119
    ID              reduce using rule 23 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 23 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 23 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RETURN          reduce using rule 23 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 23 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)


state 118

    (25) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 25 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 25 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 25 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 25 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 25 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)


state 119

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 120


state 120

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (24) def_else -> . empty
    (46) empty -> .

    ID              reduce using rule 46 (empty -> .)
    IF              reduce using rule 46 (empty -> .)
    WHILE           reduce using rule 46 (empty -> .)
    RETURN          reduce using rule 46 (empty -> .)
    RBRACE          reduce using rule 46 (empty -> .)

    def_else                       shift and go to state 121
    empty                          shift and go to state 122

state 121

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (15) statute -> . assignation statute
    (16) statute -> . decision statute
    (17) statute -> . condition statute
    (18) statute -> . return statute
    (19) statute -> . function statute
    (20) statute -> . empty
    (21) assignation -> . ID EQUAL expression SEMICOLON
    (22) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (23) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (25) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (32) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (12) function -> . ID LPAREN expression RPAREN SEMICOLON
    (46) empty -> .

    ID              shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    RETURN          shift and go to state 44
    RBRACE          reduce using rule 46 (empty -> .)

    statute                        shift and go to state 123
    assignation                    shift and go to state 35
    decision                       shift and go to state 36
    condition                      shift and go to state 37
    return                         shift and go to state 38
    function                       shift and go to state 39
    empty                          shift and go to state 40

state 122

    (24) def_else -> empty .

    ID              reduce using rule 24 (def_else -> empty .)
    IF              reduce using rule 24 (def_else -> empty .)
    WHILE           reduce using rule 24 (def_else -> empty .)
    RETURN          reduce using rule 24 (def_else -> empty .)
    RBRACE          reduce using rule 24 (def_else -> empty .)


state 123

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 124


state 124

    (22) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 22 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 22 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WHILE           reduce using rule 22 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RETURN          reduce using rule 22 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 22 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

