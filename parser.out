Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDL
    FALSE
    FUNCTION
    LBRACKET
    MAIN
    OR
    PROGRAM
    RBRACKET
    READ
    TO
    TRUE
    WRITE

Grammar

Rule 0     S' -> define_function
Rule 1     define_function -> VARS define_vars LBRACE statute RBRACE
Rule 2     define_function -> VARS define_vars LBRACE statute RBRACE define_function
Rule 3     id_list -> ID COMMA id_list
Rule 4     id_list -> ID
Rule 5     define_vars -> type COLON id_list SEMICOLON define_vars
Rule 6     define_vars -> empty
Rule 7     type -> INT
Rule 8     type -> FLOAT
Rule 9     type -> STRING
Rule 10    type -> BOOL
Rule 11    statute -> assignation statute
Rule 12    statute -> decision statute
Rule 13    statute -> condition statute
Rule 14    statute -> return statute
Rule 15    statute -> empty
Rule 16    assignation -> ID EQUAL expression SEMICOLON
Rule 17    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
Rule 18    decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
Rule 19    def_else -> empty
Rule 20    condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
Rule 21    expression_bool -> expression GREATERTHAN term
Rule 22    expression_bool -> expression SMALLERTHAN term
Rule 23    expression_bool -> expression EQUALTO term
Rule 24    expression_bool_while -> expression GREATERTHAN term
Rule 25    expression_bool_while -> expression SMALLERTHAN term
Rule 26    expression_bool_while -> expression EQUALTO term
Rule 27    return -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 28    expression -> expression PLUS term
Rule 29    expression -> expression MINUS term
Rule 30    expression -> term
Rule 31    term -> term TIMES factor
Rule 32    term -> term DIVIDE factor
Rule 33    term -> factor
Rule 34    factor -> FLOAT
Rule 35    factor -> INT
Rule 36    factor -> STRING
Rule 37    factor -> ID
Rule 38    factor -> PLUS factor
Rule 39    factor -> MINUS factor
Rule 40    factor -> LPAREN expression RPAREN
Rule 41    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 10
COLON                : 5
COMMA                : 3
DIVIDE               : 32
DO                   : 20
ELSE                 : 17
ENDL                 : 
EQUAL                : 16
EQUALTO              : 23 26
FALSE                : 
FLOAT                : 8 34
FUNCTION             : 
GREATERTHAN          : 21 24
ID                   : 3 4 16 37
IF                   : 17 18
INT                  : 7 35
LBRACE               : 1 2 17 17 18 20
LBRACKET             : 
LPAREN               : 17 18 20 27 40
MAIN                 : 
MINUS                : 29 39
OR                   : 
PLUS                 : 28 38
PROGRAM              : 
RBRACE               : 1 2 17 17 18 20
RBRACKET             : 
READ                 : 
RETURN               : 27
RPAREN               : 17 18 20 27 40
SEMICOLON            : 5 16 27
SMALLERTHAN          : 22 25
STRING               : 9 36
THEN                 : 17 18
TIMES                : 31
TO                   : 
TRUE                 : 
VARS                 : 1 2
WHILE                : 20
WRITE                : 
error                : 

Nonterminals, with rules where they appear

assignation          : 11
condition            : 13
decision             : 12
def_else             : 17
define_function      : 2 0
define_vars          : 1 2 5
empty                : 6 15 19
expression           : 16 21 22 23 24 25 26 27 28 29 40
expression_bool      : 17 18
expression_bool_while : 20
factor               : 31 32 33 38 39
id_list              : 3 5
return               : 14
statute              : 1 2 11 12 13 14 17 17 18 20
term                 : 21 22 23 24 25 26 28 29 30 31 32
type                 : 5

Parsing method: LALR

state 0

    (0) S' -> . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    VARS            shift and go to state 2

    define_function                shift and go to state 1

state 1

    (0) S' -> define_function .



state 2

    (1) define_function -> VARS . define_vars LBRACE statute RBRACE
    (2) define_function -> VARS . define_vars LBRACE statute RBRACE define_function
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (41) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 41 (empty -> .)

    define_vars                    shift and go to state 3
    type                           shift and go to state 4
    empty                          shift and go to state 5

state 3

    (1) define_function -> VARS define_vars . LBRACE statute RBRACE
    (2) define_function -> VARS define_vars . LBRACE statute RBRACE define_function

    LBRACE          shift and go to state 10


state 4

    (5) define_vars -> type . COLON id_list SEMICOLON define_vars

    COLON           shift and go to state 11


state 5

    (6) define_vars -> empty .

    LBRACE          reduce using rule 6 (define_vars -> empty .)


state 6

    (7) type -> INT .

    COLON           reduce using rule 7 (type -> INT .)


state 7

    (8) type -> FLOAT .

    COLON           reduce using rule 8 (type -> FLOAT .)


state 8

    (9) type -> STRING .

    COLON           reduce using rule 9 (type -> STRING .)


state 9

    (10) type -> BOOL .

    COLON           reduce using rule 10 (type -> BOOL .)


state 10

    (1) define_function -> VARS define_vars LBRACE . statute RBRACE
    (2) define_function -> VARS define_vars LBRACE . statute RBRACE define_function
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    statute                        shift and go to state 12
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 11

    (5) define_vars -> type COLON . id_list SEMICOLON define_vars
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 22

state 12

    (1) define_function -> VARS define_vars LBRACE statute . RBRACE
    (2) define_function -> VARS define_vars LBRACE statute . RBRACE define_function

    RBRACE          shift and go to state 24


state 13

    (11) statute -> assignation . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    assignation                    shift and go to state 13
    statute                        shift and go to state 25
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 14

    (12) statute -> decision . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    decision                       shift and go to state 14
    statute                        shift and go to state 26
    assignation                    shift and go to state 13
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 15

    (13) statute -> condition . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    condition                      shift and go to state 15
    statute                        shift and go to state 27
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 16

    (14) statute -> return . statute
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    return                         shift and go to state 16
    statute                        shift and go to state 28
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    empty                          shift and go to state 17

state 17

    (15) statute -> empty .

    RBRACE          reduce using rule 15 (statute -> empty .)


state 18

    (16) assignation -> ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 29


state 19

    (17) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF . LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE

    LPAREN          shift and go to state 30


state 20

    (20) condition -> WHILE . LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE

    LPAREN          shift and go to state 31


state 21

    (27) return -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 32


state 22

    (5) define_vars -> type COLON id_list . SEMICOLON define_vars

    SEMICOLON       shift and go to state 33


state 23

    (3) id_list -> ID . COMMA id_list
    (4) id_list -> ID .

    COMMA           shift and go to state 34
    SEMICOLON       reduce using rule 4 (id_list -> ID .)


state 24

    (1) define_function -> VARS define_vars LBRACE statute RBRACE .
    (2) define_function -> VARS define_vars LBRACE statute RBRACE . define_function
    (1) define_function -> . VARS define_vars LBRACE statute RBRACE
    (2) define_function -> . VARS define_vars LBRACE statute RBRACE define_function

    $end            reduce using rule 1 (define_function -> VARS define_vars LBRACE statute RBRACE .)
    VARS            shift and go to state 2

    define_function                shift and go to state 35

state 25

    (11) statute -> assignation statute .

    RBRACE          reduce using rule 11 (statute -> assignation statute .)


state 26

    (12) statute -> decision statute .

    RBRACE          reduce using rule 12 (statute -> decision statute .)


state 27

    (13) statute -> condition statute .

    RBRACE          reduce using rule 13 (statute -> condition statute .)


state 28

    (14) statute -> return statute .

    RBRACE          reduce using rule 14 (statute -> return statute .)


state 29

    (16) assignation -> ID EQUAL . expression SEMICOLON
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    expression                     shift and go to state 37
    term                           shift and go to state 39
    factor                         shift and go to state 41

state 30

    (17) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN . expression_bool RPAREN THEN LBRACE statute RBRACE
    (21) expression_bool -> . expression GREATERTHAN term
    (22) expression_bool -> . expression SMALLERTHAN term
    (23) expression_bool -> . expression EQUALTO term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    expression_bool                shift and go to state 46
    expression                     shift and go to state 47
    term                           shift and go to state 39
    factor                         shift and go to state 41

state 31

    (20) condition -> WHILE LPAREN . expression_bool_while RPAREN DO LBRACE statute RBRACE
    (24) expression_bool_while -> . expression GREATERTHAN term
    (25) expression_bool_while -> . expression SMALLERTHAN term
    (26) expression_bool_while -> . expression EQUALTO term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    expression_bool_while          shift and go to state 48
    expression                     shift and go to state 49
    term                           shift and go to state 39
    factor                         shift and go to state 41

state 32

    (27) return -> RETURN LPAREN . expression RPAREN SEMICOLON
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    expression                     shift and go to state 50
    term                           shift and go to state 39
    factor                         shift and go to state 41

state 33

    (5) define_vars -> type COLON id_list SEMICOLON . define_vars
    (5) define_vars -> . type COLON id_list SEMICOLON define_vars
    (6) define_vars -> . empty
    (7) type -> . INT
    (8) type -> . FLOAT
    (9) type -> . STRING
    (10) type -> . BOOL
    (41) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 9
    LBRACE          reduce using rule 41 (empty -> .)

    type                           shift and go to state 4
    define_vars                    shift and go to state 51
    empty                          shift and go to state 5

state 34

    (3) id_list -> ID COMMA . id_list
    (3) id_list -> . ID COMMA id_list
    (4) id_list -> . ID

    ID              shift and go to state 23

    id_list                        shift and go to state 52

state 35

    (2) define_function -> VARS define_vars LBRACE statute RBRACE define_function .

    $end            reduce using rule 2 (define_function -> VARS define_vars LBRACE statute RBRACE define_function .)


state 36

    (37) factor -> ID .

    TIMES           reduce using rule 37 (factor -> ID .)
    DIVIDE          reduce using rule 37 (factor -> ID .)
    SEMICOLON       reduce using rule 37 (factor -> ID .)
    PLUS            reduce using rule 37 (factor -> ID .)
    MINUS           reduce using rule 37 (factor -> ID .)
    GREATERTHAN     reduce using rule 37 (factor -> ID .)
    SMALLERTHAN     reduce using rule 37 (factor -> ID .)
    EQUALTO         reduce using rule 37 (factor -> ID .)
    RPAREN          reduce using rule 37 (factor -> ID .)


state 37

    (16) assignation -> ID EQUAL expression . SEMICOLON
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55


state 38

    (38) factor -> PLUS . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    factor                         shift and go to state 56

state 39

    (30) expression -> term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 30 (expression -> term .)
    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    GREATERTHAN     reduce using rule 30 (expression -> term .)
    SMALLERTHAN     reduce using rule 30 (expression -> term .)
    EQUALTO         reduce using rule 30 (expression -> term .)
    RPAREN          reduce using rule 30 (expression -> term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 40

    (39) factor -> MINUS . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    factor                         shift and go to state 59

state 41

    (33) term -> factor .

    TIMES           reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    SEMICOLON       reduce using rule 33 (term -> factor .)
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    GREATERTHAN     reduce using rule 33 (term -> factor .)
    SMALLERTHAN     reduce using rule 33 (term -> factor .)
    EQUALTO         reduce using rule 33 (term -> factor .)
    RPAREN          reduce using rule 33 (term -> factor .)


state 42

    (34) factor -> FLOAT .

    TIMES           reduce using rule 34 (factor -> FLOAT .)
    DIVIDE          reduce using rule 34 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 34 (factor -> FLOAT .)
    PLUS            reduce using rule 34 (factor -> FLOAT .)
    MINUS           reduce using rule 34 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 34 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 34 (factor -> FLOAT .)
    EQUALTO         reduce using rule 34 (factor -> FLOAT .)
    RPAREN          reduce using rule 34 (factor -> FLOAT .)


state 43

    (35) factor -> INT .

    TIMES           reduce using rule 35 (factor -> INT .)
    DIVIDE          reduce using rule 35 (factor -> INT .)
    SEMICOLON       reduce using rule 35 (factor -> INT .)
    PLUS            reduce using rule 35 (factor -> INT .)
    MINUS           reduce using rule 35 (factor -> INT .)
    GREATERTHAN     reduce using rule 35 (factor -> INT .)
    SMALLERTHAN     reduce using rule 35 (factor -> INT .)
    EQUALTO         reduce using rule 35 (factor -> INT .)
    RPAREN          reduce using rule 35 (factor -> INT .)


state 44

    (36) factor -> STRING .

    TIMES           reduce using rule 36 (factor -> STRING .)
    DIVIDE          reduce using rule 36 (factor -> STRING .)
    SEMICOLON       reduce using rule 36 (factor -> STRING .)
    PLUS            reduce using rule 36 (factor -> STRING .)
    MINUS           reduce using rule 36 (factor -> STRING .)
    GREATERTHAN     reduce using rule 36 (factor -> STRING .)
    SMALLERTHAN     reduce using rule 36 (factor -> STRING .)
    EQUALTO         reduce using rule 36 (factor -> STRING .)
    RPAREN          reduce using rule 36 (factor -> STRING .)


state 45

    (40) factor -> LPAREN . expression RPAREN
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    expression                     shift and go to state 60
    term                           shift and go to state 39
    factor                         shift and go to state 41

state 46

    (17) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool . RPAREN THEN LBRACE statute RBRACE

    RPAREN          shift and go to state 61


state 47

    (21) expression_bool -> expression . GREATERTHAN term
    (22) expression_bool -> expression . SMALLERTHAN term
    (23) expression_bool -> expression . EQUALTO term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 62
    SMALLERTHAN     shift and go to state 63
    EQUALTO         shift and go to state 64
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55


state 48

    (20) condition -> WHILE LPAREN expression_bool_while . RPAREN DO LBRACE statute RBRACE

    RPAREN          shift and go to state 65


state 49

    (24) expression_bool_while -> expression . GREATERTHAN term
    (25) expression_bool_while -> expression . SMALLERTHAN term
    (26) expression_bool_while -> expression . EQUALTO term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    GREATERTHAN     shift and go to state 66
    SMALLERTHAN     shift and go to state 67
    EQUALTO         shift and go to state 68
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55


state 50

    (27) return -> RETURN LPAREN expression . RPAREN SEMICOLON
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55


state 51

    (5) define_vars -> type COLON id_list SEMICOLON define_vars .

    LBRACE          reduce using rule 5 (define_vars -> type COLON id_list SEMICOLON define_vars .)


state 52

    (3) id_list -> ID COMMA id_list .

    SEMICOLON       reduce using rule 3 (id_list -> ID COMMA id_list .)


state 53

    (16) assignation -> ID EQUAL expression SEMICOLON .

    ID              reduce using rule 16 (assignation -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 16 (assignation -> ID EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 16 (assignation -> ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 16 (assignation -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 16 (assignation -> ID EQUAL expression SEMICOLON .)


state 54

    (28) expression -> expression PLUS . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 70
    factor                         shift and go to state 41

state 55

    (29) expression -> expression MINUS . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 71
    factor                         shift and go to state 41

state 56

    (38) factor -> PLUS factor .

    TIMES           reduce using rule 38 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 38 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 38 (factor -> PLUS factor .)
    PLUS            reduce using rule 38 (factor -> PLUS factor .)
    MINUS           reduce using rule 38 (factor -> PLUS factor .)
    GREATERTHAN     reduce using rule 38 (factor -> PLUS factor .)
    SMALLERTHAN     reduce using rule 38 (factor -> PLUS factor .)
    EQUALTO         reduce using rule 38 (factor -> PLUS factor .)
    RPAREN          reduce using rule 38 (factor -> PLUS factor .)


state 57

    (31) term -> term TIMES . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    factor                         shift and go to state 72

state 58

    (32) term -> term DIVIDE . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    factor                         shift and go to state 73

state 59

    (39) factor -> MINUS factor .

    TIMES           reduce using rule 39 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 39 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 39 (factor -> MINUS factor .)
    PLUS            reduce using rule 39 (factor -> MINUS factor .)
    MINUS           reduce using rule 39 (factor -> MINUS factor .)
    GREATERTHAN     reduce using rule 39 (factor -> MINUS factor .)
    SMALLERTHAN     reduce using rule 39 (factor -> MINUS factor .)
    EQUALTO         reduce using rule 39 (factor -> MINUS factor .)
    RPAREN          reduce using rule 39 (factor -> MINUS factor .)


state 60

    (40) factor -> LPAREN expression . RPAREN
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55


state 61

    (17) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool RPAREN . THEN LBRACE statute RBRACE

    THEN            shift and go to state 75


state 62

    (21) expression_bool -> expression GREATERTHAN . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 76
    factor                         shift and go to state 41

state 63

    (22) expression_bool -> expression SMALLERTHAN . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 77
    factor                         shift and go to state 41

state 64

    (23) expression_bool -> expression EQUALTO . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 78
    factor                         shift and go to state 41

state 65

    (20) condition -> WHILE LPAREN expression_bool_while RPAREN . DO LBRACE statute RBRACE

    DO              shift and go to state 79


state 66

    (24) expression_bool_while -> expression GREATERTHAN . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 80
    factor                         shift and go to state 41

state 67

    (25) expression_bool_while -> expression SMALLERTHAN . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 81
    factor                         shift and go to state 41

state 68

    (26) expression_bool_while -> expression EQUALTO . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . FLOAT
    (35) factor -> . INT
    (36) factor -> . STRING
    (37) factor -> . ID
    (38) factor -> . PLUS factor
    (39) factor -> . MINUS factor
    (40) factor -> . LPAREN expression RPAREN

    FLOAT           shift and go to state 42
    INT             shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 45

    term                           shift and go to state 82
    factor                         shift and go to state 41

state 69

    (27) return -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 83


state 70

    (28) expression -> expression PLUS term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS term .)
    PLUS            reduce using rule 28 (expression -> expression PLUS term .)
    MINUS           reduce using rule 28 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 28 (expression -> expression PLUS term .)
    SMALLERTHAN     reduce using rule 28 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 28 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 71

    (29) expression -> expression MINUS term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS term .)
    PLUS            reduce using rule 29 (expression -> expression MINUS term .)
    MINUS           reduce using rule 29 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 29 (expression -> expression MINUS term .)
    SMALLERTHAN     reduce using rule 29 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 29 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 72

    (31) term -> term TIMES factor .

    TIMES           reduce using rule 31 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 31 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 31 (term -> term TIMES factor .)
    PLUS            reduce using rule 31 (term -> term TIMES factor .)
    MINUS           reduce using rule 31 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 31 (term -> term TIMES factor .)
    SMALLERTHAN     reduce using rule 31 (term -> term TIMES factor .)
    EQUALTO         reduce using rule 31 (term -> term TIMES factor .)
    RPAREN          reduce using rule 31 (term -> term TIMES factor .)


state 73

    (32) term -> term DIVIDE factor .

    TIMES           reduce using rule 32 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 32 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 32 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 32 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 32 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 32 (term -> term DIVIDE factor .)
    SMALLERTHAN     reduce using rule 32 (term -> term DIVIDE factor .)
    EQUALTO         reduce using rule 32 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 32 (term -> term DIVIDE factor .)


state 74

    (40) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    SMALLERTHAN     reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (factor -> LPAREN expression RPAREN .)


state 75

    (17) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool RPAREN THEN . LBRACE statute RBRACE

    LBRACE          shift and go to state 84


state 76

    (21) expression_bool -> expression GREATERTHAN term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 21 (expression_bool -> expression GREATERTHAN term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 77

    (22) expression_bool -> expression SMALLERTHAN term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 22 (expression_bool -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 78

    (23) expression_bool -> expression EQUALTO term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 23 (expression_bool -> expression EQUALTO term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 79

    (20) condition -> WHILE LPAREN expression_bool_while RPAREN DO . LBRACE statute RBRACE

    LBRACE          shift and go to state 85


state 80

    (24) expression_bool_while -> expression GREATERTHAN term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 24 (expression_bool_while -> expression GREATERTHAN term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 81

    (25) expression_bool_while -> expression SMALLERTHAN term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 25 (expression_bool_while -> expression SMALLERTHAN term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 82

    (26) expression_bool_while -> expression EQUALTO term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    RPAREN          reduce using rule 26 (expression_bool_while -> expression EQUALTO term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58


state 83

    (27) return -> RETURN LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 27 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 27 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 27 (return -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 84

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    statute                        shift and go to state 86
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 85

    (20) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    statute                        shift and go to state 87
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 86

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute . RBRACE

    RBRACE          shift and go to state 88


state 87

    (20) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute . RBRACE

    RBRACE          shift and go to state 89


state 88

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE . ELSE LBRACE def_else statute RBRACE
    (18) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .

    ELSE            shift and go to state 90
    ID              reduce using rule 18 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    IF              reduce using rule 18 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    WHILE           reduce using rule 18 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RETURN          reduce using rule 18 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)
    RBRACE          reduce using rule 18 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE .)


state 89

    (20) condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .

    ID              reduce using rule 20 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    IF              reduce using rule 20 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    WHILE           reduce using rule 20 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RETURN          reduce using rule 20 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)
    RBRACE          reduce using rule 20 (condition -> WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE .)


state 90

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE . LBRACE def_else statute RBRACE

    LBRACE          shift and go to state 91


state 91

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE . def_else statute RBRACE
    (19) def_else -> . empty
    (41) empty -> .

    ID              reduce using rule 41 (empty -> .)
    IF              reduce using rule 41 (empty -> .)
    WHILE           reduce using rule 41 (empty -> .)
    RETURN          reduce using rule 41 (empty -> .)
    RBRACE          reduce using rule 41 (empty -> .)

    def_else                       shift and go to state 92
    empty                          shift and go to state 93

state 92

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else . statute RBRACE
    (11) statute -> . assignation statute
    (12) statute -> . decision statute
    (13) statute -> . condition statute
    (14) statute -> . return statute
    (15) statute -> . empty
    (16) assignation -> . ID EQUAL expression SEMICOLON
    (17) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE
    (18) decision -> . IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE
    (20) condition -> . WHILE LPAREN expression_bool_while RPAREN DO LBRACE statute RBRACE
    (27) return -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) empty -> .

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 41 (empty -> .)

    statute                        shift and go to state 94
    assignation                    shift and go to state 13
    decision                       shift and go to state 14
    condition                      shift and go to state 15
    return                         shift and go to state 16
    empty                          shift and go to state 17

state 93

    (19) def_else -> empty .

    ID              reduce using rule 19 (def_else -> empty .)
    IF              reduce using rule 19 (def_else -> empty .)
    WHILE           reduce using rule 19 (def_else -> empty .)
    RETURN          reduce using rule 19 (def_else -> empty .)
    RBRACE          reduce using rule 19 (def_else -> empty .)


state 94

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute . RBRACE

    RBRACE          shift and go to state 95


state 95

    (17) decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .

    ID              reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    IF              reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    WHILE           reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RETURN          reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)
    RBRACE          reduce using rule 17 (decision -> IF LPAREN expression_bool RPAREN THEN LBRACE statute RBRACE ELSE LBRACE def_else statute RBRACE .)

